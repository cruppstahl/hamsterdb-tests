running ../../testfiles/1/45.tst --reopen=1    
==30979== Memcheck, a memory error detector
==30979== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==30979== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==30979== Command: ./test ../../testfiles/1/45.tst --reopen=1
==30979== 
==30979== Thread 3:
==30979== Conditional jump or move depends on uninitialised value(s)
==30979==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==30979==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==30979==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==30979==    by 0x418DC5: Thread::run() (thread.hpp:73)
==30979==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==30979==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==30979==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==30979== 
==30979== Syscall param pwrite64(buf) points to uninitialised byte(s)
==30979==    at 0x53CF6C3: ??? (syscall-template.S:82)
==30979==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==30979==    by 0x415D68: Engine::flush() (engine.cpp:315)
==30979==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==30979==    by 0x418DC5: Thread::run() (thread.hpp:73)
==30979==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==30979==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==30979==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==30979==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30979==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==30979== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.954000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.045000
	perf-misc  			1.408000
	perf-total		13.407000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.984000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.859000
	perf-misc  			1.402000
	perf-total		9.245000
==30979== 
==30979== HEAP SUMMARY:
==30979==     in use at exit: 8 bytes in 1 blocks
==30979==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==30979== 
==30979== LEAK SUMMARY:
==30979==    definitely lost: 0 bytes in 0 blocks
==30979==    indirectly lost: 0 bytes in 0 blocks
==30979==      possibly lost: 0 bytes in 0 blocks
==30979==    still reachable: 8 bytes in 1 blocks
==30979==         suppressed: 0 bytes in 0 blocks
==30979== Rerun with --leak-check=full to see details of leaked memory
==30979== 
==30979== For counts of detected and suppressed errors, rerun with: -v
==30979== Use --track-origins=yes to see where uninitialised values come from
==30979== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --reopen=1    
==30984== Memcheck, a memory error detector
==30984== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==30984== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==30984== Command: ./test ../../testfiles/1/220.tst --reopen=1
==30984== 
==30984== Thread 3:
==30984== Conditional jump or move depends on uninitialised value(s)
==30984==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==30984==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==30984==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==30984==    by 0x418DC5: Thread::run() (thread.hpp:73)
==30984==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==30984==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==30984==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==30984== 
==30984== Syscall param pwrite64(buf) points to uninitialised byte(s)
==30984==    at 0x53CF6C3: ??? (syscall-template.S:82)
==30984==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==  Address 0xaebb2b2 is 130 bytes inside a block of size 4,184 alloc'd
==30984==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==30984==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30984==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==30984== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.839000
	perf-erase 			0.392000
	perf-find  			0.000000
	perf-insert			0.807000
	perf-misc  			0.615000
	perf-total		8.653000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.686000
	perf-erase 			0.207000
	perf-find  			0.000000
	perf-insert			0.454000
	perf-misc  			0.672000
	perf-total		5.019000
==30984== 
==30984== HEAP SUMMARY:
==30984==     in use at exit: 8 bytes in 1 blocks
==30984==   total heap usage: 91,101 allocs, 91,100 frees, 110,376,567 bytes allocated
==30984== 
==30984== LEAK SUMMARY:
==30984==    definitely lost: 0 bytes in 0 blocks
==30984==    indirectly lost: 0 bytes in 0 blocks
==30984==      possibly lost: 0 bytes in 0 blocks
==30984==    still reachable: 8 bytes in 1 blocks
==30984==         suppressed: 0 bytes in 0 blocks
==30984== Rerun with --leak-check=full to see details of leaked memory
==30984== 
==30984== For counts of detected and suppressed errors, rerun with: -v
==30984== Use --track-origins=yes to see where uninitialised values come from
==30984== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --reopen=1    
==30989== Memcheck, a memory error detector
==30989== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==30989== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==30989== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1
==30989== 
==30989== Thread 3:
==30989== Conditional jump or move depends on uninitialised value(s)
==30989==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==30989==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==30989==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==30989==    by 0x418DC5: Thread::run() (thread.hpp:73)
==30989==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==30989==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==30989==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==30989== 
==30989== Syscall param pwrite64(buf) points to uninitialised byte(s)
==30989==    at 0x53CF6C3: ??? (syscall-template.S:82)
==30989==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==30989==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==30989==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==30989==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==30989==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==30989==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30989==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==30989== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.046000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.100000
	perf-misc  			0.609000
	perf-total		0.755000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.035000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.113000
	perf-misc  			0.584000
	perf-total		0.732000
==30989== 
==30989== HEAP SUMMARY:
==30989==     in use at exit: 8 bytes in 1 blocks
==30989==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==30989== 
==30989== LEAK SUMMARY:
==30989==    definitely lost: 0 bytes in 0 blocks
==30989==    indirectly lost: 0 bytes in 0 blocks
==30989==      possibly lost: 0 bytes in 0 blocks
==30989==    still reachable: 8 bytes in 1 blocks
==30989==         suppressed: 0 bytes in 0 blocks
==30989== Rerun with --leak-check=full to see details of leaked memory
==30989== 
==30989== For counts of detected and suppressed errors, rerun with: -v
==30989== Use --track-origins=yes to see where uninitialised values come from
==30989== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --reopen=1    
==30994== Memcheck, a memory error detector
==30994== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==30994== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==30994== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1
==30994== 
==30994== Thread 3:
==30994== Conditional jump or move depends on uninitialised value(s)
==30994==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==30994==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==30994==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==30994==    by 0x418DC5: Thread::run() (thread.hpp:73)
==30994==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==30994==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==30994==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==30994== 
==30994== Syscall param pwrite64(buf) points to uninitialised byte(s)
==30994==    at 0x53CF6C3: ??? (syscall-template.S:82)
==30994==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==30994==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==30994==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==30994==  Address 0xb27beba is 410 bytes inside a block of size 4,184 alloc'd
==30994==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==30994==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==30994==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==30994== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.157998
	perf-erase 			0.637000
	perf-find  			1.085000
	perf-insert			1.278000
	perf-misc  			0.556000
	perf-total		45.714002
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			31.335000
	perf-erase 			0.369000
	perf-find  			0.750000
	perf-insert			0.826000
	perf-misc  			0.650000
	perf-total		33.930000
==30994== 
==30994== HEAP SUMMARY:
==30994==     in use at exit: 8 bytes in 1 blocks
==30994==   total heap usage: 1,065,674 allocs, 1,065,673 frees, 142,533,470 bytes allocated
==30994== 
==30994== LEAK SUMMARY:
==30994==    definitely lost: 0 bytes in 0 blocks
==30994==    indirectly lost: 0 bytes in 0 blocks
==30994==      possibly lost: 0 bytes in 0 blocks
==30994==    still reachable: 8 bytes in 1 blocks
==30994==         suppressed: 0 bytes in 0 blocks
==30994== Rerun with --leak-check=full to see details of leaked memory
==30994== 
==30994== For counts of detected and suppressed errors, rerun with: -v
==30994== Use --track-origins=yes to see where uninitialised values come from
==30994== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --reopen=1    
==31005== Memcheck, a memory error detector
==31005== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31005== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31005== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1
==31005== 
==31005== Thread 3:
==31005== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31005==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31005==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31005==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31005==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31005==  Address 0xac41c00 is 3,984 bytes inside a block of size 4,184 alloc'd
==31005==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31005==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31005== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.357000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.858000
	perf-misc  			0.611000
	perf-total		9.826000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.164000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.754000
	perf-misc  			0.724000
	perf-total		2.642000
==31005== 
==31005== HEAP SUMMARY:
==31005==     in use at exit: 8 bytes in 1 blocks
==31005==   total heap usage: 1,571 allocs, 1,570 frees, 268,420,656 bytes allocated
==31005== 
==31005== LEAK SUMMARY:
==31005==    definitely lost: 0 bytes in 0 blocks
==31005==    indirectly lost: 0 bytes in 0 blocks
==31005==      possibly lost: 0 bytes in 0 blocks
==31005==    still reachable: 8 bytes in 1 blocks
==31005==         suppressed: 0 bytes in 0 blocks
==31005== Rerun with --leak-check=full to see details of leaked memory
==31005== 
==31005== For counts of detected and suppressed errors, rerun with: -v
==31005== Use --track-origins=yes to see where uninitialised values come from
==31005== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --overwrite=1 --reopen=1    
==31011== Memcheck, a memory error detector
==31011== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31011== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31011== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --reopen=1
==31011== 
==31011== Thread 3:
==31011== Conditional jump or move depends on uninitialised value(s)
==31011==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31011==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31011==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31011==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31011==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31011==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31011==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31011== 
==31011== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31011==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31011==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31011==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31011==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31011==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31011==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31011==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31011==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31011==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31011==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31011== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.857000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.991000
	perf-misc  			1.368000
	perf-total		13.216000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.878000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.811000
	perf-misc  			1.323000
	perf-total		9.012000
==31011== 
==31011== HEAP SUMMARY:
==31011==     in use at exit: 8 bytes in 1 blocks
==31011==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31011== 
==31011== LEAK SUMMARY:
==31011==    definitely lost: 0 bytes in 0 blocks
==31011==    indirectly lost: 0 bytes in 0 blocks
==31011==      possibly lost: 0 bytes in 0 blocks
==31011==    still reachable: 8 bytes in 1 blocks
==31011==         suppressed: 0 bytes in 0 blocks
==31011== Rerun with --leak-check=full to see details of leaked memory
==31011== 
==31011== For counts of detected and suppressed errors, rerun with: -v
==31011== Use --track-origins=yes to see where uninitialised values come from
==31011== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --overwrite=1 --reopen=1    
==31016== Memcheck, a memory error detector
==31016== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31016== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31016== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --reopen=1
==31016== 
==31016== Thread 3:
==31016== Conditional jump or move depends on uninitialised value(s)
==31016==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31016==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31016==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31016==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31016==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31016==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31016==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31016== 
==31016== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31016==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31016==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==  Address 0xaeb8aa2 is 130 bytes inside a block of size 4,184 alloc'd
==31016==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31016==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31016==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31016== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.975000
	perf-erase 			0.399000
	perf-find  			0.000000
	perf-insert			0.965000
	perf-misc  			0.593000
	perf-total		8.932000
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.751000
	perf-erase 			0.217000
	perf-find  			0.000000
	perf-insert			0.520000
	perf-misc  			0.641000
	perf-total		5.129000
==31016== 
==31016== HEAP SUMMARY:
==31016==     in use at exit: 8 bytes in 1 blocks
==31016==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31016== 
==31016== LEAK SUMMARY:
==31016==    definitely lost: 0 bytes in 0 blocks
==31016==    indirectly lost: 0 bytes in 0 blocks
==31016==      possibly lost: 0 bytes in 0 blocks
==31016==    still reachable: 8 bytes in 1 blocks
==31016==         suppressed: 0 bytes in 0 blocks
==31016== Rerun with --leak-check=full to see details of leaked memory
==31016== 
==31016== For counts of detected and suppressed errors, rerun with: -v
==31016== Use --track-origins=yes to see where uninitialised values come from
==31016== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1    
==31021== Memcheck, a memory error detector
==31021== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31021== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31021== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1
==31021== 
==31021== Thread 3:
==31021== Conditional jump or move depends on uninitialised value(s)
==31021==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31021==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31021==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31021==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31021==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31021==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31021==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31021== 
==31021== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31021==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31021==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31021==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31021==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31021==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31021==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31021==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31021==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31021== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.042000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.110000
	perf-misc  			0.493000
	perf-total		0.645000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.036000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.109000
	perf-misc  			0.456000
	perf-total		0.601000
==31021== 
==31021== HEAP SUMMARY:
==31021==     in use at exit: 8 bytes in 1 blocks
==31021==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31021== 
==31021== LEAK SUMMARY:
==31021==    definitely lost: 0 bytes in 0 blocks
==31021==    indirectly lost: 0 bytes in 0 blocks
==31021==      possibly lost: 0 bytes in 0 blocks
==31021==    still reachable: 8 bytes in 1 blocks
==31021==         suppressed: 0 bytes in 0 blocks
==31021== Rerun with --leak-check=full to see details of leaked memory
==31021== 
==31021== For counts of detected and suppressed errors, rerun with: -v
==31021== Use --track-origins=yes to see where uninitialised values come from
==31021== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1    
==31026== Memcheck, a memory error detector
==31026== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31026== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31026== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1
==31026== 
==31026== Thread 3:
==31026== Conditional jump or move depends on uninitialised value(s)
==31026==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31026==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31026==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31026==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31026==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31026==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31026==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31026== 
==31026== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31026==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31026==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31026==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31026==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31026==  Address 0xb27f2d2 is 418 bytes inside a block of size 4,184 alloc'd
==31026==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31026==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31026==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31026== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.854998
	perf-erase 			0.606000
	perf-find  			1.094000
	perf-insert			1.843000
	perf-misc  			0.583000
	perf-total		46.981001
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			32.586000
	perf-erase 			0.387000
	perf-find  			0.742000
	perf-insert			1.235000
	perf-misc  			0.541000
	perf-total		35.491000
==31026== 
==31026== HEAP SUMMARY:
==31026==     in use at exit: 8 bytes in 1 blocks
==31026==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31026== 
==31026== LEAK SUMMARY:
==31026==    definitely lost: 0 bytes in 0 blocks
==31026==    indirectly lost: 0 bytes in 0 blocks
==31026==      possibly lost: 0 bytes in 0 blocks
==31026==    still reachable: 8 bytes in 1 blocks
==31026==         suppressed: 0 bytes in 0 blocks
==31026== Rerun with --leak-check=full to see details of leaked memory
==31026== 
==31026== For counts of detected and suppressed errors, rerun with: -v
==31026== Use --track-origins=yes to see where uninitialised values come from
==31026== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1    
==31031== Memcheck, a memory error detector
==31031== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31031== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31031== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1
==31031== 
==31031== Thread 3:
==31031== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31031==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31031==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31031==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31031==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31031==  Address 0xac41a74 is 3,588 bytes inside a block of size 4,184 alloc'd
==31031==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31031==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31031== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.716000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			6.126000
	perf-misc  			1.336000
	perf-total		8.178000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.151000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.334000
	perf-misc  			1.306000
	perf-total		4.791000
==31031== 
==31031== HEAP SUMMARY:
==31031==     in use at exit: 8 bytes in 1 blocks
==31031==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31031== 
==31031== LEAK SUMMARY:
==31031==    definitely lost: 0 bytes in 0 blocks
==31031==    indirectly lost: 0 bytes in 0 blocks
==31031==      possibly lost: 0 bytes in 0 blocks
==31031==    still reachable: 8 bytes in 1 blocks
==31031==         suppressed: 0 bytes in 0 blocks
==31031== Rerun with --leak-check=full to see details of leaked memory
==31031== 
==31031== For counts of detected and suppressed errors, rerun with: -v
==31031== Use --track-origins=yes to see where uninitialised values come from
==31031== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --duplicate=1 --reopen=1    
==31037== Memcheck, a memory error detector
==31037== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31037== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31037== Command: ./test ../../testfiles/1/45.tst --duplicate=1 --reopen=1
==31037== 
==31037== Thread 3:
==31037== Conditional jump or move depends on uninitialised value(s)
==31037==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31037==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31037==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31037==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31037==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31037==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31037==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31037== 
==31037== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31037==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31037==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31037==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31037==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31037==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31037==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31037==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31037==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31037==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31037==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31037== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.723000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.007000
	perf-misc  			1.267000
	perf-total		12.997000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.670000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.852000
	perf-misc  			1.220000
	perf-total		8.742000
==31037== 
==31037== HEAP SUMMARY:
==31037==     in use at exit: 8 bytes in 1 blocks
==31037==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31037== 
==31037== LEAK SUMMARY:
==31037==    definitely lost: 0 bytes in 0 blocks
==31037==    indirectly lost: 0 bytes in 0 blocks
==31037==      possibly lost: 0 bytes in 0 blocks
==31037==    still reachable: 8 bytes in 1 blocks
==31037==         suppressed: 0 bytes in 0 blocks
==31037== Rerun with --leak-check=full to see details of leaked memory
==31037== 
==31037== For counts of detected and suppressed errors, rerun with: -v
==31037== Use --track-origins=yes to see where uninitialised values come from
==31037== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --duplicate=1 --reopen=1    
==31042== Memcheck, a memory error detector
==31042== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31042== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31042== Command: ./test ../../testfiles/1/220.tst --duplicate=1 --reopen=1
==31042== 
==31042== Thread 3:
==31042== Conditional jump or move depends on uninitialised value(s)
==31042==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31042==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31042==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31042==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31042==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31042==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31042==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31042== 
==31042== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31042==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31042==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==  Address 0xae78748 is 120 bytes inside a block of size 4,184 alloc'd
==31042==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31042==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31042==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31042== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		1548288
	perf-cursor			11.711000
	perf-erase 			0.702000
	perf-find  			0.000000
	perf-insert			1.162000
	perf-misc  			0.619000
	perf-total		14.194000
hamsterdb
	filesize		835584
	mem-num-allocs		5138
	mem-peak-bytes		284
	mem-total-bytes		360584
	perf-cursor			6.527000
	perf-erase 			0.248000
	perf-find  			0.000000
	perf-insert			0.687000
	perf-misc  			0.777000
	perf-total		8.239000
==31042== 
==31042== HEAP SUMMARY:
==31042==     in use at exit: 8 bytes in 1 blocks
==31042==   total heap usage: 93,821 allocs, 93,820 frees, 111,074,754 bytes allocated
==31042== 
==31042== LEAK SUMMARY:
==31042==    definitely lost: 0 bytes in 0 blocks
==31042==    indirectly lost: 0 bytes in 0 blocks
==31042==      possibly lost: 0 bytes in 0 blocks
==31042==    still reachable: 8 bytes in 1 blocks
==31042==         suppressed: 0 bytes in 0 blocks
==31042== Rerun with --leak-check=full to see details of leaked memory
==31042== 
==31042== For counts of detected and suppressed errors, rerun with: -v
==31042== Use --track-origins=yes to see where uninitialised values come from
==31042== ERROR SUMMARY: 783 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --duplicate=1 --reopen=1    
==31048== Memcheck, a memory error detector
==31048== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31048== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31048== Command: ./test ../../testfiles/1/ext_020.tst --duplicate=1 --reopen=1
==31048== 
==31048== Thread 3:
==31048== Conditional jump or move depends on uninitialised value(s)
==31048==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31048==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31048==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31048==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31048==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31048==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31048==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31048== 
==31048== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31048==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31048==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31048==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31048==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31048==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31048==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31048==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31048==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31048== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.041000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.106000
	perf-misc  			0.535000
	perf-total		0.682000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.032000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.112000
	perf-misc  			0.497000
	perf-total		0.641000
==31048== 
==31048== HEAP SUMMARY:
==31048==     in use at exit: 8 bytes in 1 blocks
==31048==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31048== 
==31048== LEAK SUMMARY:
==31048==    definitely lost: 0 bytes in 0 blocks
==31048==    indirectly lost: 0 bytes in 0 blocks
==31048==      possibly lost: 0 bytes in 0 blocks
==31048==    still reachable: 8 bytes in 1 blocks
==31048==         suppressed: 0 bytes in 0 blocks
==31048== Rerun with --leak-check=full to see details of leaked memory
==31048== 
==31048== For counts of detected and suppressed errors, rerun with: -v
==31048== Use --track-origins=yes to see where uninitialised values come from
==31048== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --duplicate=1 --reopen=1    
==31053== Memcheck, a memory error detector
==31053== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31053== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31053== Command: ./test ../../testfiles/2/ext_060.tst --duplicate=1 --reopen=1
==31053== 
==31053== Thread 3:
==31053== Conditional jump or move depends on uninitialised value(s)
==31053==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31053==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31053==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31053==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31053==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31053==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31053==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31053== 
==31053== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31053==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31053==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==  Address 0x128b6456 is 550 bytes inside a block of size 4,184 alloc'd
==31053==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31053==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31053==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31053== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			760.561009
	perf-erase 			1.051000
	perf-find  			2.007000
	perf-insert			3.343000
	perf-misc  			0.607000
	perf-total		767.568970
hamsterdb
	filesize		1261568
	mem-num-allocs		8552077
	mem-peak-bytes		8772
	mem-total-bytes		237226933
	perf-cursor			653.439009
	perf-erase 			0.407000
	perf-find  			1.369000
	perf-insert			2.009000
	perf-misc  			0.669000
	perf-total		657.893032
==31053== 
==31053== HEAP SUMMARY:
==31053==     in use at exit: 8 bytes in 1 blocks
==31053==   total heap usage: 9,202,824 allocs, 9,202,823 frees, 464,202,879 bytes allocated
==31053== 
==31053== LEAK SUMMARY:
==31053==    definitely lost: 0 bytes in 0 blocks
==31053==    indirectly lost: 0 bytes in 0 blocks
==31053==      possibly lost: 0 bytes in 0 blocks
==31053==    still reachable: 8 bytes in 1 blocks
==31053==         suppressed: 0 bytes in 0 blocks
==31053== Rerun with --leak-check=full to see details of leaked memory
==31053== 
==31053== For counts of detected and suppressed errors, rerun with: -v
==31053== Use --track-origins=yes to see where uninitialised values come from
==31053== ERROR SUMMARY: 433 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --duplicate=1 --reopen=1    
==31075== Memcheck, a memory error detector
==31075== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31075== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31075== Command: ./test ../../testfiles/2/blb-001.tst --duplicate=1 --reopen=1
==31075== 
==31075== Thread 3:
==31075== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31075==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31075==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31075==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31075==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31075==  Address 0xac41d68 is 3,576 bytes inside a block of size 4,184 alloc'd
==31075==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31075==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31075== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.298000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.831000
	perf-misc  			0.743000
	perf-total		9.872000
hamsterdb
	filesize		50315264
	mem-num-allocs		15
	mem-peak-bytes		144
	mem-total-bytes		192
	perf-cursor			1.175000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.846000
	perf-misc  			0.759000
	perf-total		2.780000
==31075== 
==31075== HEAP SUMMARY:
==31075==     in use at exit: 8 bytes in 1 blocks
==31075==   total heap usage: 1,574 allocs, 1,573 frees, 268,420,833 bytes allocated
==31075== 
==31075== LEAK SUMMARY:
==31075==    definitely lost: 0 bytes in 0 blocks
==31075==    indirectly lost: 0 bytes in 0 blocks
==31075==      possibly lost: 0 bytes in 0 blocks
==31075==    still reachable: 8 bytes in 1 blocks
==31075==         suppressed: 0 bytes in 0 blocks
==31075== Rerun with --leak-check=full to see details of leaked memory
==31075== 
==31075== For counts of detected and suppressed errors, rerun with: -v
==31075== Use --track-origins=yes to see where uninitialised values come from
==31075== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==31081== Memcheck, a memory error detector
==31081== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31081== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31081== Command: ./test ../../testfiles/1/45.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==31081== 
==31081== Thread 3:
==31081== Conditional jump or move depends on uninitialised value(s)
==31081==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31081==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31081==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31081==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31081==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31081==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31081==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31081== 
==31081== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31081==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31081==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31081==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31081==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31081==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31081==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31081==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31081==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31081==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31081==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31081== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.056000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.999000
	perf-misc  			1.470000
	perf-total		13.525000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.697000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.840000
	perf-misc  			1.465000
	perf-total		9.002000
==31081== 
==31081== HEAP SUMMARY:
==31081==     in use at exit: 8 bytes in 1 blocks
==31081==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31081== 
==31081== LEAK SUMMARY:
==31081==    definitely lost: 0 bytes in 0 blocks
==31081==    indirectly lost: 0 bytes in 0 blocks
==31081==      possibly lost: 0 bytes in 0 blocks
==31081==    still reachable: 8 bytes in 1 blocks
==31081==         suppressed: 0 bytes in 0 blocks
==31081== Rerun with --leak-check=full to see details of leaked memory
==31081== 
==31081== For counts of detected and suppressed errors, rerun with: -v
==31081== Use --track-origins=yes to see where uninitialised values come from
==31081== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==31086== Memcheck, a memory error detector
==31086== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31086== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31086== Command: ./test ../../testfiles/1/220.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==31086== 
==31086== Thread 3:
==31086== Conditional jump or move depends on uninitialised value(s)
==31086==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31086==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31086==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31086==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31086==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31086==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31086==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31086== 
==31086== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31086==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31086==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==  Address 0xae7df18 is 120 bytes inside a block of size 4,184 alloc'd
==31086==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31086==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31086== 
==31086== Conditional jump or move depends on uninitialised value(s)
==31086==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4EF65FD: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31086==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31086==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31086==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31086==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31086==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31086==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31086==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31086== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		1548288
	perf-cursor			11.338000
	perf-erase 			0.702000
	perf-find  			0.000000
	perf-insert			1.205000
	perf-misc  			0.389000
	perf-total		13.634000
hamsterdb
	filesize		835584
	mem-num-allocs		5138
	mem-peak-bytes		540
	mem-total-bytes		360840
	perf-cursor			6.496000
	perf-erase 			0.232000
	perf-find  			0.000000
	perf-insert			0.731000
	perf-misc  			0.707000
	perf-total		8.166000
==31086== 
==31086== HEAP SUMMARY:
==31086==     in use at exit: 8 bytes in 1 blocks
==31086==   total heap usage: 93,881 allocs, 93,880 frees, 111,126,285 bytes allocated
==31086== 
==31086== LEAK SUMMARY:
==31086==    definitely lost: 0 bytes in 0 blocks
==31086==    indirectly lost: 0 bytes in 0 blocks
==31086==      possibly lost: 0 bytes in 0 blocks
==31086==    still reachable: 8 bytes in 1 blocks
==31086==         suppressed: 0 bytes in 0 blocks
==31086== Rerun with --leak-check=full to see details of leaked memory
==31086== 
==31086== For counts of detected and suppressed errors, rerun with: -v
==31086== Use --track-origins=yes to see where uninitialised values come from
==31086== ERROR SUMMARY: 785 errors from 3 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==31091== Memcheck, a memory error detector
==31091== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31091== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31091== Command: ./test ../../testfiles/1/ext_020.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==31091== 
==31091== Thread 3:
==31091== Conditional jump or move depends on uninitialised value(s)
==31091==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31091==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31091==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31091==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31091==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31091==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31091==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31091== 
==31091== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31091==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31091==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31091==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31091==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31091==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31091==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31091==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31091==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31091== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.049000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.116000
	perf-misc  			0.612000
	perf-total		0.777000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.026000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.110000
	perf-misc  			0.516000
	perf-total		0.652000
==31091== 
==31091== HEAP SUMMARY:
==31091==     in use at exit: 8 bytes in 1 blocks
==31091==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31091== 
==31091== LEAK SUMMARY:
==31091==    definitely lost: 0 bytes in 0 blocks
==31091==    indirectly lost: 0 bytes in 0 blocks
==31091==      possibly lost: 0 bytes in 0 blocks
==31091==    still reachable: 8 bytes in 1 blocks
==31091==         suppressed: 0 bytes in 0 blocks
==31091== Rerun with --leak-check=full to see details of leaked memory
==31091== 
==31091== For counts of detected and suppressed errors, rerun with: -v
==31091== Use --track-origins=yes to see where uninitialised values come from
==31091== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==31096== Memcheck, a memory error detector
==31096== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31096== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31096== Command: ./test ../../testfiles/2/ext_060.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==31096== 
==31096== Thread 3:
==31096== Conditional jump or move depends on uninitialised value(s)
==31096==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31096==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31096==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31096==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31096==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31096==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31096==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31096== 
==31096== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31096==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31096==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==  Address 0x128b712f is 3,263 bytes inside a block of size 4,184 alloc'd
==31096==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31096==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31096==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31096== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			727.323967
	perf-erase 			1.100000
	perf-find  			2.087000
	perf-insert			3.424000
	perf-misc  			0.560000
	perf-total		734.494982
hamsterdb
	filesize		1261568
	mem-num-allocs		8551395
	mem-peak-bytes		8806
	mem-total-bytes		236762527
	perf-cursor			659.391971
	perf-erase 			0.394000
	perf-find  			1.370000
	perf-insert			2.626000
	perf-misc  			0.525000
	perf-total		664.306975
==31096== 
==31096== HEAP SUMMARY:
==31096==     in use at exit: 8 bytes in 1 blocks
==31096==   total heap usage: 9,202,167 allocs, 9,202,166 frees, 463,730,884 bytes allocated
==31096== 
==31096== LEAK SUMMARY:
==31096==    definitely lost: 0 bytes in 0 blocks
==31096==    indirectly lost: 0 bytes in 0 blocks
==31096==      possibly lost: 0 bytes in 0 blocks
==31096==    still reachable: 8 bytes in 1 blocks
==31096==         suppressed: 0 bytes in 0 blocks
==31096== Rerun with --leak-check=full to see details of leaked memory
==31096== 
==31096== For counts of detected and suppressed errors, rerun with: -v
==31096== Use --track-origins=yes to see where uninitialised values come from
==31096== ERROR SUMMARY: 432 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==31122== Memcheck, a memory error detector
==31122== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31122== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31122== Command: ./test ../../testfiles/2/blb-001.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==31122== 
==31122== Thread 3:
==31122== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31122==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31122==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31122==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31122==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31122==  Address 0xac41f68 is 3,576 bytes inside a block of size 4,184 alloc'd
==31122==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31122==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31122== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.196000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.386000
	perf-misc  			0.635000
	perf-total		8.217000
hamsterdb
	filesize		50315264
	mem-num-allocs		16
	mem-peak-bytes		40485904
	mem-total-bytes		40485952
	perf-cursor			1.178000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.845000
	perf-misc  			0.683000
	perf-total		3.706000
==31122== 
==31122== HEAP SUMMARY:
==31122==     in use at exit: 8 bytes in 1 blocks
==31122==   total heap usage: 1,575 allocs, 1,574 frees, 308,906,604 bytes allocated
==31122== 
==31122== LEAK SUMMARY:
==31122==    definitely lost: 0 bytes in 0 blocks
==31122==    indirectly lost: 0 bytes in 0 blocks
==31122==      possibly lost: 0 bytes in 0 blocks
==31122==    still reachable: 8 bytes in 1 blocks
==31122==         suppressed: 0 bytes in 0 blocks
==31122== Rerun with --leak-check=full to see details of leaked memory
==31122== 
==31122== For counts of detected and suppressed errors, rerun with: -v
==31122== Use --track-origins=yes to see where uninitialised values come from
==31122== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==31128== Memcheck, a memory error detector
==31128== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31128== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31128== Command: ./test ../../testfiles/1/45.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==31128== 
==31128== Thread 3:
==31128== Conditional jump or move depends on uninitialised value(s)
==31128==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31128==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31128==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31128==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31128==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31128==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31128==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31128==    by 0x41B55B: boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > > >::run() (thread.hpp:62)
==31128== 
==31128== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31128==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31128==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31128==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31128==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31128==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31128==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31128==  Address 0xad30536 is 214 bytes inside a block of size 4,184 alloc'd
==31128==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31128==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31128==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31128==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31128== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			12.028000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			1.424000
	perf-total		13.452000
hamsterdb
	filesize		966656
	mem-num-allocs		3193
	mem-peak-bytes		44
	mem-total-bytes		16572
	perf-cursor			7.600000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			1.350000
	perf-total		8.950000
==31128== 
==31128== HEAP SUMMARY:
==31128==     in use at exit: 8 bytes in 1 blocks
==31128==   total heap usage: 103,713 allocs, 103,712 frees, 111,028,582 bytes allocated
==31128== 
==31128== LEAK SUMMARY:
==31128==    definitely lost: 0 bytes in 0 blocks
==31128==    indirectly lost: 0 bytes in 0 blocks
==31128==      possibly lost: 0 bytes in 0 blocks
==31128==    still reachable: 8 bytes in 1 blocks
==31128==         suppressed: 0 bytes in 0 blocks
==31128== Rerun with --leak-check=full to see details of leaked memory
==31128== 
==31128== For counts of detected and suppressed errors, rerun with: -v
==31128== Use --track-origins=yes to see where uninitialised values come from
==31128== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==31133== Memcheck, a memory error detector
==31133== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31133== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31133== Command: ./test ../../testfiles/1/220.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==31133== 
==31133== Thread 3:
==31133== Conditional jump or move depends on uninitialised value(s)
==31133==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31133==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31133==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31133==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31133==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31133==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31133==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31133==    by 0x41B55B: boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > > >::run() (thread.hpp:62)
==31133== 
==31133== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31133==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31133==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31133==  Address 0xae7ce56 is 134 bytes inside a block of size 4,184 alloc'd
==31133==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31133==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31133==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31133==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31133== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		2736128
	perf-cursor			18.496999
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.705000
	perf-total		19.202001
hamsterdb
	filesize		1294336
	mem-num-allocs		7318
	mem-peak-bytes		284
	mem-total-bytes		325496
	perf-cursor			10.228000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.675000
	perf-total		10.903000
==31133== 
==31133== HEAP SUMMARY:
==31133==     in use at exit: 8 bytes in 1 blocks
==31133==   total heap usage: 96,018 allocs, 96,017 frees, 110,852,448 bytes allocated
==31133== 
==31133== LEAK SUMMARY:
==31133==    definitely lost: 0 bytes in 0 blocks
==31133==    indirectly lost: 0 bytes in 0 blocks
==31133==      possibly lost: 0 bytes in 0 blocks
==31133==    still reachable: 8 bytes in 1 blocks
==31133==         suppressed: 0 bytes in 0 blocks
==31133== Rerun with --leak-check=full to see details of leaked memory
==31133== 
==31133== For counts of detected and suppressed errors, rerun with: -v
==31133== Use --track-origins=yes to see where uninitialised values come from
==31133== ERROR SUMMARY: 766 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==31144== Memcheck, a memory error detector
==31144== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31144== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31144== Command: ./test ../../testfiles/1/ext_020.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==31144== 
==31144== Thread 3:
==31144== Conditional jump or move depends on uninitialised value(s)
==31144==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31144==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31144==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31144==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31144==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31144==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31144==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31144==    by 0x41B55B: boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > > >::run() (thread.hpp:62)
==31144== 
==31144== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31144==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31144==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31144==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31144==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31144==  Address 0xac60f6e is 126 bytes inside a block of size 4,184 alloc'd
==31144==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31144==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31144==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31144==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31144== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.151000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.557000
	perf-total		0.708000
hamsterdb
	filesize		65536
	mem-num-allocs		275
	mem-peak-bytes		13724
	mem-total-bytes		112476
	perf-cursor			0.151000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.544000
	perf-total		0.695000
==31144== 
==31144== HEAP SUMMARY:
==31144==     in use at exit: 8 bytes in 1 blocks
==31144==   total heap usage: 2,010 allocs, 2,009 frees, 106,443,975 bytes allocated
==31144== 
==31144== LEAK SUMMARY:
==31144==    definitely lost: 0 bytes in 0 blocks
==31144==    indirectly lost: 0 bytes in 0 blocks
==31144==      possibly lost: 0 bytes in 0 blocks
==31144==    still reachable: 8 bytes in 1 blocks
==31144==         suppressed: 0 bytes in 0 blocks
==31144== Rerun with --leak-check=full to see details of leaked memory
==31144== 
==31144== For counts of detected and suppressed errors, rerun with: -v
==31144== Use --track-origins=yes to see where uninitialised values come from
==31144== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==31149== Memcheck, a memory error detector
==31149== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31149== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31149== Command: ./test ../../testfiles/2/ext_060.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==31149== 
==31149== Thread 3:
==31149== Conditional jump or move depends on uninitialised value(s)
==31149==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31149==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31149==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31149==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31149==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31149==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31149==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31149==    by 0x41B55B: boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > > >::run() (thread.hpp:62)
==31149== 
==31149== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31149==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31149==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31149==  Address 0x1280353a is 682 bytes inside a block of size 4,184 alloc'd
==31149==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31149==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31149==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31149==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31149== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1519616
	perf-cursor			776.007975
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.681000
	perf-total		776.689025
hamsterdb
	filesize		1261568
	mem-num-allocs		8552217
	mem-peak-bytes		8772
	mem-total-bytes		237229750
	perf-cursor			657.076978
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.721000
	perf-total		657.798005
==31149== 
==31149== HEAP SUMMARY:
==31149==     in use at exit: 8 bytes in 1 blocks
==31149==   total heap usage: 9,173,786 allocs, 9,173,785 frees, 458,714,218 bytes allocated
==31149== 
==31149== LEAK SUMMARY:
==31149==    definitely lost: 0 bytes in 0 blocks
==31149==    indirectly lost: 0 bytes in 0 blocks
==31149==      possibly lost: 0 bytes in 0 blocks
==31149==    still reachable: 8 bytes in 1 blocks
==31149==         suppressed: 0 bytes in 0 blocks
==31149== Rerun with --leak-check=full to see details of leaked memory
==31149== 
==31149== For counts of detected and suppressed errors, rerun with: -v
==31149== Use --track-origins=yes to see where uninitialised values come from
==31149== ERROR SUMMARY: 434 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==31178== Memcheck, a memory error detector
==31178== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31178== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31178== Command: ./test ../../testfiles/2/blb-001.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==31178== 
==31178== Thread 3:
==31178== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31178==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31178==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31178==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31178==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31178==  Address 0xac41f68 is 3,576 bytes inside a block of size 4,184 alloc'd
==31178==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31178==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x4F055F0: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31178==    by 0x42635C: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:206)
==31178== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			7.835000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.636000
	perf-total		8.471000
hamsterdb
	filesize		50315264
	mem-num-allocs		15
	mem-peak-bytes		144
	mem-total-bytes		192
	perf-cursor			3.344000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.679000
	perf-total		4.023000
==31178== 
==31178== HEAP SUMMARY:
==31178==     in use at exit: 8 bytes in 1 blocks
==31178==   total heap usage: 1,576 allocs, 1,575 frees, 268,421,641 bytes allocated
==31178== 
==31178== LEAK SUMMARY:
==31178==    definitely lost: 0 bytes in 0 blocks
==31178==    indirectly lost: 0 bytes in 0 blocks
==31178==      possibly lost: 0 bytes in 0 blocks
==31178==    still reachable: 8 bytes in 1 blocks
==31178==         suppressed: 0 bytes in 0 blocks
==31178== Rerun with --leak-check=full to see details of leaked memory
==31178== 
==31178== For counts of detected and suppressed errors, rerun with: -v
==31178== Use --track-origins=yes to see where uninitialised values come from
==31178== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --inmemorydb=1    
==31184== Memcheck, a memory error detector
==31184== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31184== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31184== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1
==31184== 
==31184== Thread 3:
==31184== Conditional jump or move depends on uninitialised value(s)
==31184==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31184==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31184==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31184==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31184==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31184==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31184==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31184== 
==31184== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31184==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31184==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==  Address 0xae05cba is 538 bytes inside a block of size 8,280 alloc'd
==31184==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31184==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31184==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31184== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			10.274000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.029000
	perf-misc  			0.185000
	perf-total		11.488000
hamsterdb
	filesize		0
	mem-num-allocs		8128
	mem-peak-bytes		873627
	mem-total-bytes		884867
	perf-cursor			4.530000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.644000
	perf-misc  			0.085000
	perf-total		5.259000
==31184== 
==31184== HEAP SUMMARY:
==31184==     in use at exit: 8 bytes in 1 blocks
==31184==   total heap usage: 108,157 allocs, 108,156 frees, 111,195,782 bytes allocated
==31184== 
==31184== LEAK SUMMARY:
==31184==    definitely lost: 0 bytes in 0 blocks
==31184==    indirectly lost: 0 bytes in 0 blocks
==31184==      possibly lost: 0 bytes in 0 blocks
==31184==    still reachable: 8 bytes in 1 blocks
==31184==         suppressed: 0 bytes in 0 blocks
==31184== Rerun with --leak-check=full to see details of leaked memory
==31184== 
==31184== For counts of detected and suppressed errors, rerun with: -v
==31184== Use --track-origins=yes to see where uninitialised values come from
==31184== ERROR SUMMARY: 158 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --inmemorydb=1    
==31189== Memcheck, a memory error detector
==31189== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31189== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31189== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1
==31189== 
==31189== Thread 3:
==31189== Conditional jump or move depends on uninitialised value(s)
==31189==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31189==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31189==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31189==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31189==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31189==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31189==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31189== 
==31189== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31189==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31189==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==  Address 0xaddd1c2 is 162 bytes inside a block of size 8,280 alloc'd
==31189==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31189==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31189==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31189== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			6.034000
	perf-erase 			0.385000
	perf-find  			0.000000
	perf-insert			0.809000
	perf-misc  			0.141000
	perf-total		7.369000
hamsterdb
	filesize		0
	mem-num-allocs		4448
	mem-peak-bytes		384800
	mem-total-bytes		1085540
	perf-cursor			2.554000
	perf-erase 			0.176000
	perf-find  			0.000000
	perf-insert			0.332000
	perf-misc  			0.069000
	perf-total		3.131000
==31189== 
==31189== HEAP SUMMARY:
==31189==     in use at exit: 8 bytes in 1 blocks
==31189==   total heap usage: 92,559 allocs, 92,558 frees, 110,434,879 bytes allocated
==31189== 
==31189== LEAK SUMMARY:
==31189==    definitely lost: 0 bytes in 0 blocks
==31189==    indirectly lost: 0 bytes in 0 blocks
==31189==      possibly lost: 0 bytes in 0 blocks
==31189==    still reachable: 8 bytes in 1 blocks
==31189==         suppressed: 0 bytes in 0 blocks
==31189== Rerun with --leak-check=full to see details of leaked memory
==31189== 
==31189== For counts of detected and suppressed errors, rerun with: -v
==31189== Use --track-origins=yes to see where uninitialised values come from
==31189== ERROR SUMMARY: 101 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --inmemorydb=1    
==31194== Memcheck, a memory error detector
==31194== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31194== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31194== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1
==31194== 
==31194== Thread 3:
==31194== Conditional jump or move depends on uninitialised value(s)
==31194==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31194==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31194==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31194==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31194==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31194==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31194==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31194==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31194==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31194==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31194==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31194==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31194== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.087000
	perf-misc  			0.138000
	perf-total		0.269000
hamsterdb
	filesize		0
	mem-num-allocs		277
	mem-peak-bytes		56664
	mem-total-bytes		149524
	perf-cursor			0.025000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.051000
	perf-misc  			0.074000
	perf-total		0.150000
==31194== 
==31194== HEAP SUMMARY:
==31194==     in use at exit: 8 bytes in 1 blocks
==31194==   total heap usage: 1,731 allocs, 1,730 frees, 105,719,273 bytes allocated
==31194== 
==31194== LEAK SUMMARY:
==31194==    definitely lost: 0 bytes in 0 blocks
==31194==    indirectly lost: 0 bytes in 0 blocks
==31194==      possibly lost: 0 bytes in 0 blocks
==31194==    still reachable: 8 bytes in 1 blocks
==31194==         suppressed: 0 bytes in 0 blocks
==31194== Rerun with --leak-check=full to see details of leaked memory
==31194== 
==31194== For counts of detected and suppressed errors, rerun with: -v
==31194== Use --track-origins=yes to see where uninitialised values come from
==31194== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --inmemorydb=1    
==31199== Memcheck, a memory error detector
==31199== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31199== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31199== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1
==31199== 
==31199== Thread 3:
==31199== Conditional jump or move depends on uninitialised value(s)
==31199==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31199==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31199==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31199==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31199==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31199==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31199==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31199==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31199==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31199==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31199==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31199==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31199== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			41.561002
	perf-erase 			0.593000
	perf-find  			1.088000
	perf-insert			1.218000
	perf-misc  			0.142000
	perf-total		44.601999
hamsterdb
	filesize		0
	mem-num-allocs		449567
	mem-peak-bytes		56815
	mem-total-bytes		11948427
	perf-cursor			24.028000
	perf-erase 			0.374000
	perf-find  			0.686000
	perf-insert			0.768000
	perf-misc  			0.072000
	perf-total		25.927999
==31199== 
==31199== HEAP SUMMARY:
==31199==     in use at exit: 8 bytes in 1 blocks
==31199==   total heap usage: 1,065,497 allocs, 1,065,496 frees, 141,854,543 bytes allocated
==31199== 
==31199== LEAK SUMMARY:
==31199==    definitely lost: 0 bytes in 0 blocks
==31199==    indirectly lost: 0 bytes in 0 blocks
==31199==      possibly lost: 0 bytes in 0 blocks
==31199==    still reachable: 8 bytes in 1 blocks
==31199==         suppressed: 0 bytes in 0 blocks
==31199== Rerun with --leak-check=full to see details of leaked memory
==31199== 
==31199== For counts of detected and suppressed errors, rerun with: -v
==31199== Use --track-origins=yes to see where uninitialised values come from
==31199== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --inmemorydb=1    
==31204== Memcheck, a memory error detector
==31204== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31204== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31204== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1
==31204== 
==31204== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31204==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31204==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F0D8BC: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4EF6E4E: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F04EFC: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x426B2E: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:363)
==31204==    by 0x4206AD: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:128)
==31204==    by 0x41FD35: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:38)
==31204==  Address 0xac45718 is 600 bytes inside a block of size 8,280 alloc'd
==31204==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31204==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4E61BDD: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F0C29D: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F0CA05: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x4F06267: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31204==    by 0x425CB1: Berkeleydb::create_db() (berkeleydb.cpp:78)
==31204==    by 0x415284: Engine::create_db(bool) (engine.cpp:66)
==31204==    by 0x411811: Parser::process_line(unsigned int, Engine*) (parser.cpp:88)
==31204== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.796000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.481000
	perf-misc  			0.148000
	perf-total		7.425000
hamsterdb
	filesize		0
	mem-num-allocs		24
	mem-peak-bytes		49956004
	mem-total-bytes		49956040
	perf-cursor			3.429000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.626000
	perf-misc  			0.070000
	perf-total		4.125000
==31204== 
==31204== HEAP SUMMARY:
==31204==     in use at exit: 8 bytes in 1 blocks
==31204==   total heap usage: 1,226 allocs, 1,225 frees, 277,092,828 bytes allocated
==31204== 
==31204== LEAK SUMMARY:
==31204==    definitely lost: 0 bytes in 0 blocks
==31204==    indirectly lost: 0 bytes in 0 blocks
==31204==      possibly lost: 0 bytes in 0 blocks
==31204==    still reachable: 8 bytes in 1 blocks
==31204==         suppressed: 0 bytes in 0 blocks
==31204== Rerun with --leak-check=full to see details of leaked memory
==31204== 
==31204== For counts of detected and suppressed errors, rerun with: -v
==31204== Use --track-origins=yes to see where uninitialised values come from
==31204== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1    
==31210== Memcheck, a memory error detector
==31210== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31210== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31210== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1
==31210== 
==31210== Thread 3:
==31210== Conditional jump or move depends on uninitialised value(s)
==31210==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31210==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31210==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31210==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31210==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31210==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31210==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31210== 
==31210== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31210==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31210==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==  Address 0xae7ab42 is 546 bytes inside a block of size 8,280 alloc'd
==31210==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31210==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31210==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31210== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			10.545000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.001000
	perf-misc  			0.148000
	perf-total		11.694000
hamsterdb
	filesize		0
	mem-num-allocs		8128
	mem-peak-bytes		873627
	mem-total-bytes		884867
	perf-cursor			4.367000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.595000
	perf-misc  			0.090000
	perf-total		5.052000
==31210== 
==31210== HEAP SUMMARY:
==31210==     in use at exit: 8 bytes in 1 blocks
==31210==   total heap usage: 108,157 allocs, 108,156 frees, 111,195,782 bytes allocated
==31210== 
==31210== LEAK SUMMARY:
==31210==    definitely lost: 0 bytes in 0 blocks
==31210==    indirectly lost: 0 bytes in 0 blocks
==31210==      possibly lost: 0 bytes in 0 blocks
==31210==    still reachable: 8 bytes in 1 blocks
==31210==         suppressed: 0 bytes in 0 blocks
==31210== Rerun with --leak-check=full to see details of leaked memory
==31210== 
==31210== For counts of detected and suppressed errors, rerun with: -v
==31210== Use --track-origins=yes to see where uninitialised values come from
==31210== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1    
==31216== Memcheck, a memory error detector
==31216== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31216== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31216== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1
==31216== 
==31216== Thread 3:
==31216== Conditional jump or move depends on uninitialised value(s)
==31216==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31216==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31216==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31216==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31216==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31216==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31216==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31216== 
==31216== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31216==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31216==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==  Address 0xad8ed86 is 182 bytes inside a block of size 8,280 alloc'd
==31216==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31216==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31216==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31216== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			9.734000
	perf-erase 			0.605000
	perf-find  			0.000000
	perf-insert			1.095000
	perf-misc  			0.139000
	perf-total		11.573000
hamsterdb
	filesize		0
	mem-num-allocs		7754
	mem-peak-bytes		736856
	mem-total-bytes		2159824
	perf-cursor			4.115000
	perf-erase 			0.213000
	perf-find  			0.000000
	perf-insert			0.427000
	perf-misc  			0.076000
	perf-total		4.831000
==31216== 
==31216== HEAP SUMMARY:
==31216==     in use at exit: 8 bytes in 1 blocks
==31216==   total heap usage: 95,956 allocs, 95,955 frees, 112,686,815 bytes allocated
==31216== 
==31216== LEAK SUMMARY:
==31216==    definitely lost: 0 bytes in 0 blocks
==31216==    indirectly lost: 0 bytes in 0 blocks
==31216==      possibly lost: 0 bytes in 0 blocks
==31216==    still reachable: 8 bytes in 1 blocks
==31216==         suppressed: 0 bytes in 0 blocks
==31216== Rerun with --leak-check=full to see details of leaked memory
==31216== 
==31216== For counts of detected and suppressed errors, rerun with: -v
==31216== Use --track-origins=yes to see where uninitialised values come from
==31216== ERROR SUMMARY: 270 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1    
==31221== Memcheck, a memory error detector
==31221== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31221== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31221== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1
==31221== 
==31221== Thread 3:
==31221== Conditional jump or move depends on uninitialised value(s)
==31221==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31221==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31221==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31221==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31221==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31221==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31221==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31221==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31221==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31221==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31221==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31221==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31221== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.046000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.099000
	perf-misc  			0.158000
	perf-total		0.303000
hamsterdb
	filesize		0
	mem-num-allocs		277
	mem-peak-bytes		56664
	mem-total-bytes		149524
	perf-cursor			0.025000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.052000
	perf-misc  			0.073000
	perf-total		0.150000
==31221== 
==31221== HEAP SUMMARY:
==31221==     in use at exit: 8 bytes in 1 blocks
==31221==   total heap usage: 1,731 allocs, 1,730 frees, 105,719,273 bytes allocated
==31221== 
==31221== LEAK SUMMARY:
==31221==    definitely lost: 0 bytes in 0 blocks
==31221==    indirectly lost: 0 bytes in 0 blocks
==31221==      possibly lost: 0 bytes in 0 blocks
==31221==    still reachable: 8 bytes in 1 blocks
==31221==         suppressed: 0 bytes in 0 blocks
==31221== Rerun with --leak-check=full to see details of leaked memory
==31221== 
==31221== For counts of detected and suppressed errors, rerun with: -v
==31221== Use --track-origins=yes to see where uninitialised values come from
==31221== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1    
==31229== Memcheck, a memory error detector
==31229== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31229== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31229== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1
==31229== 
==31229== Thread 3:
==31229== Conditional jump or move depends on uninitialised value(s)
==31229==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31229==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31229==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31229==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31229==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31229==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31229==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31229== 
==31229== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31229==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31229==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==  Address 0x13730936 is 950 bytes inside a block of size 8,280 alloc'd
==31229==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31229==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31229==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31229== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			680.755003
	perf-erase 			1.077000
	perf-find  			2.142000
	perf-insert			2.968000
	perf-misc  			0.147000
	perf-total		687.088992
hamsterdb
	filesize		0
	mem-num-allocs		8550804
	mem-peak-bytes		1010642
	mem-total-bytes		228483993
	perf-cursor			425.251996
	perf-erase 			0.396000
	perf-find  			1.239000
	perf-insert			1.225000
	perf-misc  			0.105000
	perf-total		428.217008
==31229== 
==31229== HEAP SUMMARY:
==31229==     in use at exit: 8 bytes in 1 blocks
==31229==   total heap usage: 9,196,048 allocs, 9,196,047 frees, 454,774,436 bytes allocated
==31229== 
==31229== LEAK SUMMARY:
==31229==    definitely lost: 0 bytes in 0 blocks
==31229==    indirectly lost: 0 bytes in 0 blocks
==31229==      possibly lost: 0 bytes in 0 blocks
==31229==    still reachable: 8 bytes in 1 blocks
==31229==         suppressed: 0 bytes in 0 blocks
==31229== Rerun with --leak-check=full to see details of leaked memory
==31229== 
==31229== For counts of detected and suppressed errors, rerun with: -v
==31229== Use --track-origins=yes to see where uninitialised values come from
==31229== ERROR SUMMARY: 133 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1    
==31251== Memcheck, a memory error detector
==31251== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31251== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31251== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1
==31251== 
==31251== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31251==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31251==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F0D8BC: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4EF6E4E: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F04EFC: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x426B2E: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:363)
==31251==    by 0x4206AD: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:128)
==31251==    by 0x41FD35: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:38)
==31251==  Address 0xac40ef8 is 600 bytes inside a block of size 8,280 alloc'd
==31251==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31251==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4E61BDD: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F0C29D: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F0CA05: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x4F06267: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31251==    by 0x425CB1: Berkeleydb::create_db() (berkeleydb.cpp:78)
==31251==    by 0x415284: Engine::create_db(bool) (engine.cpp:66)
==31251==    by 0x411811: Parser::process_line(unsigned int, Engine*) (parser.cpp:88)
==31251== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.864000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.839000
	perf-misc  			0.149000
	perf-total		7.852000
hamsterdb
	filesize		0
	mem-num-allocs		30
	mem-peak-bytes		49956736
	mem-total-bytes		49956916
	perf-cursor			3.403000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.628000
	perf-misc  			0.079000
	perf-total		4.110000
==31251== 
==31251== HEAP SUMMARY:
==31251==     in use at exit: 8 bytes in 1 blocks
==31251==   total heap usage: 1,232 allocs, 1,231 frees, 277,093,770 bytes allocated
==31251== 
==31251== LEAK SUMMARY:
==31251==    definitely lost: 0 bytes in 0 blocks
==31251==    indirectly lost: 0 bytes in 0 blocks
==31251==      possibly lost: 0 bytes in 0 blocks
==31251==    still reachable: 8 bytes in 1 blocks
==31251==         suppressed: 0 bytes in 0 blocks
==31251== Rerun with --leak-check=full to see details of leaked memory
==31251== 
==31251== For counts of detected and suppressed errors, rerun with: -v
==31251== Use --track-origins=yes to see where uninitialised values come from
==31251== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==31257== Memcheck, a memory error detector
==31257== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31257== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31257== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==31257== 
==31257== Thread 3:
==31257== Conditional jump or move depends on uninitialised value(s)
==31257==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31257==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31257==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31257==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31257==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31257==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31257==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31257== 
==31257== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31257==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31257==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==  Address 0xae7aed2 is 546 bytes inside a block of size 8,280 alloc'd
==31257==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31257==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31257==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31257== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			10.445000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.093000
	perf-misc  			0.146000
	perf-total		11.684000
hamsterdb
	filesize		0
	mem-num-allocs		8128
	mem-peak-bytes		873627
	mem-total-bytes		884867
	perf-cursor			4.319000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.623000
	perf-misc  			0.093000
	perf-total		5.035000
==31257== 
==31257== HEAP SUMMARY:
==31257==     in use at exit: 8 bytes in 1 blocks
==31257==   total heap usage: 108,157 allocs, 108,156 frees, 111,195,782 bytes allocated
==31257== 
==31257== LEAK SUMMARY:
==31257==    definitely lost: 0 bytes in 0 blocks
==31257==    indirectly lost: 0 bytes in 0 blocks
==31257==      possibly lost: 0 bytes in 0 blocks
==31257==    still reachable: 8 bytes in 1 blocks
==31257==         suppressed: 0 bytes in 0 blocks
==31257== Rerun with --leak-check=full to see details of leaked memory
==31257== 
==31257== For counts of detected and suppressed errors, rerun with: -v
==31257== Use --track-origins=yes to see where uninitialised values come from
==31257== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==31262== Memcheck, a memory error detector
==31262== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31262== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31262== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==31262== 
==31262== Thread 3:
==31262== Conditional jump or move depends on uninitialised value(s)
==31262==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31262==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31262==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31262==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31262==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31262==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31262==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31262== 
==31262== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31262==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31262==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==  Address 0xad8ee86 is 182 bytes inside a block of size 8,280 alloc'd
==31262==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31262==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31262==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31262== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			9.395000
	perf-erase 			0.596000
	perf-find  			0.000000
	perf-insert			1.118000
	perf-misc  			0.139000
	perf-total		11.248000
hamsterdb
	filesize		0
	mem-num-allocs		7754
	mem-peak-bytes		737112
	mem-total-bytes		2160080
	perf-cursor			4.091000
	perf-erase 			0.205000
	perf-find  			0.000000
	perf-insert			0.465000
	perf-misc  			0.079000
	perf-total		4.840000
==31262== 
==31262== HEAP SUMMARY:
==31262==     in use at exit: 8 bytes in 1 blocks
==31262==   total heap usage: 96,012 allocs, 96,011 frees, 112,735,153 bytes allocated
==31262== 
==31262== LEAK SUMMARY:
==31262==    definitely lost: 0 bytes in 0 blocks
==31262==    indirectly lost: 0 bytes in 0 blocks
==31262==      possibly lost: 0 bytes in 0 blocks
==31262==    still reachable: 8 bytes in 1 blocks
==31262==         suppressed: 0 bytes in 0 blocks
==31262== Rerun with --leak-check=full to see details of leaked memory
==31262== 
==31262== For counts of detected and suppressed errors, rerun with: -v
==31262== Use --track-origins=yes to see where uninitialised values come from
==31262== ERROR SUMMARY: 270 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==31267== Memcheck, a memory error detector
==31267== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31267== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31267== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==31267== 
==31267== Thread 3:
==31267== Conditional jump or move depends on uninitialised value(s)
==31267==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31267==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31267==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31267==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31267==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31267==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31267==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31267==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31267==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31267==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31267==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31267==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31267== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.045000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.102000
	perf-misc  			0.148000
	perf-total		0.295000
hamsterdb
	filesize		0
	mem-num-allocs		277
	mem-peak-bytes		56664
	mem-total-bytes		149524
	perf-cursor			0.023000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.054000
	perf-misc  			0.073000
	perf-total		0.150000
==31267== 
==31267== HEAP SUMMARY:
==31267==     in use at exit: 8 bytes in 1 blocks
==31267==   total heap usage: 1,731 allocs, 1,730 frees, 105,719,273 bytes allocated
==31267== 
==31267== LEAK SUMMARY:
==31267==    definitely lost: 0 bytes in 0 blocks
==31267==    indirectly lost: 0 bytes in 0 blocks
==31267==      possibly lost: 0 bytes in 0 blocks
==31267==    still reachable: 8 bytes in 1 blocks
==31267==         suppressed: 0 bytes in 0 blocks
==31267== Rerun with --leak-check=full to see details of leaked memory
==31267== 
==31267== For counts of detected and suppressed errors, rerun with: -v
==31267== Use --track-origins=yes to see where uninitialised values come from
==31267== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==31272== Memcheck, a memory error detector
==31272== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31272== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31272== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==31272== 
==31272== Thread 3:
==31272== Conditional jump or move depends on uninitialised value(s)
==31272==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31272==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31272==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31272==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31272==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31272==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31272==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31272== 
==31272== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31272==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31272==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==  Address 0x15ec2c12 is 818 bytes inside a block of size 8,280 alloc'd
==31272==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31272==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31272==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31272== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			680.975008
	perf-erase 			1.074000
	perf-find  			2.093000
	perf-insert			3.117000
	perf-misc  			0.144000
	perf-total		687.402975
hamsterdb
	filesize		0
	mem-num-allocs		8550804
	mem-peak-bytes		1010676
	mem-total-bytes		228483507
	perf-cursor			419.859005
	perf-erase 			0.417000
	perf-find  			1.285000
	perf-insert			1.575000
	perf-misc  			0.104000
	perf-total		423.240008
==31272== 
==31272== HEAP SUMMARY:
==31272==     in use at exit: 8 bytes in 1 blocks
==31272==   total heap usage: 9,196,054 allocs, 9,196,053 frees, 454,758,691 bytes allocated
==31272== 
==31272== LEAK SUMMARY:
==31272==    definitely lost: 0 bytes in 0 blocks
==31272==    indirectly lost: 0 bytes in 0 blocks
==31272==      possibly lost: 0 bytes in 0 blocks
==31272==    still reachable: 8 bytes in 1 blocks
==31272==         suppressed: 0 bytes in 0 blocks
==31272== Rerun with --leak-check=full to see details of leaked memory
==31272== 
==31272== For counts of detected and suppressed errors, rerun with: -v
==31272== Use --track-origins=yes to see where uninitialised values come from
==31272== ERROR SUMMARY: 132 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==31294== Memcheck, a memory error detector
==31294== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31294== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31294== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==31294== 
==31294== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31294==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31294==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F0D8BC: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4EF6E4E: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F04EFC: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x426B2E: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:363)
==31294==    by 0x4206AD: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:128)
==31294==    by 0x41FD35: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:38)
==31294==  Address 0xac40ef8 is 600 bytes inside a block of size 8,280 alloc'd
==31294==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31294==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4E61BDD: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F0C29D: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F0CA05: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x4F06267: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31294==    by 0x425CB1: Berkeleydb::create_db() (berkeleydb.cpp:78)
==31294==    by 0x415284: Engine::create_db(bool) (engine.cpp:66)
==31294==    by 0x411811: Parser::process_line(unsigned int, Engine*) (parser.cpp:88)
==31294== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.775000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.118000
	perf-misc  			0.138000
	perf-total		7.031000
hamsterdb
	filesize		0
	mem-num-allocs		30
	mem-peak-bytes		90442360
	mem-total-bytes		90442540
	perf-cursor			3.403000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.109000
	perf-misc  			0.082000
	perf-total		4.594000
==31294== 
==31294== HEAP SUMMARY:
==31294==     in use at exit: 8 bytes in 1 blocks
==31294==   total heap usage: 1,232 allocs, 1,231 frees, 317,579,394 bytes allocated
==31294== 
==31294== LEAK SUMMARY:
==31294==    definitely lost: 0 bytes in 0 blocks
==31294==    indirectly lost: 0 bytes in 0 blocks
==31294==      possibly lost: 0 bytes in 0 blocks
==31294==    still reachable: 8 bytes in 1 blocks
==31294==         suppressed: 0 bytes in 0 blocks
==31294== Rerun with --leak-check=full to see details of leaked memory
==31294== 
==31294== For counts of detected and suppressed errors, rerun with: -v
==31294== Use --track-origins=yes to see where uninitialised values come from
==31294== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1    
==31300== Memcheck, a memory error detector
==31300== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31300== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31300== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1
==31300== 
==31300== Thread 3:
==31300== Conditional jump or move depends on uninitialised value(s)
==31300==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31300==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31300==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31300==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31300==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31300==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31300==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31300== 
==31300== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31300==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31300==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==  Address 0xae7ab42 is 546 bytes inside a block of size 8,280 alloc'd
==31300==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31300==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31300==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31300== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			10.334000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.991000
	perf-misc  			0.144000
	perf-total		11.469000
hamsterdb
	filesize		0
	mem-num-allocs		8128
	mem-peak-bytes		873627
	mem-total-bytes		884867
	perf-cursor			4.428000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.621000
	perf-misc  			0.089000
	perf-total		5.138000
==31300== 
==31300== HEAP SUMMARY:
==31300==     in use at exit: 8 bytes in 1 blocks
==31300==   total heap usage: 108,157 allocs, 108,156 frees, 111,195,782 bytes allocated
==31300== 
==31300== LEAK SUMMARY:
==31300==    definitely lost: 0 bytes in 0 blocks
==31300==    indirectly lost: 0 bytes in 0 blocks
==31300==      possibly lost: 0 bytes in 0 blocks
==31300==    still reachable: 8 bytes in 1 blocks
==31300==         suppressed: 0 bytes in 0 blocks
==31300== Rerun with --leak-check=full to see details of leaked memory
==31300== 
==31300== For counts of detected and suppressed errors, rerun with: -v
==31300== Use --track-origins=yes to see where uninitialised values come from
==31300== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1    
==31305== Memcheck, a memory error detector
==31305== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31305== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31305== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1
==31305== 
==31305== Thread 3:
==31305== Conditional jump or move depends on uninitialised value(s)
==31305==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31305==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31305==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31305==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31305==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31305==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31305==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31305== 
==31305== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31305==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31305==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==  Address 0xad7616e is 190 bytes inside a block of size 8,280 alloc'd
==31305==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31305==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31305==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31305== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			6.179000
	perf-erase 			0.378000
	perf-find  			0.000000
	perf-insert			0.924000
	perf-misc  			0.139000
	perf-total		7.620000
hamsterdb
	filesize		0
	mem-num-allocs		5942
	mem-peak-bytes		394685
	mem-total-bytes		1888047
	perf-cursor			2.550000
	perf-erase 			0.180000
	perf-find  			0.000000
	perf-insert			0.389000
	perf-misc  			0.078000
	perf-total		3.197000
==31305== 
==31305== HEAP SUMMARY:
==31305==     in use at exit: 8 bytes in 1 blocks
==31305==   total heap usage: 94,066 allocs, 94,065 frees, 111,374,642 bytes allocated
==31305== 
==31305== LEAK SUMMARY:
==31305==    definitely lost: 0 bytes in 0 blocks
==31305==    indirectly lost: 0 bytes in 0 blocks
==31305==      possibly lost: 0 bytes in 0 blocks
==31305==    still reachable: 8 bytes in 1 blocks
==31305==         suppressed: 0 bytes in 0 blocks
==31305== Rerun with --leak-check=full to see details of leaked memory
==31305== 
==31305== For counts of detected and suppressed errors, rerun with: -v
==31305== Use --track-origins=yes to see where uninitialised values come from
==31305== ERROR SUMMARY: 109 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1    
==31310== Memcheck, a memory error detector
==31310== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31310== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31310== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1
==31310== 
==31310== Thread 3:
==31310== Conditional jump or move depends on uninitialised value(s)
==31310==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31310==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31310==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31310==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31310==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31310==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31310==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31310==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31310==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31310==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31310==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31310==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31310== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.091000
	perf-misc  			0.144000
	perf-total		0.279000
hamsterdb
	filesize		0
	mem-num-allocs		277
	mem-peak-bytes		56664
	mem-total-bytes		149524
	perf-cursor			0.022000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.050000
	perf-misc  			0.069000
	perf-total		0.141000
==31310== 
==31310== HEAP SUMMARY:
==31310==     in use at exit: 8 bytes in 1 blocks
==31310==   total heap usage: 1,731 allocs, 1,730 frees, 105,719,273 bytes allocated
==31310== 
==31310== LEAK SUMMARY:
==31310==    definitely lost: 0 bytes in 0 blocks
==31310==    indirectly lost: 0 bytes in 0 blocks
==31310==      possibly lost: 0 bytes in 0 blocks
==31310==    still reachable: 8 bytes in 1 blocks
==31310==         suppressed: 0 bytes in 0 blocks
==31310== Rerun with --leak-check=full to see details of leaked memory
==31310== 
==31310== For counts of detected and suppressed errors, rerun with: -v
==31310== Use --track-origins=yes to see where uninitialised values come from
==31310== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1    
==31315== Memcheck, a memory error detector
==31315== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31315== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31315== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1
==31315== 
==31315== Thread 3:
==31315== Conditional jump or move depends on uninitialised value(s)
==31315==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31315==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31315==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31315==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31315==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31315==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31315==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31315==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31315==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31315==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31315==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31315==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31315== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			42.277999
	perf-erase 			0.575000
	perf-find  			1.069000
	perf-insert			2.120000
	perf-misc  			0.134000
	perf-total		46.176002
hamsterdb
	filesize		0
	mem-num-allocs		461033
	mem-peak-bytes		58179
	mem-total-bytes		12601406
	perf-cursor			24.617001
	perf-erase 			0.377000
	perf-find  			0.680000
	perf-insert			1.084000
	perf-misc  			0.073000
	perf-total		26.831000
==31315== 
==31315== HEAP SUMMARY:
==31315==     in use at exit: 8 bytes in 1 blocks
==31315==   total heap usage: 1,076,965 allocs, 1,076,964 frees, 142,635,127 bytes allocated
==31315== 
==31315== LEAK SUMMARY:
==31315==    definitely lost: 0 bytes in 0 blocks
==31315==    indirectly lost: 0 bytes in 0 blocks
==31315==      possibly lost: 0 bytes in 0 blocks
==31315==    still reachable: 8 bytes in 1 blocks
==31315==         suppressed: 0 bytes in 0 blocks
==31315== Rerun with --leak-check=full to see details of leaked memory
==31315== 
==31315== For counts of detected and suppressed errors, rerun with: -v
==31315== Use --track-origins=yes to see where uninitialised values come from
==31315== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1    
==31321== Memcheck, a memory error detector
==31321== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31321== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31321== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1
==31321== 
==31321== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31321==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31321==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F0D8BC: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4EF6E4E: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F04EFC: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x426B2E: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:363)
==31321==    by 0x4206AD: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:128)
==31321==    by 0x41FD35: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:38)
==31321==  Address 0xac45718 is 600 bytes inside a block of size 8,280 alloc'd
==31321==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31321==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4E61BDD: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F0C29D: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F0CA05: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x4F06267: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31321==    by 0x425CB1: Berkeleydb::create_db() (berkeleydb.cpp:78)
==31321==    by 0x415284: Engine::create_db(bool) (engine.cpp:66)
==31321==    by 0x411811: Parser::process_line(unsigned int, Engine*) (parser.cpp:88)
==31321== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			0.476000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.345000
	perf-misc  			0.154000
	perf-total		1.975000
hamsterdb
	filesize		0
	mem-num-allocs		27
	mem-peak-bytes		40518996
	mem-total-bytes		49956480
	perf-cursor			0.405000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.636000
	perf-misc  			0.066000
	perf-total		1.107000
==31321== 
==31321== HEAP SUMMARY:
==31321==     in use at exit: 8 bytes in 1 blocks
==31321==   total heap usage: 1,231 allocs, 1,230 frees, 237,664,801 bytes allocated
==31321== 
==31321== LEAK SUMMARY:
==31321==    definitely lost: 0 bytes in 0 blocks
==31321==    indirectly lost: 0 bytes in 0 blocks
==31321==      possibly lost: 0 bytes in 0 blocks
==31321==    still reachable: 8 bytes in 1 blocks
==31321==         suppressed: 0 bytes in 0 blocks
==31321== Rerun with --leak-check=full to see details of leaked memory
==31321== 
==31321== For counts of detected and suppressed errors, rerun with: -v
==31321== Use --track-origins=yes to see where uninitialised values come from
==31321== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --reopen=1 --use-cursors=1    
==31327== Memcheck, a memory error detector
==31327== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31327== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31327== Command: ./test ../../testfiles/1/45.tst --reopen=1 --use-cursors=1
==31327== 
==31327== Thread 3:
==31327== Conditional jump or move depends on uninitialised value(s)
==31327==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31327==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31327==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31327==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31327==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31327==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31327==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31327== 
==31327== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31327==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31327==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31327==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31327==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31327==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31327==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31327==  Address 0xad30536 is 214 bytes inside a block of size 4,184 alloc'd
==31327==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31327==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31327==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31327== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.137000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.981000
	perf-misc  			1.324000
	perf-total		13.442000
hamsterdb
	filesize		966656
	mem-num-allocs		3193
	mem-peak-bytes		44
	mem-total-bytes		16572
	perf-cursor			7.788000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			1.236000
	perf-total		9.024000
==31327== 
==31327== HEAP SUMMARY:
==31327==     in use at exit: 8 bytes in 1 blocks
==31327==   total heap usage: 103,713 allocs, 103,712 frees, 111,028,582 bytes allocated
==31327== 
==31327== LEAK SUMMARY:
==31327==    definitely lost: 0 bytes in 0 blocks
==31327==    indirectly lost: 0 bytes in 0 blocks
==31327==      possibly lost: 0 bytes in 0 blocks
==31327==    still reachable: 8 bytes in 1 blocks
==31327==         suppressed: 0 bytes in 0 blocks
==31327== Rerun with --leak-check=full to see details of leaked memory
==31327== 
==31327== For counts of detected and suppressed errors, rerun with: -v
==31327== Use --track-origins=yes to see where uninitialised values come from
==31327== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --reopen=1 --use-cursors=1    
==31332== Memcheck, a memory error detector
==31332== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31332== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31332== Command: ./test ../../testfiles/1/220.tst --reopen=1 --use-cursors=1
==31332== 
==31332== Thread 3:
==31332== Conditional jump or move depends on uninitialised value(s)
==31332==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31332==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31332==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31332==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31332==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31332==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31332==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31332== 
==31332== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31332==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31332==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==  Address 0xaeec74e is 126 bytes inside a block of size 4,184 alloc'd
==31332==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31332==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31332==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31332== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			7.147000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.803000
	perf-misc  			0.690000
	perf-total		8.640000
hamsterdb
	filesize		442368
	mem-num-allocs		4511
	mem-peak-bytes		40
	mem-total-bytes		48484
	perf-cursor			4.476000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.823000
	perf-total		5.299000
==31332== 
==31332== HEAP SUMMARY:
==31332==     in use at exit: 8 bytes in 1 blocks
==31332==   total heap usage: 93,062 allocs, 93,061 frees, 110,388,356 bytes allocated
==31332== 
==31332== LEAK SUMMARY:
==31332==    definitely lost: 0 bytes in 0 blocks
==31332==    indirectly lost: 0 bytes in 0 blocks
==31332==      possibly lost: 0 bytes in 0 blocks
==31332==    still reachable: 8 bytes in 1 blocks
==31332==         suppressed: 0 bytes in 0 blocks
==31332== Rerun with --leak-check=full to see details of leaked memory
==31332== 
==31332== For counts of detected and suppressed errors, rerun with: -v
==31332== Use --track-origins=yes to see where uninitialised values come from
==31332== ERROR SUMMARY: 242 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1    
==31337== Memcheck, a memory error detector
==31337== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31337== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31337== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1
==31337== 
==31337== Thread 3:
==31337== Conditional jump or move depends on uninitialised value(s)
==31337==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31337==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31337==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31337==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31337==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31337==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31337==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31337== 
==31337== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31337==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31337==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31337==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31337==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31337==  Address 0xac60f6e is 126 bytes inside a block of size 4,184 alloc'd
==31337==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31337==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31337==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31337== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.051000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.095000
	perf-misc  			0.534000
	perf-total		0.680000
hamsterdb
	filesize		65536
	mem-num-allocs		275
	mem-peak-bytes		13724
	mem-total-bytes		112476
	perf-cursor			0.146000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.616000
	perf-total		0.762000
==31337== 
==31337== HEAP SUMMARY:
==31337==     in use at exit: 8 bytes in 1 blocks
==31337==   total heap usage: 2,010 allocs, 2,009 frees, 106,443,975 bytes allocated
==31337== 
==31337== LEAK SUMMARY:
==31337==    definitely lost: 0 bytes in 0 blocks
==31337==    indirectly lost: 0 bytes in 0 blocks
==31337==      possibly lost: 0 bytes in 0 blocks
==31337==    still reachable: 8 bytes in 1 blocks
==31337==         suppressed: 0 bytes in 0 blocks
==31337== Rerun with --leak-check=full to see details of leaked memory
==31337== 
==31337== For counts of detected and suppressed errors, rerun with: -v
==31337== Use --track-origins=yes to see where uninitialised values come from
==31337== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1    
==31342== Memcheck, a memory error detector
==31342== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31342== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31342== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1
==31342== 
==31342== Thread 3:
==31342== Conditional jump or move depends on uninitialised value(s)
==31342==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31342==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31342==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31342==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31342==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31342==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31342==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31342== 
==31342== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31342==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31342==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31342==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31342==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31342==  Address 0xb27c6ea is 410 bytes inside a block of size 4,184 alloc'd
==31342==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31342==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31342==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31342== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.783998
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.260000
	perf-misc  			0.593000
	perf-total		44.637000
hamsterdb
	filesize		65536
	mem-num-allocs		449332
	mem-peak-bytes		7615
	mem-total-bytes		11900954
	perf-cursor			34.155000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.503000
	perf-total		34.658001
==31342== 
==31342== HEAP SUMMARY:
==31342==     in use at exit: 8 bytes in 1 blocks
==31342==   total heap usage: 1,065,760 allocs, 1,065,759 frees, 142,536,143 bytes allocated
==31342== 
==31342== LEAK SUMMARY:
==31342==    definitely lost: 0 bytes in 0 blocks
==31342==    indirectly lost: 0 bytes in 0 blocks
==31342==      possibly lost: 0 bytes in 0 blocks
==31342==    still reachable: 8 bytes in 1 blocks
==31342==         suppressed: 0 bytes in 0 blocks
==31342== Rerun with --leak-check=full to see details of leaked memory
==31342== 
==31342== For counts of detected and suppressed errors, rerun with: -v
==31342== Use --track-origins=yes to see where uninitialised values come from
==31342== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1    
==31350== Memcheck, a memory error detector
==31350== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31350== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31350== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1
==31350== 
==31350== Thread 3:
==31350== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31350==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31350==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31350==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31350==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31350==  Address 0xac41c00 is 3,984 bytes inside a block of size 4,184 alloc'd
==31350==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31350==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31350== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.201000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.129000
	perf-misc  			0.658000
	perf-total		9.988000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.993000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.659000
	perf-total		2.652000
==31350== 
==31350== HEAP SUMMARY:
==31350==     in use at exit: 8 bytes in 1 blocks
==31350==   total heap usage: 1,571 allocs, 1,570 frees, 268,420,656 bytes allocated
==31350== 
==31350== LEAK SUMMARY:
==31350==    definitely lost: 0 bytes in 0 blocks
==31350==    indirectly lost: 0 bytes in 0 blocks
==31350==      possibly lost: 0 bytes in 0 blocks
==31350==    still reachable: 8 bytes in 1 blocks
==31350==         suppressed: 0 bytes in 0 blocks
==31350== Rerun with --leak-check=full to see details of leaked memory
==31350== 
==31350== For counts of detected and suppressed errors, rerun with: -v
==31350== Use --track-origins=yes to see where uninitialised values come from
==31350== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --reopen=1 --use-cursors=1 --duplicate=1    
==31357== Memcheck, a memory error detector
==31357== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31357== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31357== Command: ./test ../../testfiles/1/45.tst --reopen=1 --use-cursors=1 --duplicate=1
==31357== 
==31357== Thread 3:
==31357== Conditional jump or move depends on uninitialised value(s)
==31357==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31357==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31357==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31357==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31357==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31357==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31357==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31357== 
==31357== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31357==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31357==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31357==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31357==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31357==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31357==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31357==  Address 0xad30876 is 214 bytes inside a block of size 4,184 alloc'd
==31357==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31357==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31357==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31357== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.054000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.000000
	perf-misc  			1.348000
	perf-total		13.402000
hamsterdb
	filesize		966656
	mem-num-allocs		3193
	mem-peak-bytes		44
	mem-total-bytes		16572
	perf-cursor			7.643000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			1.259000
	perf-total		8.902000
==31357== 
==31357== HEAP SUMMARY:
==31357==     in use at exit: 8 bytes in 1 blocks
==31357==   total heap usage: 103,713 allocs, 103,712 frees, 111,028,582 bytes allocated
==31357== 
==31357== LEAK SUMMARY:
==31357==    definitely lost: 0 bytes in 0 blocks
==31357==    indirectly lost: 0 bytes in 0 blocks
==31357==      possibly lost: 0 bytes in 0 blocks
==31357==    still reachable: 8 bytes in 1 blocks
==31357==         suppressed: 0 bytes in 0 blocks
==31357== Rerun with --leak-check=full to see details of leaked memory
==31357== 
==31357== For counts of detected and suppressed errors, rerun with: -v
==31357== Use --track-origins=yes to see where uninitialised values come from
==31357== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --reopen=1 --use-cursors=1 --duplicate=1    
==31362== Memcheck, a memory error detector
==31362== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31362== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31362== Command: ./test ../../testfiles/1/220.tst --reopen=1 --use-cursors=1 --duplicate=1
==31362== 
==31362== Thread 3:
==31362== Conditional jump or move depends on uninitialised value(s)
==31362==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31362==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31362==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31362==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31362==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31362==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31362==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31362== 
==31362== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31362==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31362==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==  Address 0xae6b648 is 120 bytes inside a block of size 4,184 alloc'd
==31362==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31362==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31362==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31362== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		2760704
	perf-cursor			17.465999
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.219000
	perf-misc  			0.727000
	perf-total		19.412001
hamsterdb
	filesize		1310720
	mem-num-allocs		7349
	mem-peak-bytes		284
	mem-total-bytes		329712
	perf-cursor			10.411000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.745000
	perf-total		11.156000
==31362== 
==31362== HEAP SUMMARY:
==31362==     in use at exit: 8 bytes in 1 blocks
==31362==   total heap usage: 96,051 allocs, 96,050 frees, 110,851,425 bytes allocated
==31362== 
==31362== LEAK SUMMARY:
==31362==    definitely lost: 0 bytes in 0 blocks
==31362==    indirectly lost: 0 bytes in 0 blocks
==31362==      possibly lost: 0 bytes in 0 blocks
==31362==    still reachable: 8 bytes in 1 blocks
==31362==         suppressed: 0 bytes in 0 blocks
==31362== Rerun with --leak-check=full to see details of leaked memory
==31362== 
==31362== For counts of detected and suppressed errors, rerun with: -v
==31362== Use --track-origins=yes to see where uninitialised values come from
==31362== ERROR SUMMARY: 777 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1 --duplicate=1    
==31367== Memcheck, a memory error detector
==31367== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31367== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31367== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1 --duplicate=1
==31367== 
==31367== Thread 3:
==31367== Conditional jump or move depends on uninitialised value(s)
==31367==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31367==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31367==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31367==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31367==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31367==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31367==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31367== 
==31367== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31367==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31367==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31367==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31367==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31367==  Address 0xac60f6e is 126 bytes inside a block of size 4,184 alloc'd
==31367==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31367==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31367==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31367== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.041000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.104000
	perf-misc  			0.619000
	perf-total		0.764000
hamsterdb
	filesize		65536
	mem-num-allocs		275
	mem-peak-bytes		13724
	mem-total-bytes		112476
	perf-cursor			0.151000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.537000
	perf-total		0.688000
==31367== 
==31367== HEAP SUMMARY:
==31367==     in use at exit: 8 bytes in 1 blocks
==31367==   total heap usage: 2,010 allocs, 2,009 frees, 106,443,975 bytes allocated
==31367== 
==31367== LEAK SUMMARY:
==31367==    definitely lost: 0 bytes in 0 blocks
==31367==    indirectly lost: 0 bytes in 0 blocks
==31367==      possibly lost: 0 bytes in 0 blocks
==31367==    still reachable: 8 bytes in 1 blocks
==31367==         suppressed: 0 bytes in 0 blocks
==31367== Rerun with --leak-check=full to see details of leaked memory
==31367== 
==31367== For counts of detected and suppressed errors, rerun with: -v
==31367== Use --track-origins=yes to see where uninitialised values come from
==31367== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1 --duplicate=1    
==31372== Memcheck, a memory error detector
==31372== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31372== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31372== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1 --duplicate=1
==31372== 
==31372== Thread 3:
==31372== Conditional jump or move depends on uninitialised value(s)
==31372==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31372==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31372==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31372==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31372==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31372==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31372==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31372== 
==31372== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31372==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31372==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==  Address 0x128804b6 is 550 bytes inside a block of size 4,184 alloc'd
==31372==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31372==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31372==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31372== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			754.436997
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.219000
	perf-misc  			0.649000
	perf-total		758.304997
hamsterdb
	filesize		1261568
	mem-num-allocs		8552217
	mem-peak-bytes		8772
	mem-total-bytes		237229750
	perf-cursor			656.557998
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.605000
	perf-total		657.163026
==31372== 
==31372== HEAP SUMMARY:
==31372==     in use at exit: 8 bytes in 1 blocks
==31372==   total heap usage: 9,173,782 allocs, 9,173,781 frees, 458,721,020 bytes allocated
==31372== 
==31372== LEAK SUMMARY:
==31372==    definitely lost: 0 bytes in 0 blocks
==31372==    indirectly lost: 0 bytes in 0 blocks
==31372==      possibly lost: 0 bytes in 0 blocks
==31372==    still reachable: 8 bytes in 1 blocks
==31372==         suppressed: 0 bytes in 0 blocks
==31372== Rerun with --leak-check=full to see details of leaked memory
==31372== 
==31372== For counts of detected and suppressed errors, rerun with: -v
==31372== Use --track-origins=yes to see where uninitialised values come from
==31372== ERROR SUMMARY: 433 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1 --duplicate=1    
==31394== Memcheck, a memory error detector
==31394== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31394== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31394== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1 --duplicate=1
==31394== 
==31394== Thread 3:
==31394== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31394==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31394==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31394==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31394==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31394==  Address 0xac45bc8 is 3,576 bytes inside a block of size 4,184 alloc'd
==31394==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31394==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31394== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.594000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.330000
	perf-misc  			0.720000
	perf-total		8.644000
hamsterdb
	filesize		50315264
	mem-num-allocs		15
	mem-peak-bytes		144
	mem-total-bytes		192
	perf-cursor			3.864000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.626000
	perf-total		4.490000
==31394== 
==31394== HEAP SUMMARY:
==31394==     in use at exit: 8 bytes in 1 blocks
==31394==   total heap usage: 1,574 allocs, 1,573 frees, 268,420,833 bytes allocated
==31394== 
==31394== LEAK SUMMARY:
==31394==    definitely lost: 0 bytes in 0 blocks
==31394==    indirectly lost: 0 bytes in 0 blocks
==31394==      possibly lost: 0 bytes in 0 blocks
==31394==    still reachable: 8 bytes in 1 blocks
==31394==         suppressed: 0 bytes in 0 blocks
==31394== Rerun with --leak-check=full to see details of leaked memory
==31394== 
==31394== For counts of detected and suppressed errors, rerun with: -v
==31394== Use --track-origins=yes to see where uninitialised values come from
==31394== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --overwrite=1 --reopen=1 --use-cursors=1    
==31400== Memcheck, a memory error detector
==31400== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31400== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31400== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --reopen=1 --use-cursors=1
==31400== 
==31400== Thread 3:
==31400== Conditional jump or move depends on uninitialised value(s)
==31400==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31400==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31400==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31400==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31400==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31400==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31400==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31400== 
==31400== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31400==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31400==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31400==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31400==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31400==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31400==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31400==  Address 0xad30876 is 214 bytes inside a block of size 4,184 alloc'd
==31400==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31400==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31400==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31400== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.976000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.034000
	perf-misc  			1.392000
	perf-total		13.402000
hamsterdb
	filesize		966656
	mem-num-allocs		3193
	mem-peak-bytes		44
	mem-total-bytes		16572
	perf-cursor			7.585000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			1.425000
	perf-total		9.010000
==31400== 
==31400== HEAP SUMMARY:
==31400==     in use at exit: 8 bytes in 1 blocks
==31400==   total heap usage: 103,713 allocs, 103,712 frees, 111,028,582 bytes allocated
==31400== 
==31400== LEAK SUMMARY:
==31400==    definitely lost: 0 bytes in 0 blocks
==31400==    indirectly lost: 0 bytes in 0 blocks
==31400==      possibly lost: 0 bytes in 0 blocks
==31400==    still reachable: 8 bytes in 1 blocks
==31400==         suppressed: 0 bytes in 0 blocks
==31400== Rerun with --leak-check=full to see details of leaked memory
==31400== 
==31400== For counts of detected and suppressed errors, rerun with: -v
==31400== Use --track-origins=yes to see where uninitialised values come from
==31400== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --overwrite=1 --reopen=1 --use-cursors=1    
==31405== Memcheck, a memory error detector
==31405== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31405== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31405== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --reopen=1 --use-cursors=1
==31405== 
==31405== Thread 3:
==31405== Conditional jump or move depends on uninitialised value(s)
==31405==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31405==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31405==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31405==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31405==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31405==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31405==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31405== 
==31405== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31405==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31405==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==  Address 0xaee1a0e is 126 bytes inside a block of size 4,184 alloc'd
==31405==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31405==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31405==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31405== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		741376
	perf-cursor			7.281000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.935000
	perf-misc  			0.616000
	perf-total		8.832000
hamsterdb
	filesize		507904
	mem-num-allocs		5087
	mem-peak-bytes		40
	mem-total-bytes		53268
	perf-cursor			4.607000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.557000
	perf-total		5.164000
==31405== 
==31405== HEAP SUMMARY:
==31405==     in use at exit: 8 bytes in 1 blocks
==31405==   total heap usage: 93,675 allocs, 93,674 frees, 110,579,805 bytes allocated
==31405== 
==31405== LEAK SUMMARY:
==31405==    definitely lost: 0 bytes in 0 blocks
==31405==    indirectly lost: 0 bytes in 0 blocks
==31405==      possibly lost: 0 bytes in 0 blocks
==31405==    still reachable: 8 bytes in 1 blocks
==31405==         suppressed: 0 bytes in 0 blocks
==31405== Rerun with --leak-check=full to see details of leaked memory
==31405== 
==31405== For counts of detected and suppressed errors, rerun with: -v
==31405== Use --track-origins=yes to see where uninitialised values come from
==31405== ERROR SUMMARY: 289 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1 --use-cursors=1    
==31410== Memcheck, a memory error detector
==31410== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31410== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31410== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1 --use-cursors=1
==31410== 
==31410== Thread 3:
==31410== Conditional jump or move depends on uninitialised value(s)
==31410==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31410==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31410==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31410==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31410==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31410==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31410==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31410== 
==31410== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31410==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31410==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31410==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31410==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31410==  Address 0xac60f6e is 126 bytes inside a block of size 4,184 alloc'd
==31410==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31410==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31410==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31410== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.042000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.106000
	perf-misc  			0.583000
	perf-total		0.731000
hamsterdb
	filesize		65536
	mem-num-allocs		275
	mem-peak-bytes		13724
	mem-total-bytes		112476
	perf-cursor			0.141000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.579000
	perf-total		0.720000
==31410== 
==31410== HEAP SUMMARY:
==31410==     in use at exit: 8 bytes in 1 blocks
==31410==   total heap usage: 2,010 allocs, 2,009 frees, 106,443,975 bytes allocated
==31410== 
==31410== LEAK SUMMARY:
==31410==    definitely lost: 0 bytes in 0 blocks
==31410==    indirectly lost: 0 bytes in 0 blocks
==31410==      possibly lost: 0 bytes in 0 blocks
==31410==    still reachable: 8 bytes in 1 blocks
==31410==         suppressed: 0 bytes in 0 blocks
==31410== Rerun with --leak-check=full to see details of leaked memory
==31410== 
==31410== For counts of detected and suppressed errors, rerun with: -v
==31410== Use --track-origins=yes to see where uninitialised values come from
==31410== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1 --use-cursors=1    
==31415== Memcheck, a memory error detector
==31415== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31415== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31415== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1 --use-cursors=1
==31415== 
==31415== Thread 3:
==31415== Conditional jump or move depends on uninitialised value(s)
==31415==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31415==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31415==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31415==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31415==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31415==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31415==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31415== 
==31415== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31415==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31415==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31415==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31415==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31415==  Address 0xb27fbc2 is 418 bytes inside a block of size 4,184 alloc'd
==31415==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31415==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31415==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31415== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			44.656001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.847000
	perf-misc  			0.524000
	perf-total		47.026999
hamsterdb
	filesize		81920
	mem-num-allocs		449445
	mem-peak-bytes		7615
	mem-total-bytes		11902645
	perf-cursor			34.759000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.542000
	perf-total		35.300999
==31415== 
==31415== HEAP SUMMARY:
==31415==     in use at exit: 8 bytes in 1 blocks
==31415==   total heap usage: 1,065,874 allocs, 1,065,873 frees, 142,540,598 bytes allocated
==31415== 
==31415== LEAK SUMMARY:
==31415==    definitely lost: 0 bytes in 0 blocks
==31415==    indirectly lost: 0 bytes in 0 blocks
==31415==      possibly lost: 0 bytes in 0 blocks
==31415==    still reachable: 8 bytes in 1 blocks
==31415==         suppressed: 0 bytes in 0 blocks
==31415== Rerun with --leak-check=full to see details of leaked memory
==31415== 
==31415== For counts of detected and suppressed errors, rerun with: -v
==31415== Use --track-origins=yes to see where uninitialised values come from
==31415== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1 --use-cursors=1    
==31426== Memcheck, a memory error detector
==31426== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31426== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31426== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1 --use-cursors=1
==31426== 
==31426== Thread 3:
==31426== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31426==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31426==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31426==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31426==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31426==  Address 0xac41d74 is 3,588 bytes inside a block of size 4,184 alloc'd
==31426==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31426==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31426== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.711000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.556000
	perf-misc  			1.154000
	perf-total		6.421000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			3.364000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			1.321000
	perf-total		4.685000
==31426== 
==31426== HEAP SUMMARY:
==31426==     in use at exit: 8 bytes in 1 blocks
==31426==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31426== 
==31426== LEAK SUMMARY:
==31426==    definitely lost: 0 bytes in 0 blocks
==31426==    indirectly lost: 0 bytes in 0 blocks
==31426==      possibly lost: 0 bytes in 0 blocks
==31426==    still reachable: 8 bytes in 1 blocks
==31426==         suppressed: 0 bytes in 0 blocks
==31426== Rerun with --leak-check=full to see details of leaked memory
==31426== 
==31426== For counts of detected and suppressed errors, rerun with: -v
==31426== Use --track-origins=yes to see where uninitialised values come from
==31426== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --inmemorydb=1 --use-cursors=1    
==31432== Memcheck, a memory error detector
==31432== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31432== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31432== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --use-cursors=1
==31432== 
==31432== Thread 3:
==31432== Conditional jump or move depends on uninitialised value(s)
==31432==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31432==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31432==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31432==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31432==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31432==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31432==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31432== 
==31432== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31432==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31432==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==  Address 0xae81a12 is 546 bytes inside a block of size 8,280 alloc'd
==31432==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31432==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31432==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31432== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			10.157000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.014000
	perf-misc  			0.195000
	perf-total		11.366000
hamsterdb
	filesize		0
	mem-num-allocs		8508
	mem-peak-bytes		873627
	mem-total-bytes		890187
	perf-cursor			5.090000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.089000
	perf-total		5.179000
==31432== 
==31432== HEAP SUMMARY:
==31432==     in use at exit: 8 bytes in 1 blocks
==31432==   total heap usage: 108,537 allocs, 108,536 frees, 111,205,282 bytes allocated
==31432== 
==31432== LEAK SUMMARY:
==31432==    definitely lost: 0 bytes in 0 blocks
==31432==    indirectly lost: 0 bytes in 0 blocks
==31432==      possibly lost: 0 bytes in 0 blocks
==31432==    still reachable: 8 bytes in 1 blocks
==31432==         suppressed: 0 bytes in 0 blocks
==31432== Rerun with --leak-check=full to see details of leaked memory
==31432== 
==31432== For counts of detected and suppressed errors, rerun with: -v
==31432== Use --track-origins=yes to see where uninitialised values come from
==31432== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --inmemorydb=1 --use-cursors=1    
==31437== Memcheck, a memory error detector
==31437== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31437== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31437== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --use-cursors=1
==31437== 
==31437== Thread 3:
==31437== Conditional jump or move depends on uninitialised value(s)
==31437==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31437==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31437==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31437==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31437==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31437==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31437==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31437== 
==31437== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31437==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31437==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==  Address 0xae0c84a is 170 bytes inside a block of size 8,280 alloc'd
==31437==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31437==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31437==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31437== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			6.522000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.819000
	perf-misc  			0.139000
	perf-total		7.480000
hamsterdb
	filesize		0
	mem-num-allocs		6408
	mem-peak-bytes		384828
	mem-total-bytes		1123820
	perf-cursor			3.249000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.074000
	perf-total		3.323000
==31437== 
==31437== HEAP SUMMARY:
==31437==     in use at exit: 8 bytes in 1 blocks
==31437==   total heap usage: 94,529 allocs, 94,528 frees, 110,532,772 bytes allocated
==31437== 
==31437== LEAK SUMMARY:
==31437==    definitely lost: 0 bytes in 0 blocks
==31437==    indirectly lost: 0 bytes in 0 blocks
==31437==      possibly lost: 0 bytes in 0 blocks
==31437==    still reachable: 8 bytes in 1 blocks
==31437==         suppressed: 0 bytes in 0 blocks
==31437== Rerun with --leak-check=full to see details of leaked memory
==31437== 
==31437== For counts of detected and suppressed errors, rerun with: -v
==31437== Use --track-origins=yes to see where uninitialised values come from
==31437== ERROR SUMMARY: 104 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --use-cursors=1    
==31442== Memcheck, a memory error detector
==31442== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31442== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31442== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --use-cursors=1
==31442== 
==31442== Thread 3:
==31442== Conditional jump or move depends on uninitialised value(s)
==31442==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31442==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31442==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31442==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31442==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31442==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31442==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31442==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31442==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31442==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31442==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31442==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31442== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.039000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.084000
	perf-misc  			0.145000
	perf-total		0.268000
hamsterdb
	filesize		0
	mem-num-allocs		297
	mem-peak-bytes		56664
	mem-total-bytes		155416
	perf-cursor			0.077000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.075000
	perf-total		0.152000
==31442== 
==31442== HEAP SUMMARY:
==31442==     in use at exit: 8 bytes in 1 blocks
==31442==   total heap usage: 1,751 allocs, 1,750 frees, 105,725,385 bytes allocated
==31442== 
==31442== LEAK SUMMARY:
==31442==    definitely lost: 0 bytes in 0 blocks
==31442==    indirectly lost: 0 bytes in 0 blocks
==31442==      possibly lost: 0 bytes in 0 blocks
==31442==    still reachable: 8 bytes in 1 blocks
==31442==         suppressed: 0 bytes in 0 blocks
==31442== Rerun with --leak-check=full to see details of leaked memory
==31442== 
==31442== For counts of detected and suppressed errors, rerun with: -v
==31442== Use --track-origins=yes to see where uninitialised values come from
==31442== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --use-cursors=1    
==31447== Memcheck, a memory error detector
==31447== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31447== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31447== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --use-cursors=1
==31447== 
==31447== Thread 3:
==31447== Conditional jump or move depends on uninitialised value(s)
==31447==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31447==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31447==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31447==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31447==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31447==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31447==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31447==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31447==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31447==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31447==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31447==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31447== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			43.398001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.252000
	perf-misc  			0.139000
	perf-total		44.788998
hamsterdb
	filesize		0
	mem-num-allocs		449653
	mem-peak-bytes		56815
	mem-total-bytes		11950154
	perf-cursor			26.262999
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.070000
	perf-total		26.333000
==31447== 
==31447== HEAP SUMMARY:
==31447==     in use at exit: 8 bytes in 1 blocks
==31447==   total heap usage: 1,065,583 allocs, 1,065,582 frees, 141,857,216 bytes allocated
==31447== 
==31447== LEAK SUMMARY:
==31447==    definitely lost: 0 bytes in 0 blocks
==31447==    indirectly lost: 0 bytes in 0 blocks
==31447==      possibly lost: 0 bytes in 0 blocks
==31447==    still reachable: 8 bytes in 1 blocks
==31447==         suppressed: 0 bytes in 0 blocks
==31447== Rerun with --leak-check=full to see details of leaked memory
==31447== 
==31447== For counts of detected and suppressed errors, rerun with: -v
==31447== Use --track-origins=yes to see where uninitialised values come from
==31447== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --use-cursors=1    
==31452== Memcheck, a memory error detector
==31452== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31452== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31452== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --use-cursors=1
==31452== 
==31452== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31452==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31452==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F0D8BC: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4EF6E4E: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F04EFC: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x426B2E: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:363)
==31452==    by 0x4206AD: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:128)
==31452==    by 0x41FD35: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:38)
==31452==  Address 0xac45718 is 600 bytes inside a block of size 8,280 alloc'd
==31452==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31452==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4E61BDD: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F0C29D: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F0CA05: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x4F06267: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31452==    by 0x425CB1: Berkeleydb::create_db() (berkeleydb.cpp:78)
==31452==    by 0x415284: Engine::create_db(bool) (engine.cpp:66)
==31452==    by 0x411811: Parser::process_line(unsigned int, Engine*) (parser.cpp:88)
==31452== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.685000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.745000
	perf-misc  			0.140000
	perf-total		6.570000
hamsterdb
	filesize		0
	mem-num-allocs		24
	mem-peak-bytes		49956004
	mem-total-bytes		49956040
	perf-cursor			4.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.074000
	perf-total		4.105000
==31452== 
==31452== HEAP SUMMARY:
==31452==     in use at exit: 8 bytes in 1 blocks
==31452==   total heap usage: 1,226 allocs, 1,225 frees, 277,092,828 bytes allocated
==31452== 
==31452== LEAK SUMMARY:
==31452==    definitely lost: 0 bytes in 0 blocks
==31452==    indirectly lost: 0 bytes in 0 blocks
==31452==      possibly lost: 0 bytes in 0 blocks
==31452==    still reachable: 8 bytes in 1 blocks
==31452==         suppressed: 0 bytes in 0 blocks
==31452== Rerun with --leak-check=full to see details of leaked memory
==31452== 
==31452== For counts of detected and suppressed errors, rerun with: -v
==31452== Use --track-origins=yes to see where uninitialised values come from
==31452== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==31458== Memcheck, a memory error detector
==31458== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31458== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31458== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==31458== 
==31458== Thread 3:
==31458== Conditional jump or move depends on uninitialised value(s)
==31458==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31458==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31458==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31458==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31458==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31458==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31458==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31458== 
==31458== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31458==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31458==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==  Address 0xae0b41a is 538 bytes inside a block of size 8,280 alloc'd
==31458==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31458==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31458==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31458== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			10.302000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.031000
	perf-misc  			0.143000
	perf-total		11.476000
hamsterdb
	filesize		0
	mem-num-allocs		8508
	mem-peak-bytes		873627
	mem-total-bytes		890187
	perf-cursor			5.058000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.094000
	perf-total		5.152000
==31458== 
==31458== HEAP SUMMARY:
==31458==     in use at exit: 8 bytes in 1 blocks
==31458==   total heap usage: 108,537 allocs, 108,536 frees, 111,205,282 bytes allocated
==31458== 
==31458== LEAK SUMMARY:
==31458==    definitely lost: 0 bytes in 0 blocks
==31458==    indirectly lost: 0 bytes in 0 blocks
==31458==      possibly lost: 0 bytes in 0 blocks
==31458==    still reachable: 8 bytes in 1 blocks
==31458==         suppressed: 0 bytes in 0 blocks
==31458== Rerun with --leak-check=full to see details of leaked memory
==31458== 
==31458== For counts of detected and suppressed errors, rerun with: -v
==31458== Use --track-origins=yes to see where uninitialised values come from
==31458== ERROR SUMMARY: 158 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==31463== Memcheck, a memory error detector
==31463== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31463== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31463== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==31463== 
==31463== Thread 3:
==31463== Conditional jump or move depends on uninitialised value(s)
==31463==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31463==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31463==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31463==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31463==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31463==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31463==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31463== 
==31463== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31463==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31463==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==  Address 0xae01aa6 is 166 bytes inside a block of size 8,280 alloc'd
==31463==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31463==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31463==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31463== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			6.608000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.847000
	perf-misc  			0.145000
	perf-total		7.600000
hamsterdb
	filesize		0
	mem-num-allocs		8467
	mem-peak-bytes		394685
	mem-total-bytes		1931067
	perf-cursor			3.139000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.071000
	perf-total		3.210000
==31463== 
==31463== HEAP SUMMARY:
==31463==     in use at exit: 8 bytes in 1 blocks
==31463==   total heap usage: 96,599 allocs, 96,598 frees, 111,435,358 bytes allocated
==31463== 
==31463== LEAK SUMMARY:
==31463==    definitely lost: 0 bytes in 0 blocks
==31463==    indirectly lost: 0 bytes in 0 blocks
==31463==      possibly lost: 0 bytes in 0 blocks
==31463==    still reachable: 8 bytes in 1 blocks
==31463==         suppressed: 0 bytes in 0 blocks
==31463== Rerun with --leak-check=full to see details of leaked memory
==31463== 
==31463== For counts of detected and suppressed errors, rerun with: -v
==31463== Use --track-origins=yes to see where uninitialised values come from
==31463== ERROR SUMMARY: 109 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==31468== Memcheck, a memory error detector
==31468== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31468== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31468== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==31468== 
==31468== Thread 3:
==31468== Conditional jump or move depends on uninitialised value(s)
==31468==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31468==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31468==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31468==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31468==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31468==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31468==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31468==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31468==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31468==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31468==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31468==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31468== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.043000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.111000
	perf-misc  			0.138000
	perf-total		0.292000
hamsterdb
	filesize		0
	mem-num-allocs		297
	mem-peak-bytes		56664
	mem-total-bytes		155416
	perf-cursor			0.079000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.075000
	perf-total		0.154000
==31468== 
==31468== HEAP SUMMARY:
==31468==     in use at exit: 8 bytes in 1 blocks
==31468==   total heap usage: 1,751 allocs, 1,750 frees, 105,725,385 bytes allocated
==31468== 
==31468== LEAK SUMMARY:
==31468==    definitely lost: 0 bytes in 0 blocks
==31468==    indirectly lost: 0 bytes in 0 blocks
==31468==      possibly lost: 0 bytes in 0 blocks
==31468==    still reachable: 8 bytes in 1 blocks
==31468==         suppressed: 0 bytes in 0 blocks
==31468== Rerun with --leak-check=full to see details of leaked memory
==31468== 
==31468== For counts of detected and suppressed errors, rerun with: -v
==31468== Use --track-origins=yes to see where uninitialised values come from
==31468== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==31473== Memcheck, a memory error detector
==31473== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31473== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31473== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==31473== 
==31473== Thread 3:
==31473== Conditional jump or move depends on uninitialised value(s)
==31473==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31473==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31473==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31473==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31473==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31473==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31473==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31473==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31473==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31473==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31473==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31473==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31473== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			43.556000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.176000
	perf-misc  			0.145000
	perf-total		45.876998
hamsterdb
	filesize		0
	mem-num-allocs		461173
	mem-peak-bytes		58179
	mem-total-bytes		12604223
	perf-cursor			26.574000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.075000
	perf-total		26.649000
==31473== 
==31473== HEAP SUMMARY:
==31473==     in use at exit: 8 bytes in 1 blocks
==31473==   total heap usage: 1,077,105 allocs, 1,077,104 frees, 142,639,484 bytes allocated
==31473== 
==31473== LEAK SUMMARY:
==31473==    definitely lost: 0 bytes in 0 blocks
==31473==    indirectly lost: 0 bytes in 0 blocks
==31473==      possibly lost: 0 bytes in 0 blocks
==31473==    still reachable: 8 bytes in 1 blocks
==31473==         suppressed: 0 bytes in 0 blocks
==31473== Rerun with --leak-check=full to see details of leaked memory
==31473== 
==31473== For counts of detected and suppressed errors, rerun with: -v
==31473== Use --track-origins=yes to see where uninitialised values come from
==31473== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==31478== Memcheck, a memory error detector
==31478== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31478== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31478== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==31478== 
==31478== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31478==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31478==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F0D8BC: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4EF6E4E: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F04EFC: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x426B2E: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:363)
==31478==    by 0x4206AD: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:128)
==31478==    by 0x41FD35: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:38)
==31478==  Address 0xac45718 is 600 bytes inside a block of size 8,280 alloc'd
==31478==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31478==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4E61BDD: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F0C29D: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F0CA05: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x4F06267: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31478==    by 0x425CB1: Berkeleydb::create_db() (berkeleydb.cpp:78)
==31478==    by 0x415284: Engine::create_db(bool) (engine.cpp:66)
==31478==    by 0x411811: Parser::process_line(unsigned int, Engine*) (parser.cpp:88)
==31478== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			0.480000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.322000
	perf-misc  			0.143000
	perf-total		1.945000
hamsterdb
	filesize		0
	mem-num-allocs		27
	mem-peak-bytes		40518996
	mem-total-bytes		49956480
	perf-cursor			1.014000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.072000
	perf-total		1.086000
==31478== 
==31478== HEAP SUMMARY:
==31478==     in use at exit: 8 bytes in 1 blocks
==31478==   total heap usage: 1,231 allocs, 1,230 frees, 237,664,801 bytes allocated
==31478== 
==31478== LEAK SUMMARY:
==31478==    definitely lost: 0 bytes in 0 blocks
==31478==    indirectly lost: 0 bytes in 0 blocks
==31478==      possibly lost: 0 bytes in 0 blocks
==31478==    still reachable: 8 bytes in 1 blocks
==31478==         suppressed: 0 bytes in 0 blocks
==31478== Rerun with --leak-check=full to see details of leaked memory
==31478== 
==31478== For counts of detected and suppressed errors, rerun with: -v
==31478== Use --track-origins=yes to see where uninitialised values come from
==31478== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-find=1    
==31484== Memcheck, a memory error detector
==31484== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31484== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31484== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1
==31484== 
==31484== Thread 3:
==31484== Conditional jump or move depends on uninitialised value(s)
==31484==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31484==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31484==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31484==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31484==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31484==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31484==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31484== 
==31484== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31484==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31484==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31484==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31484==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31484==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31484==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31484==  Address 0xad2f9f6 is 214 bytes inside a block of size 4,184 alloc'd
==31484==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31484==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31484==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31484== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			21.391000
	perf-insert			1.011000
	perf-misc  			1.045000
	perf-total		23.446999
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.900000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.860000
	perf-misc  			1.033000
	perf-total		8.793000
==31484== 
==31484== HEAP SUMMARY:
==31484==     in use at exit: 8 bytes in 1 blocks
==31484==   total heap usage: 103,034 allocs, 103,033 frees, 110,247,876 bytes allocated
==31484== 
==31484== LEAK SUMMARY:
==31484==    definitely lost: 0 bytes in 0 blocks
==31484==    indirectly lost: 0 bytes in 0 blocks
==31484==      possibly lost: 0 bytes in 0 blocks
==31484==    still reachable: 8 bytes in 1 blocks
==31484==         suppressed: 0 bytes in 0 blocks
==31484== Rerun with --leak-check=full to see details of leaked memory
==31484== 
==31484== For counts of detected and suppressed errors, rerun with: -v
==31484== Use --track-origins=yes to see where uninitialised values come from
==31484== ERROR SUMMARY: 325 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-find=1    
==31489== Memcheck, a memory error detector
==31489== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31489== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31489== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1
==31489== 
==31489== Thread 3:
==31489== Conditional jump or move depends on uninitialised value(s)
==31489==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31489==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31489==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31489==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31489==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31489==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31489==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31489== 
==31489== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31489==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31489==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==  Address 0xaeb9032 is 130 bytes inside a block of size 4,184 alloc'd
==31489==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31489==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31489==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31489== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			0.000000
	perf-erase 			0.423000
	perf-find  			10.321000
	perf-insert			0.768000
	perf-misc  			0.303000
	perf-total		11.815000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.789000
	perf-erase 			0.198000
	perf-find  			0.000000
	perf-insert			0.471000
	perf-misc  			0.420000
	perf-total		4.878000
==31489== 
==31489== HEAP SUMMARY:
==31489==     in use at exit: 8 bytes in 1 blocks
==31489==   total heap usage: 90,828 allocs, 90,827 frees, 109,595,541 bytes allocated
==31489== 
==31489== LEAK SUMMARY:
==31489==    definitely lost: 0 bytes in 0 blocks
==31489==    indirectly lost: 0 bytes in 0 blocks
==31489==      possibly lost: 0 bytes in 0 blocks
==31489==    still reachable: 8 bytes in 1 blocks
==31489==         suppressed: 0 bytes in 0 blocks
==31489== Rerun with --leak-check=full to see details of leaked memory
==31489== 
==31489== For counts of detected and suppressed errors, rerun with: -v
==31489== Use --track-origins=yes to see where uninitialised values come from
==31489== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1    
==31494== Memcheck, a memory error detector
==31494== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31494== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31494== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1
==31494== 
==31494== Thread 3:
==31494== Conditional jump or move depends on uninitialised value(s)
==31494==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31494==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31494==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31494==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31494==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31494==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31494==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31494== 
==31494== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31494==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31494==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31494==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31494==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31494==  Address 0xac6071e is 126 bytes inside a block of size 4,184 alloc'd
==31494==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31494==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31494==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31494== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			0.042000
	perf-insert			0.098000
	perf-misc  			0.283000
	perf-total		0.423000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.032000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.114000
	perf-misc  			0.381000
	perf-total		0.527000
==31494== 
==31494== HEAP SUMMARY:
==31494==     in use at exit: 8 bytes in 1 blocks
==31494==   total heap usage: 1,742 allocs, 1,741 frees, 105,770,151 bytes allocated
==31494== 
==31494== LEAK SUMMARY:
==31494==    definitely lost: 0 bytes in 0 blocks
==31494==    indirectly lost: 0 bytes in 0 blocks
==31494==      possibly lost: 0 bytes in 0 blocks
==31494==    still reachable: 8 bytes in 1 blocks
==31494==         suppressed: 0 bytes in 0 blocks
==31494== Rerun with --leak-check=full to see details of leaked memory
==31494== 
==31494== For counts of detected and suppressed errors, rerun with: -v
==31494== Use --track-origins=yes to see where uninitialised values come from
==31494== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1    
==31499== Memcheck, a memory error detector
==31499== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31499== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31499== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1
==31499== 
==31499== Thread 3:
==31499== Conditional jump or move depends on uninitialised value(s)
==31499==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31499==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31499==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31499==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31499==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31499==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31499==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31499== 
==31499== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31499==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31499==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31499==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31499==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31499==  Address 0xb27b7da is 410 bytes inside a block of size 4,184 alloc'd
==31499==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31499==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31499==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31499== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			0.000000
	perf-erase 			0.552000
	perf-find  			66.367001
	perf-insert			1.222000
	perf-misc  			0.337000
	perf-total		68.478001
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			31.796001
	perf-erase 			0.414000
	perf-find  			0.769000
	perf-insert			0.914000
	perf-misc  			0.461000
	perf-total		34.354000
==31499== 
==31499== HEAP SUMMARY:
==31499==     in use at exit: 8 bytes in 1 blocks
==31499==   total heap usage: 1,065,201 allocs, 1,065,200 frees, 141,898,745 bytes allocated
==31499== 
==31499== LEAK SUMMARY:
==31499==    definitely lost: 0 bytes in 0 blocks
==31499==    indirectly lost: 0 bytes in 0 blocks
==31499==      possibly lost: 0 bytes in 0 blocks
==31499==    still reachable: 8 bytes in 1 blocks
==31499==         suppressed: 0 bytes in 0 blocks
==31499== Rerun with --leak-check=full to see details of leaked memory
==31499== 
==31499== For counts of detected and suppressed errors, rerun with: -v
==31499== Use --track-origins=yes to see where uninitialised values come from
==31499== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1    
==31510== Memcheck, a memory error detector
==31510== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31510== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31510== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1
==31510== 
==31510== Thread 3:
==31510== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31510==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31510==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31510==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31510==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31510==  Address 0xac41980 is 3,984 bytes inside a block of size 4,184 alloc'd
==31510==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31510==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31510== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			5.741000
	perf-insert			3.122000
	perf-misc  			0.326000
	perf-total		9.189000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.065000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.780000
	perf-misc  			0.281000
	perf-total		2.126000
==31510== 
==31510== HEAP SUMMARY:
==31510==     in use at exit: 8 bytes in 1 blocks
==31510==   total heap usage: 1,301 allocs, 1,300 frees, 227,153,526 bytes allocated
==31510== 
==31510== LEAK SUMMARY:
==31510==    definitely lost: 0 bytes in 0 blocks
==31510==    indirectly lost: 0 bytes in 0 blocks
==31510==      possibly lost: 0 bytes in 0 blocks
==31510==    still reachable: 8 bytes in 1 blocks
==31510==         suppressed: 0 bytes in 0 blocks
==31510== Rerun with --leak-check=full to see details of leaked memory
==31510== 
==31510== For counts of detected and suppressed errors, rerun with: -v
==31510== Use --track-origins=yes to see where uninitialised values come from
==31510== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-find=1 --duplicate=1    
==31516== Memcheck, a memory error detector
==31516== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31516== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31516== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1 --duplicate=1
==31516== 
==31516== Thread 3:
==31516== Conditional jump or move depends on uninitialised value(s)
==31516==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31516==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31516==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31516==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31516==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31516==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31516==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31516== 
==31516== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31516==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31516==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31516==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31516==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31516==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31516==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31516==  Address 0xad2f9f6 is 214 bytes inside a block of size 4,184 alloc'd
==31516==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31516==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31516==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31516== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			21.621000
	perf-insert			0.990000
	perf-misc  			1.110000
	perf-total		23.721001
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.944000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.791000
	perf-misc  			1.012000
	perf-total		8.747000
==31516== 
==31516== HEAP SUMMARY:
==31516==     in use at exit: 8 bytes in 1 blocks
==31516==   total heap usage: 103,034 allocs, 103,033 frees, 110,247,876 bytes allocated
==31516== 
==31516== LEAK SUMMARY:
==31516==    definitely lost: 0 bytes in 0 blocks
==31516==    indirectly lost: 0 bytes in 0 blocks
==31516==      possibly lost: 0 bytes in 0 blocks
==31516==    still reachable: 8 bytes in 1 blocks
==31516==         suppressed: 0 bytes in 0 blocks
==31516== Rerun with --leak-check=full to see details of leaked memory
==31516== 
==31516== For counts of detected and suppressed errors, rerun with: -v
==31516== Use --track-origins=yes to see where uninitialised values come from
==31516== ERROR SUMMARY: 325 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-find=1 --duplicate=1    
==31525== Memcheck, a memory error detector
==31525== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31525== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31525== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1 --duplicate=1
==31525== 
==31525== Thread 3:
==31525== Conditional jump or move depends on uninitialised value(s)
==31525==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31525==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31525==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31525==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31525==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31525==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31525==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31525== 
==31525== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31525==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31525==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==  Address 0xae75cb8 is 120 bytes inside a block of size 4,184 alloc'd
==31525==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31525==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31525==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31525== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		1548288
	perf-cursor			0.000000
	perf-erase 			0.680000
	perf-find  			11.822000
	perf-insert			1.171000
	perf-misc  			0.329000
	perf-total		14.002000
hamsterdb
	filesize		835584
	mem-num-allocs		3946
	mem-peak-bytes		284
	mem-total-bytes		198472
	perf-cursor			4.045000
	perf-erase 			0.235000
	perf-find  			0.000000
	perf-insert			0.631000
	perf-misc  			0.288000
	perf-total		5.199000
==31525== 
==31525== HEAP SUMMARY:
==31525==     in use at exit: 8 bytes in 1 blocks
==31525==   total heap usage: 92,307 allocs, 92,306 frees, 110,102,434 bytes allocated
==31525== 
==31525== LEAK SUMMARY:
==31525==    definitely lost: 0 bytes in 0 blocks
==31525==    indirectly lost: 0 bytes in 0 blocks
==31525==      possibly lost: 0 bytes in 0 blocks
==31525==    still reachable: 8 bytes in 1 blocks
==31525==         suppressed: 0 bytes in 0 blocks
==31525== Rerun with --leak-check=full to see details of leaked memory
==31525== 
==31525== For counts of detected and suppressed errors, rerun with: -v
==31525== Use --track-origins=yes to see where uninitialised values come from
==31525== ERROR SUMMARY: 782 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1 --duplicate=1    
==31530== Memcheck, a memory error detector
==31530== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31530== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31530== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1 --duplicate=1
==31530== 
==31530== Thread 3:
==31530== Conditional jump or move depends on uninitialised value(s)
==31530==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31530==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31530==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31530==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31530==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31530==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31530==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31530== 
==31530== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31530==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31530==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31530==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31530==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31530==  Address 0xac6071e is 126 bytes inside a block of size 4,184 alloc'd
==31530==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31530==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31530==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31530== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			0.039000
	perf-insert			0.103000
	perf-misc  			0.319000
	perf-total		0.461000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.027000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.110000
	perf-misc  			0.356000
	perf-total		0.493000
==31530== 
==31530== HEAP SUMMARY:
==31530==     in use at exit: 8 bytes in 1 blocks
==31530==   total heap usage: 1,742 allocs, 1,741 frees, 105,770,151 bytes allocated
==31530== 
==31530== LEAK SUMMARY:
==31530==    definitely lost: 0 bytes in 0 blocks
==31530==    indirectly lost: 0 bytes in 0 blocks
==31530==      possibly lost: 0 bytes in 0 blocks
==31530==    still reachable: 8 bytes in 1 blocks
==31530==         suppressed: 0 bytes in 0 blocks
==31530== Rerun with --leak-check=full to see details of leaked memory
==31530== 
==31530== For counts of detected and suppressed errors, rerun with: -v
==31530== Use --track-origins=yes to see where uninitialised values come from
==31530== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1 --duplicate=1    
==31535== Memcheck, a memory error detector
==31535== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31535== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31535== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1 --duplicate=1
==31535== 
==31535== Thread 3:
==31535== Conditional jump or move depends on uninitialised value(s)
==31535==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31535==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31535==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31535==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31535==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31535==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31535==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31535== 
==31535== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31535==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31535==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==  Address 0x1288d8d6 is 550 bytes inside a block of size 4,184 alloc'd
==31535==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31535==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31535==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31535== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			0.000000
	perf-erase 			1.014000
	perf-find  			85.502001
	perf-insert			3.171000
	perf-misc  			0.287000
	perf-total		89.973998
hamsterdb
	filesize		1261568
	mem-num-allocs		451695
	mem-peak-bytes		8772
	mem-total-bytes		13003140
	perf-cursor			39.103001
	perf-erase 			0.378000
	perf-find  			1.263000
	perf-insert			1.904000
	perf-misc  			0.395000
	perf-total		43.043000
==31535== 
==31535== HEAP SUMMARY:
==31535==     in use at exit: 8 bytes in 1 blocks
==31535==   total heap usage: 1,097,090 allocs, 1,097,089 frees, 149,806,795 bytes allocated
==31535== 
==31535== LEAK SUMMARY:
==31535==    definitely lost: 0 bytes in 0 blocks
==31535==    indirectly lost: 0 bytes in 0 blocks
==31535==      possibly lost: 0 bytes in 0 blocks
==31535==    still reachable: 8 bytes in 1 blocks
==31535==         suppressed: 0 bytes in 0 blocks
==31535== Rerun with --leak-check=full to see details of leaked memory
==31535== 
==31535== For counts of detected and suppressed errors, rerun with: -v
==31535== Use --track-origins=yes to see where uninitialised values come from
==31535== ERROR SUMMARY: 433 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1 --duplicate=1    
==31540== Memcheck, a memory error detector
==31540== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31540== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31540== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1 --duplicate=1
==31540== 
==31540== Thread 3:
==31540== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31540==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31540==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31540==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31540==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31540==  Address 0xac41ae8 is 3,576 bytes inside a block of size 4,184 alloc'd
==31540==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31540==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31540== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			5.509000
	perf-insert			2.566000
	perf-misc  			0.306000
	perf-total		8.381000
hamsterdb
	filesize		50315264
	mem-num-allocs		15
	mem-peak-bytes		144
	mem-total-bytes		192
	perf-cursor			1.059000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.689000
	perf-misc  			0.356000
	perf-total		2.104000
==31540== 
==31540== HEAP SUMMARY:
==31540==     in use at exit: 8 bytes in 1 blocks
==31540==   total heap usage: 1,304 allocs, 1,303 frees, 227,153,703 bytes allocated
==31540== 
==31540== LEAK SUMMARY:
==31540==    definitely lost: 0 bytes in 0 blocks
==31540==    indirectly lost: 0 bytes in 0 blocks
==31540==      possibly lost: 0 bytes in 0 blocks
==31540==    still reachable: 8 bytes in 1 blocks
==31540==         suppressed: 0 bytes in 0 blocks
==31540== Rerun with --leak-check=full to see details of leaked memory
==31540== 
==31540== For counts of detected and suppressed errors, rerun with: -v
==31540== Use --track-origins=yes to see where uninitialised values come from
==31540== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-find=1 --useralloc=1    
==31546== Memcheck, a memory error detector
==31546== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31546== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31546== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1 --useralloc=1
==31546== 
==31546== Thread 3:
==31546== Conditional jump or move depends on uninitialised value(s)
==31546==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31546==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31546==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31546==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31546==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31546==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31546==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31546== 
==31546== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31546==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31546==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31546==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31546==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31546==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31546==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31546==  Address 0xad2f6b6 is 214 bytes inside a block of size 4,184 alloc'd
==31546==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31546==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31546==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31546== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			21.286001
	perf-insert			1.004000
	perf-misc  			1.142000
	perf-total		23.431999
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.870000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.849000
	perf-misc  			1.074000
	perf-total		8.793000
==31546== 
==31546== HEAP SUMMARY:
==31546==     in use at exit: 8 bytes in 1 blocks
==31546==   total heap usage: 103,034 allocs, 103,033 frees, 110,247,876 bytes allocated
==31546== 
==31546== LEAK SUMMARY:
==31546==    definitely lost: 0 bytes in 0 blocks
==31546==    indirectly lost: 0 bytes in 0 blocks
==31546==      possibly lost: 0 bytes in 0 blocks
==31546==    still reachable: 8 bytes in 1 blocks
==31546==         suppressed: 0 bytes in 0 blocks
==31546== Rerun with --leak-check=full to see details of leaked memory
==31546== 
==31546== For counts of detected and suppressed errors, rerun with: -v
==31546== Use --track-origins=yes to see where uninitialised values come from
==31546== ERROR SUMMARY: 325 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-find=1 --useralloc=1    
==31551== Memcheck, a memory error detector
==31551== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31551== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31551== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1 --useralloc=1
==31551== 
==31551== Thread 3:
==31551== Conditional jump or move depends on uninitialised value(s)
==31551==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31551==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31551==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31551==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31551==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31551==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31551==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31551== 
==31551== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31551==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31551==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==  Address 0xaeb9032 is 130 bytes inside a block of size 4,184 alloc'd
==31551==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31551==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31551==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31551== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			0.000000
	perf-erase 			0.383000
	perf-find  			10.416000
	perf-insert			0.812000
	perf-misc  			0.295000
	perf-total		11.906000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.739000
	perf-erase 			0.199000
	perf-find  			0.000000
	perf-insert			0.505000
	perf-misc  			0.287000
	perf-total		4.730000
==31551== 
==31551== HEAP SUMMARY:
==31551==     in use at exit: 8 bytes in 1 blocks
==31551==   total heap usage: 90,828 allocs, 90,827 frees, 109,595,541 bytes allocated
==31551== 
==31551== LEAK SUMMARY:
==31551==    definitely lost: 0 bytes in 0 blocks
==31551==    indirectly lost: 0 bytes in 0 blocks
==31551==      possibly lost: 0 bytes in 0 blocks
==31551==    still reachable: 8 bytes in 1 blocks
==31551==         suppressed: 0 bytes in 0 blocks
==31551== Rerun with --leak-check=full to see details of leaked memory
==31551== 
==31551== For counts of detected and suppressed errors, rerun with: -v
==31551== Use --track-origins=yes to see where uninitialised values come from
==31551== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1 --useralloc=1    
==31559== Memcheck, a memory error detector
==31559== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31559== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31559== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1 --useralloc=1
==31559== 
==31559== Thread 3:
==31559== Conditional jump or move depends on uninitialised value(s)
==31559==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31559==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31559==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31559==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31559==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31559==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31559==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31559== 
==31559== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31559==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31559==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31559==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31559==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31559==  Address 0xac6071e is 126 bytes inside a block of size 4,184 alloc'd
==31559==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31559==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31559==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31559== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			0.043000
	perf-insert			0.097000
	perf-misc  			0.313000
	perf-total		0.453000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.030000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.113000
	perf-misc  			0.321000
	perf-total		0.464000
==31559== 
==31559== HEAP SUMMARY:
==31559==     in use at exit: 8 bytes in 1 blocks
==31559==   total heap usage: 1,742 allocs, 1,741 frees, 105,770,151 bytes allocated
==31559== 
==31559== LEAK SUMMARY:
==31559==    definitely lost: 0 bytes in 0 blocks
==31559==    indirectly lost: 0 bytes in 0 blocks
==31559==      possibly lost: 0 bytes in 0 blocks
==31559==    still reachable: 8 bytes in 1 blocks
==31559==         suppressed: 0 bytes in 0 blocks
==31559== Rerun with --leak-check=full to see details of leaked memory
==31559== 
==31559== For counts of detected and suppressed errors, rerun with: -v
==31559== Use --track-origins=yes to see where uninitialised values come from
==31559== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1 --useralloc=1    
==31564== Memcheck, a memory error detector
==31564== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31564== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31564== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1 --useralloc=1
==31564== 
==31564== Thread 3:
==31564== Conditional jump or move depends on uninitialised value(s)
==31564==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31564==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31564==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31564==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31564==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31564==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31564==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31564== 
==31564== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31564==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31564==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31564==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31564==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31564==  Address 0xb27b7da is 410 bytes inside a block of size 4,184 alloc'd
==31564==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31564==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31564==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31564== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			0.000000
	perf-erase 			0.589000
	perf-find  			65.544999
	perf-insert			1.222000
	perf-misc  			0.330000
	perf-total		67.685999
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			31.360000
	perf-erase 			0.346000
	perf-find  			0.734000
	perf-insert			0.908000
	perf-misc  			0.326000
	perf-total		33.674000
==31564== 
==31564== HEAP SUMMARY:
==31564==     in use at exit: 8 bytes in 1 blocks
==31564==   total heap usage: 1,065,201 allocs, 1,065,200 frees, 141,898,745 bytes allocated
==31564== 
==31564== LEAK SUMMARY:
==31564==    definitely lost: 0 bytes in 0 blocks
==31564==    indirectly lost: 0 bytes in 0 blocks
==31564==      possibly lost: 0 bytes in 0 blocks
==31564==    still reachable: 8 bytes in 1 blocks
==31564==         suppressed: 0 bytes in 0 blocks
==31564== Rerun with --leak-check=full to see details of leaked memory
==31564== 
==31564== For counts of detected and suppressed errors, rerun with: -v
==31564== Use --track-origins=yes to see where uninitialised values come from
==31564== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1 --useralloc=1    
==31569== Memcheck, a memory error detector
==31569== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31569== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31569== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1 --useralloc=1
==31569== 
==31569== Thread 3:
==31569== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31569==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31569==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31569==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31569==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31569==  Address 0xac41c80 is 3,984 bytes inside a block of size 4,184 alloc'd
==31569==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31569==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31569== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			5.758000
	perf-insert			2.867000
	perf-misc  			0.315000
	perf-total		8.940000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.050000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.878000
	perf-misc  			0.441000
	perf-total		2.369000
==31569== 
==31569== HEAP SUMMARY:
==31569==     in use at exit: 8 bytes in 1 blocks
==31569==   total heap usage: 1,301 allocs, 1,300 frees, 227,153,526 bytes allocated
==31569== 
==31569== LEAK SUMMARY:
==31569==    definitely lost: 0 bytes in 0 blocks
==31569==    indirectly lost: 0 bytes in 0 blocks
==31569==      possibly lost: 0 bytes in 0 blocks
==31569==    still reachable: 8 bytes in 1 blocks
==31569==         suppressed: 0 bytes in 0 blocks
==31569== Rerun with --leak-check=full to see details of leaked memory
==31569== 
==31569== For counts of detected and suppressed errors, rerun with: -v
==31569== Use --track-origins=yes to see where uninitialised values come from
==31569== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-backwards=1    
==31575== Memcheck, a memory error detector
==31575== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31575== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31575== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1
==31575== 
==31575== Thread 3:
==31575== Conditional jump or move depends on uninitialised value(s)
==31575==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31575==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31575==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31575==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31575==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31575==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31575==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31575== 
==31575== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31575==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31575==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31575==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31575==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31575==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31575==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31575==  Address 0xad2f536 is 214 bytes inside a block of size 4,184 alloc'd
==31575==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31575==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31575==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31575== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.508000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.981000
	perf-misc  			1.024000
	perf-total		12.513000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.915000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.832000
	perf-misc  			0.949000
	perf-total		8.696001
==31575== 
==31575== HEAP SUMMARY:
==31575==     in use at exit: 8 bytes in 1 blocks
==31575==   total heap usage: 103,041 allocs, 103,040 frees, 110,248,360 bytes allocated
==31575== 
==31575== LEAK SUMMARY:
==31575==    definitely lost: 0 bytes in 0 blocks
==31575==    indirectly lost: 0 bytes in 0 blocks
==31575==      possibly lost: 0 bytes in 0 blocks
==31575==    still reachable: 8 bytes in 1 blocks
==31575==         suppressed: 0 bytes in 0 blocks
==31575== Rerun with --leak-check=full to see details of leaked memory
==31575== 
==31575== For counts of detected and suppressed errors, rerun with: -v
==31575== Use --track-origins=yes to see where uninitialised values come from
==31575== ERROR SUMMARY: 319 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-backwards=1    
==31580== Memcheck, a memory error detector
==31580== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31580== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31580== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1
==31580== 
==31580== Thread 3:
==31580== Conditional jump or move depends on uninitialised value(s)
==31580==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31580==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31580==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31580==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31580==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31580==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31580==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31580== 
==31580== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31580==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31580==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==  Address 0xaebfad6 is 1,126 bytes inside a block of size 4,184 alloc'd
==31580==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31580==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31580== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.709000
	perf-erase 			0.390000
	perf-find  			0.000000
	perf-insert			0.776000
	perf-misc  			0.307000
	perf-total		8.182000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.747000
	perf-erase 			0.213000
	perf-find  			0.000000
	perf-insert			0.481000
	perf-misc  			0.378000
	perf-total		4.819000
==31580== 
==31580== HEAP SUMMARY:
==31580==     in use at exit: 8 bytes in 1 blocks
==31580==   total heap usage: 90,833 allocs, 90,832 frees, 109,601,592 bytes allocated
==31580== 
==31580== LEAK SUMMARY:
==31580==    definitely lost: 0 bytes in 0 blocks
==31580==    indirectly lost: 0 bytes in 0 blocks
==31580==      possibly lost: 0 bytes in 0 blocks
==31580==    still reachable: 8 bytes in 1 blocks
==31580==         suppressed: 0 bytes in 0 blocks
==31580== Rerun with --leak-check=full to see details of leaked memory
==31580== 
==31580== For counts of detected and suppressed errors, rerun with: -v
==31580== Use --track-origins=yes to see where uninitialised values come from
==31580== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1    
==31585== Memcheck, a memory error detector
==31585== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31585== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31585== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1
==31585== 
==31585== Thread 3:
==31585== Conditional jump or move depends on uninitialised value(s)
==31585==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31585==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31585==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31585==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31585==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31585==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31585==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31585== 
==31585== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31585==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31585==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31585==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31585==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31585==  Address 0xac609be is 126 bytes inside a block of size 4,184 alloc'd
==31585==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31585==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31585==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31585== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.041000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.110000
	perf-misc  			0.356000
	perf-total		0.507000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.152000
	perf-misc  			0.342000
	perf-total		0.525000
==31585== 
==31585== HEAP SUMMARY:
==31585==     in use at exit: 8 bytes in 1 blocks
==31585==   total heap usage: 1,747 allocs, 1,746 frees, 105,773,460 bytes allocated
==31585== 
==31585== LEAK SUMMARY:
==31585==    definitely lost: 0 bytes in 0 blocks
==31585==    indirectly lost: 0 bytes in 0 blocks
==31585==      possibly lost: 0 bytes in 0 blocks
==31585==    still reachable: 8 bytes in 1 blocks
==31585==         suppressed: 0 bytes in 0 blocks
==31585== Rerun with --leak-check=full to see details of leaked memory
==31585== 
==31585== For counts of detected and suppressed errors, rerun with: -v
==31585== Use --track-origins=yes to see where uninitialised values come from
==31585== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1    
==31590== Memcheck, a memory error detector
==31590== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31590== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31590== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1
==31590== 
==31590== Thread 3:
==31590== Conditional jump or move depends on uninitialised value(s)
==31590==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31590==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31590==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31590==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31590==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31590==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31590==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31590== 
==31590== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31590==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31590==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31590==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31590==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31590==  Address 0xb27beaa is 410 bytes inside a block of size 4,184 alloc'd
==31590==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31590==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31590==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31590== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			41.071002
	perf-erase 			0.570000
	perf-find  			1.090000
	perf-insert			1.258000
	perf-misc  			0.392000
	perf-total		44.381000
hamsterdb
	filesize		65536
	mem-num-allocs		449247
	mem-peak-bytes		7598
	mem-total-bytes		11899230
	perf-cursor			32.242999
	perf-erase 			0.378000
	perf-find  			0.755000
	perf-insert			0.875000
	perf-misc  			0.372000
	perf-total		34.623001
==31590== 
==31590== HEAP SUMMARY:
==31590==     in use at exit: 8 bytes in 1 blocks
==31590==   total heap usage: 1,065,219 allocs, 1,065,218 frees, 141,899,243 bytes allocated
==31590== 
==31590== LEAK SUMMARY:
==31590==    definitely lost: 0 bytes in 0 blocks
==31590==    indirectly lost: 0 bytes in 0 blocks
==31590==      possibly lost: 0 bytes in 0 blocks
==31590==    still reachable: 8 bytes in 1 blocks
==31590==         suppressed: 0 bytes in 0 blocks
==31590== Rerun with --leak-check=full to see details of leaked memory
==31590== 
==31590== For counts of detected and suppressed errors, rerun with: -v
==31590== Use --track-origins=yes to see where uninitialised values come from
==31590== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1    
==31595== Memcheck, a memory error detector
==31595== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31595== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31595== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1
==31595== 
==31595== Thread 3:
==31595== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31595==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31595==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31595==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31595==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31595==  Address 0xac45ae0 is 3,984 bytes inside a block of size 4,184 alloc'd
==31595==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31595==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31595== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.554000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.415000
	perf-misc  			0.320000
	perf-total		7.289000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.024000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.840000
	perf-misc  			0.300000
	perf-total		3.164000
==31595== 
==31595== HEAP SUMMARY:
==31595==     in use at exit: 8 bytes in 1 blocks
==31595==   total heap usage: 1,301 allocs, 1,300 frees, 227,153,526 bytes allocated
==31595== 
==31595== LEAK SUMMARY:
==31595==    definitely lost: 0 bytes in 0 blocks
==31595==    indirectly lost: 0 bytes in 0 blocks
==31595==      possibly lost: 0 bytes in 0 blocks
==31595==    still reachable: 8 bytes in 1 blocks
==31595==         suppressed: 0 bytes in 0 blocks
==31595== Rerun with --leak-check=full to see details of leaked memory
==31595== 
==31595== For counts of detected and suppressed errors, rerun with: -v
==31595== Use --track-origins=yes to see where uninitialised values come from
==31595== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-backwards=1 --duplicate=1    
==31603== Memcheck, a memory error detector
==31603== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31603== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31603== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1 --duplicate=1
==31603== 
==31603== Thread 3:
==31603== Conditional jump or move depends on uninitialised value(s)
==31603==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31603==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31603==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31603==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31603==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31603==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31603==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31603== 
==31603== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31603==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31603==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31603==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31603==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31603==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31603==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31603==  Address 0xad2f536 is 214 bytes inside a block of size 4,184 alloc'd
==31603==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31603==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31603==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31603== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.625000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.995000
	perf-misc  			1.091000
	perf-total		12.711000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.726000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.872000
	perf-misc  			1.155000
	perf-total		8.753000
==31603== 
==31603== HEAP SUMMARY:
==31603==     in use at exit: 8 bytes in 1 blocks
==31603==   total heap usage: 103,041 allocs, 103,040 frees, 110,248,360 bytes allocated
==31603== 
==31603== LEAK SUMMARY:
==31603==    definitely lost: 0 bytes in 0 blocks
==31603==    indirectly lost: 0 bytes in 0 blocks
==31603==      possibly lost: 0 bytes in 0 blocks
==31603==    still reachable: 8 bytes in 1 blocks
==31603==         suppressed: 0 bytes in 0 blocks
==31603== Rerun with --leak-check=full to see details of leaked memory
==31603== 
==31603== For counts of detected and suppressed errors, rerun with: -v
==31603== Use --track-origins=yes to see where uninitialised values come from
==31603== ERROR SUMMARY: 319 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-backwards=1 --duplicate=1    
==31612== Memcheck, a memory error detector
==31612== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31612== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31612== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1 --duplicate=1
==31612== 
==31612== Thread 3:
==31612== Conditional jump or move depends on uninitialised value(s)
==31612==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31612==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31612==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31612==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31612==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31612==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31612==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31612== 
==31612== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31612==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31612==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4E63D0D: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==  Address 0xae74dbf is 1,135 bytes inside a block of size 4,184 alloc'd
==31612==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31612==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31612== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		1548288
	perf-cursor			11.517000
	perf-erase 			0.675000
	perf-find  			0.000000
	perf-insert			1.139000
	perf-misc  			0.317000
	perf-total		13.648000
hamsterdb
	filesize		835584
	mem-num-allocs		5138
	mem-peak-bytes		284
	mem-total-bytes		360584
	perf-cursor			6.602000
	perf-erase 			0.242000
	perf-find  			0.000000
	perf-insert			0.686000
	perf-misc  			0.409000
	perf-total		7.939000
==31612== 
==31612== HEAP SUMMARY:
==31612==     in use at exit: 8 bytes in 1 blocks
==31612==   total heap usage: 93,510 allocs, 93,509 frees, 110,289,843 bytes allocated
==31612== 
==31612== LEAK SUMMARY:
==31612==    definitely lost: 0 bytes in 0 blocks
==31612==    indirectly lost: 0 bytes in 0 blocks
==31612==      possibly lost: 0 bytes in 0 blocks
==31612==    still reachable: 8 bytes in 1 blocks
==31612==         suppressed: 0 bytes in 0 blocks
==31612== Rerun with --leak-check=full to see details of leaked memory
==31612== 
==31612== For counts of detected and suppressed errors, rerun with: -v
==31612== Use --track-origins=yes to see where uninitialised values come from
==31612== ERROR SUMMARY: 775 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --duplicate=1    
==31617== Memcheck, a memory error detector
==31617== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31617== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31617== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --duplicate=1
==31617== 
==31617== Thread 3:
==31617== Conditional jump or move depends on uninitialised value(s)
==31617==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31617==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31617==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31617==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31617==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31617==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31617==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31617== 
==31617== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31617==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31617==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31617==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31617==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31617==  Address 0xac609be is 126 bytes inside a block of size 4,184 alloc'd
==31617==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31617==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31617==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31617== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.036000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.108000
	perf-misc  			0.362000
	perf-total		0.506000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.028000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.109000
	perf-misc  			0.337000
	perf-total		0.474000
==31617== 
==31617== HEAP SUMMARY:
==31617==     in use at exit: 8 bytes in 1 blocks
==31617==   total heap usage: 1,747 allocs, 1,746 frees, 105,773,460 bytes allocated
==31617== 
==31617== LEAK SUMMARY:
==31617==    definitely lost: 0 bytes in 0 blocks
==31617==    indirectly lost: 0 bytes in 0 blocks
==31617==      possibly lost: 0 bytes in 0 blocks
==31617==    still reachable: 8 bytes in 1 blocks
==31617==         suppressed: 0 bytes in 0 blocks
==31617== Rerun with --leak-check=full to see details of leaked memory
==31617== 
==31617== For counts of detected and suppressed errors, rerun with: -v
==31617== Use --track-origins=yes to see where uninitialised values come from
==31617== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --duplicate=1    
==31622== Memcheck, a memory error detector
==31622== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31622== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31622== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --duplicate=1
==31622== 
==31622== Thread 3:
==31622== Conditional jump or move depends on uninitialised value(s)
==31622==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31622==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31622==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31622==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31622==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31622==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31622==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31622== 
==31622== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31622==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31622==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==  Address 0x1282fb7a is 682 bytes inside a block of size 4,184 alloc'd
==31622==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31622==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31622==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31622== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			750.482031
	perf-erase 			1.057000
	perf-find  			2.044000
	perf-insert			3.383000
	perf-misc  			0.443000
	perf-total		757.408989
hamsterdb
	filesize		1261568
	mem-num-allocs		8552078
	mem-peak-bytes		8755
	mem-total-bytes		237226936
	perf-cursor			650.008986
	perf-erase 			0.373000
	perf-find  			1.224000
	perf-insert			1.890000
	perf-misc  			0.360000
	perf-total		653.856014
==31622== 
==31622== HEAP SUMMARY:
==31622==     in use at exit: 8 bytes in 1 blocks
==31622==   total heap usage: 9,197,496 allocs, 9,197,495 frees, 463,138,100 bytes allocated
==31622== 
==31622== LEAK SUMMARY:
==31622==    definitely lost: 0 bytes in 0 blocks
==31622==    indirectly lost: 0 bytes in 0 blocks
==31622==      possibly lost: 0 bytes in 0 blocks
==31622==    still reachable: 8 bytes in 1 blocks
==31622==         suppressed: 0 bytes in 0 blocks
==31622== Rerun with --leak-check=full to see details of leaked memory
==31622== 
==31622== For counts of detected and suppressed errors, rerun with: -v
==31622== Use --track-origins=yes to see where uninitialised values come from
==31622== ERROR SUMMARY: 432 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --duplicate=1    
==31645== Memcheck, a memory error detector
==31645== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31645== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31645== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --duplicate=1
==31645== 
==31645== Thread 3:
==31645== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31645==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31645==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31645==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31645==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31645==  Address 0xac41ae8 is 3,576 bytes inside a block of size 4,184 alloc'd
==31645==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31645==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31645== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.774000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.598000
	perf-misc  			0.333000
	perf-total		8.705000
hamsterdb
	filesize		50315264
	mem-num-allocs		15
	mem-peak-bytes		144
	mem-total-bytes		192
	perf-cursor			1.062000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.757000
	perf-misc  			0.416000
	perf-total		2.235000
==31645== 
==31645== HEAP SUMMARY:
==31645==     in use at exit: 8 bytes in 1 blocks
==31645==   total heap usage: 1,305 allocs, 1,304 frees, 227,154,107 bytes allocated
==31645== 
==31645== LEAK SUMMARY:
==31645==    definitely lost: 0 bytes in 0 blocks
==31645==    indirectly lost: 0 bytes in 0 blocks
==31645==      possibly lost: 0 bytes in 0 blocks
==31645==    still reachable: 8 bytes in 1 blocks
==31645==         suppressed: 0 bytes in 0 blocks
==31645== Rerun with --leak-check=full to see details of leaked memory
==31645== 
==31645== For counts of detected and suppressed errors, rerun with: -v
==31645== Use --track-origins=yes to see where uninitialised values come from
==31645== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-backwards=1 --useralloc=1    
==31651== Memcheck, a memory error detector
==31651== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31651== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31651== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1 --useralloc=1
==31651== 
==31651== Thread 3:
==31651== Conditional jump or move depends on uninitialised value(s)
==31651==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31651==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31651==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31651==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31651==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31651==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31651==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31651== 
==31651== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31651==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31651==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31651==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31651==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31651==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31651==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31651==  Address 0xad2f536 is 214 bytes inside a block of size 4,184 alloc'd
==31651==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31651==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31651==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31651== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.347000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.023000
	perf-misc  			1.070000
	perf-total		12.440001
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.525000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.811000
	perf-misc  			1.114000
	perf-total		8.450000
==31651== 
==31651== HEAP SUMMARY:
==31651==     in use at exit: 8 bytes in 1 blocks
==31651==   total heap usage: 103,041 allocs, 103,040 frees, 110,248,360 bytes allocated
==31651== 
==31651== LEAK SUMMARY:
==31651==    definitely lost: 0 bytes in 0 blocks
==31651==    indirectly lost: 0 bytes in 0 blocks
==31651==      possibly lost: 0 bytes in 0 blocks
==31651==    still reachable: 8 bytes in 1 blocks
==31651==         suppressed: 0 bytes in 0 blocks
==31651== Rerun with --leak-check=full to see details of leaked memory
==31651== 
==31651== For counts of detected and suppressed errors, rerun with: -v
==31651== Use --track-origins=yes to see where uninitialised values come from
==31651== ERROR SUMMARY: 319 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-backwards=1 --useralloc=1    
==31656== Memcheck, a memory error detector
==31656== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31656== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31656== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1 --useralloc=1
==31656== 
==31656== Thread 3:
==31656== Conditional jump or move depends on uninitialised value(s)
==31656==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31656==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31656==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31656==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31656==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31656==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31656==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31656== 
==31656== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31656==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31656==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==  Address 0xaebfad6 is 1,126 bytes inside a block of size 4,184 alloc'd
==31656==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31656==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31656== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.698000
	perf-erase 			0.439000
	perf-find  			0.000000
	perf-insert			0.800000
	perf-misc  			0.334000
	perf-total		8.271000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.746000
	perf-erase 			0.231000
	perf-find  			0.000000
	perf-insert			0.487000
	perf-misc  			0.400000
	perf-total		4.864000
==31656== 
==31656== HEAP SUMMARY:
==31656==     in use at exit: 8 bytes in 1 blocks
==31656==   total heap usage: 90,833 allocs, 90,832 frees, 109,601,592 bytes allocated
==31656== 
==31656== LEAK SUMMARY:
==31656==    definitely lost: 0 bytes in 0 blocks
==31656==    indirectly lost: 0 bytes in 0 blocks
==31656==      possibly lost: 0 bytes in 0 blocks
==31656==    still reachable: 8 bytes in 1 blocks
==31656==         suppressed: 0 bytes in 0 blocks
==31656== Rerun with --leak-check=full to see details of leaked memory
==31656== 
==31656== For counts of detected and suppressed errors, rerun with: -v
==31656== Use --track-origins=yes to see where uninitialised values come from
==31656== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --useralloc=1    
==31661== Memcheck, a memory error detector
==31661== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31661== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31661== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --useralloc=1
==31661== 
==31661== Thread 3:
==31661== Conditional jump or move depends on uninitialised value(s)
==31661==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31661==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31661==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31661==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31661==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31661==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31661==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31661== 
==31661== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31661==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31661==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31661==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31661==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31661==  Address 0xac609be is 126 bytes inside a block of size 4,184 alloc'd
==31661==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31661==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31661==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31661== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.103000
	perf-misc  			0.385000
	perf-total		0.532000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.030000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.105000
	perf-misc  			0.318000
	perf-total		0.453000
==31661== 
==31661== HEAP SUMMARY:
==31661==     in use at exit: 8 bytes in 1 blocks
==31661==   total heap usage: 1,747 allocs, 1,746 frees, 105,773,460 bytes allocated
==31661== 
==31661== LEAK SUMMARY:
==31661==    definitely lost: 0 bytes in 0 blocks
==31661==    indirectly lost: 0 bytes in 0 blocks
==31661==      possibly lost: 0 bytes in 0 blocks
==31661==    still reachable: 8 bytes in 1 blocks
==31661==         suppressed: 0 bytes in 0 blocks
==31661== Rerun with --leak-check=full to see details of leaked memory
==31661== 
==31661== For counts of detected and suppressed errors, rerun with: -v
==31661== Use --track-origins=yes to see where uninitialised values come from
==31661== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --useralloc=1    
==31666== Memcheck, a memory error detector
==31666== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31666== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31666== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --useralloc=1
==31666== 
==31666== Thread 3:
==31666== Conditional jump or move depends on uninitialised value(s)
==31666==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31666==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31666==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31666==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31666==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31666==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31666==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31666== 
==31666== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31666==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31666==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31666==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31666==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31666==  Address 0xb27beaa is 410 bytes inside a block of size 4,184 alloc'd
==31666==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31666==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31666==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31666== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			41.608999
	perf-erase 			0.561000
	perf-find  			1.102000
	perf-insert			1.334000
	perf-misc  			0.352000
	perf-total		44.957999
hamsterdb
	filesize		65536
	mem-num-allocs		449247
	mem-peak-bytes		7598
	mem-total-bytes		11899230
	perf-cursor			32.582001
	perf-erase 			0.395000
	perf-find  			0.772000
	perf-insert			0.875000
	perf-misc  			0.330000
	perf-total		34.953998
==31666== 
==31666== HEAP SUMMARY:
==31666==     in use at exit: 8 bytes in 1 blocks
==31666==   total heap usage: 1,065,219 allocs, 1,065,218 frees, 141,899,243 bytes allocated
==31666== 
==31666== LEAK SUMMARY:
==31666==    definitely lost: 0 bytes in 0 blocks
==31666==    indirectly lost: 0 bytes in 0 blocks
==31666==      possibly lost: 0 bytes in 0 blocks
==31666==    still reachable: 8 bytes in 1 blocks
==31666==         suppressed: 0 bytes in 0 blocks
==31666== Rerun with --leak-check=full to see details of leaked memory
==31666== 
==31666== For counts of detected and suppressed errors, rerun with: -v
==31666== Use --track-origins=yes to see where uninitialised values come from
==31666== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --useralloc=1    
==31671== Memcheck, a memory error detector
==31671== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31671== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31671== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --useralloc=1
==31671== 
==31671== Thread 3:
==31671== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31671==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31671==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31671==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31671==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31671==  Address 0xac455e0 is 3,984 bytes inside a block of size 4,184 alloc'd
==31671==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31671==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31671== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.716000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.442000
	perf-misc  			0.360000
	perf-total		7.518000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.036000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.388000
	perf-misc  			0.309000
	perf-total		3.733000
==31671== 
==31671== HEAP SUMMARY:
==31671==     in use at exit: 8 bytes in 1 blocks
==31671==   total heap usage: 1,301 allocs, 1,300 frees, 227,153,526 bytes allocated
==31671== 
==31671== LEAK SUMMARY:
==31671==    definitely lost: 0 bytes in 0 blocks
==31671==    indirectly lost: 0 bytes in 0 blocks
==31671==      possibly lost: 0 bytes in 0 blocks
==31671==    still reachable: 8 bytes in 1 blocks
==31671==         suppressed: 0 bytes in 0 blocks
==31671== Rerun with --leak-check=full to see details of leaked memory
==31671== 
==31671== For counts of detected and suppressed errors, rerun with: -v
==31671== Use --track-origins=yes to see where uninitialised values come from
==31671== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --useralloc=1    
==31677== Memcheck, a memory error detector
==31677== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31677== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31677== Command: ./test ../../testfiles/1/45.tst --useralloc=1
==31677== 
==31677== Thread 3:
==31677== Conditional jump or move depends on uninitialised value(s)
==31677==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31677==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31677==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31677==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31677==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31677==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31677==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31677== 
==31677== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31677==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31677==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31677==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31677==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31677==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31677==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31677==  Address 0xad2f6b6 is 214 bytes inside a block of size 4,184 alloc'd
==31677==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31677==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31677==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31677== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.432000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.032000
	perf-misc  			1.049000
	perf-total		12.513000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.773000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.853000
	perf-misc  			0.987000
	perf-total		8.613000
==31677== 
==31677== HEAP SUMMARY:
==31677==     in use at exit: 8 bytes in 1 blocks
==31677==   total heap usage: 103,039 allocs, 103,038 frees, 110,248,316 bytes allocated
==31677== 
==31677== LEAK SUMMARY:
==31677==    definitely lost: 0 bytes in 0 blocks
==31677==    indirectly lost: 0 bytes in 0 blocks
==31677==      possibly lost: 0 bytes in 0 blocks
==31677==    still reachable: 8 bytes in 1 blocks
==31677==         suppressed: 0 bytes in 0 blocks
==31677== Rerun with --leak-check=full to see details of leaked memory
==31677== 
==31677== For counts of detected and suppressed errors, rerun with: -v
==31677== Use --track-origins=yes to see where uninitialised values come from
==31677== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --useralloc=1    
==31683== Memcheck, a memory error detector
==31683== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31683== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31683== Command: ./test ../../testfiles/1/220.tst --useralloc=1
==31683== 
==31683== Thread 3:
==31683== Conditional jump or move depends on uninitialised value(s)
==31683==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31683==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31683==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31683==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31683==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31683==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31683==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31683== 
==31683== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31683==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31683==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==  Address 0xaebb032 is 130 bytes inside a block of size 4,184 alloc'd
==31683==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31683==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31683==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31683== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.763000
	perf-erase 			0.436000
	perf-find  			0.000000
	perf-insert			0.772000
	perf-misc  			0.365000
	perf-total		8.336000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.660000
	perf-erase 			0.194000
	perf-find  			0.000000
	perf-insert			0.448000
	perf-misc  			0.306000
	perf-total		4.608000
==31683== 
==31683== HEAP SUMMARY:
==31683==     in use at exit: 8 bytes in 1 blocks
==31683==   total heap usage: 90,837 allocs, 90,836 frees, 109,604,042 bytes allocated
==31683== 
==31683== LEAK SUMMARY:
==31683==    definitely lost: 0 bytes in 0 blocks
==31683==    indirectly lost: 0 bytes in 0 blocks
==31683==      possibly lost: 0 bytes in 0 blocks
==31683==    still reachable: 8 bytes in 1 blocks
==31683==         suppressed: 0 bytes in 0 blocks
==31683== Rerun with --leak-check=full to see details of leaked memory
==31683== 
==31683== For counts of detected and suppressed errors, rerun with: -v
==31683== Use --track-origins=yes to see where uninitialised values come from
==31683== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --useralloc=1    
==31688== Memcheck, a memory error detector
==31688== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31688== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31688== Command: ./test ../../testfiles/1/ext_020.tst --useralloc=1
==31688== 
==31688== Thread 3:
==31688== Conditional jump or move depends on uninitialised value(s)
==31688==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31688==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31688==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31688==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31688==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31688==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31688==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31688== 
==31688== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31688==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31688==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31688==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31688==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31688==  Address 0xac609be is 126 bytes inside a block of size 4,184 alloc'd
==31688==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31688==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31688==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31688== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.045000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.093000
	perf-misc  			0.341000
	perf-total		0.479000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.024000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.110000
	perf-misc  			0.364000
	perf-total		0.498000
==31688== 
==31688== HEAP SUMMARY:
==31688==     in use at exit: 8 bytes in 1 blocks
==31688==   total heap usage: 1,747 allocs, 1,746 frees, 105,773,460 bytes allocated
==31688== 
==31688== LEAK SUMMARY:
==31688==    definitely lost: 0 bytes in 0 blocks
==31688==    indirectly lost: 0 bytes in 0 blocks
==31688==      possibly lost: 0 bytes in 0 blocks
==31688==    still reachable: 8 bytes in 1 blocks
==31688==         suppressed: 0 bytes in 0 blocks
==31688== Rerun with --leak-check=full to see details of leaked memory
==31688== 
==31688== For counts of detected and suppressed errors, rerun with: -v
==31688== Use --track-origins=yes to see where uninitialised values come from
==31688== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --useralloc=1    
==31693== Memcheck, a memory error detector
==31693== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31693== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31693== Command: ./test ../../testfiles/2/ext_060.tst --useralloc=1
==31693== 
==31693== Thread 3:
==31693== Conditional jump or move depends on uninitialised value(s)
==31693==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31693==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31693==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31693==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31693==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31693==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31693==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31693== 
==31693== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31693==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31693==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31693==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31693==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31693==  Address 0xb27bc3a is 410 bytes inside a block of size 4,184 alloc'd
==31693==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31693==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31693==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31693== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			42.054001
	perf-erase 			0.549000
	perf-find  			1.126000
	perf-insert			1.264000
	perf-misc  			0.403000
	perf-total		45.396001
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			31.874001
	perf-erase 			0.378000
	perf-find  			0.747000
	perf-insert			0.838000
	perf-misc  			0.326000
	perf-total		34.162999
==31693== 
==31693== HEAP SUMMARY:
==31693==     in use at exit: 8 bytes in 1 blocks
==31693==   total heap usage: 1,065,212 allocs, 1,065,211 frees, 141,899,092 bytes allocated
==31693== 
==31693== LEAK SUMMARY:
==31693==    definitely lost: 0 bytes in 0 blocks
==31693==    indirectly lost: 0 bytes in 0 blocks
==31693==      possibly lost: 0 bytes in 0 blocks
==31693==    still reachable: 8 bytes in 1 blocks
==31693==         suppressed: 0 bytes in 0 blocks
==31693== Rerun with --leak-check=full to see details of leaked memory
==31693== 
==31693== For counts of detected and suppressed errors, rerun with: -v
==31693== Use --track-origins=yes to see where uninitialised values come from
==31693== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --useralloc=1    
==31699== Memcheck, a memory error detector
==31699== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31699== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31699== Command: ./test ../../testfiles/2/blb-001.tst --useralloc=1
==31699== 
==31699== Thread 3:
==31699== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31699==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31699==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31699==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31699==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31699==  Address 0xac41c80 is 3,984 bytes inside a block of size 4,184 alloc'd
==31699==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31699==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31699== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.546000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.525000
	perf-misc  			0.329000
	perf-total		8.400000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.059000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.974000
	perf-misc  			0.320000
	perf-total		2.353000
==31699== 
==31699== HEAP SUMMARY:
==31699==     in use at exit: 8 bytes in 1 blocks
==31699==   total heap usage: 1,301 allocs, 1,300 frees, 227,153,526 bytes allocated
==31699== 
==31699== LEAK SUMMARY:
==31699==    definitely lost: 0 bytes in 0 blocks
==31699==    indirectly lost: 0 bytes in 0 blocks
==31699==      possibly lost: 0 bytes in 0 blocks
==31699==    still reachable: 8 bytes in 1 blocks
==31699==         suppressed: 0 bytes in 0 blocks
==31699== Rerun with --leak-check=full to see details of leaked memory
==31699== 
==31699== For counts of detected and suppressed errors, rerun with: -v
==31699== Use --track-origins=yes to see where uninitialised values come from
==31699== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==31705== Memcheck, a memory error detector
==31705== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31705== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31705== Command: ./test ../../testfiles/1/45.tst --disable-mmap=1 --overwrite=1 --reopen=1
==31705== 
==31705== Thread 3:
==31705== Conditional jump or move depends on uninitialised value(s)
==31705==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31705==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31705==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31705==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31705==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31705==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31705==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31705== 
==31705== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31705==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31705==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31705==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31705==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31705==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31705==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31705==  Address 0xad3ba26 is 214 bytes inside a block of size 4,184 alloc'd
==31705==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31705==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31705==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31705== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.707000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.017000
	perf-misc  			1.340000
	perf-total		13.063999
hamsterdb
	filesize		966656
	mem-num-allocs		2872
	mem-peak-bytes		966668
	mem-total-bytes		977908
	perf-cursor			6.501000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.831000
	perf-misc  			1.337000
	perf-total		8.669000
==31705== 
==31705== HEAP SUMMARY:
==31705==     in use at exit: 8 bytes in 1 blocks
==31705==   total heap usage: 103,451 allocs, 103,450 frees, 112,953,279 bytes allocated
==31705== 
==31705== LEAK SUMMARY:
==31705==    definitely lost: 0 bytes in 0 blocks
==31705==    indirectly lost: 0 bytes in 0 blocks
==31705==      possibly lost: 0 bytes in 0 blocks
==31705==    still reachable: 8 bytes in 1 blocks
==31705==         suppressed: 0 bytes in 0 blocks
==31705== Rerun with --leak-check=full to see details of leaked memory
==31705== 
==31705== For counts of detected and suppressed errors, rerun with: -v
==31705== Use --track-origins=yes to see where uninitialised values come from
==31705== ERROR SUMMARY: 325 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==31710== Memcheck, a memory error detector
==31710== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31710== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31710== Command: ./test ../../testfiles/1/220.tst --disable-mmap=1 --overwrite=1 --reopen=1
==31710== 
==31710== Thread 3:
==31710== Conditional jump or move depends on uninitialised value(s)
==31710==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31710==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31710==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31710==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31710==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31710==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31710==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31710== 
==31710== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31710==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31710==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==  Address 0xadc6abe is 142 bytes inside a block of size 4,184 alloc'd
==31710==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31710==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31710==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31710== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.866000
	perf-erase 			0.387000
	perf-find  			0.000000
	perf-insert			0.903000
	perf-misc  			0.495000
	perf-total		8.651000
hamsterdb
	filesize		507904
	mem-num-allocs		2593
	mem-peak-bytes		507916
	mem-total-bytes		518152
	perf-cursor			3.668000
	perf-erase 			0.208000
	perf-find  			0.000000
	perf-insert			0.579000
	perf-misc  			0.713000
	perf-total		5.168000
==31710== 
==31710== HEAP SUMMARY:
==31710==     in use at exit: 8 bytes in 1 blocks
==31710==   total heap usage: 91,194 allocs, 91,193 frees, 111,441,242 bytes allocated
==31710== 
==31710== LEAK SUMMARY:
==31710==    definitely lost: 0 bytes in 0 blocks
==31710==    indirectly lost: 0 bytes in 0 blocks
==31710==      possibly lost: 0 bytes in 0 blocks
==31710==    still reachable: 8 bytes in 1 blocks
==31710==         suppressed: 0 bytes in 0 blocks
==31710== Rerun with --leak-check=full to see details of leaked memory
==31710== 
==31710== For counts of detected and suppressed errors, rerun with: -v
==31710== Use --track-origins=yes to see where uninitialised values come from
==31710== ERROR SUMMARY: 276 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==31715== Memcheck, a memory error detector
==31715== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31715== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31715== Command: ./test ../../testfiles/1/ext_020.tst --disable-mmap=1 --overwrite=1 --reopen=1
==31715== 
==31715== Thread 3:
==31715== Conditional jump or move depends on uninitialised value(s)
==31715==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31715==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31715==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31715==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31715==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31715==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31715==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31715== 
==31715== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31715==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31715==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31715==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31715==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31715==  Address 0xac6cd2e is 126 bytes inside a block of size 4,184 alloc'd
==31715==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31715==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31715==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31715== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.051000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.115000
	perf-misc  			0.593000
	perf-total		0.759000
hamsterdb
	filesize		65536
	mem-num-allocs		259
	mem-peak-bytes		79260
	mem-total-bytes		172120
	perf-cursor			0.029000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.107000
	perf-misc  			0.502000
	perf-total		0.638000
==31715== 
==31715== HEAP SUMMARY:
==31715==     in use at exit: 8 bytes in 1 blocks
==31715==   total heap usage: 1,998 allocs, 1,997 frees, 106,568,995 bytes allocated
==31715== 
==31715== LEAK SUMMARY:
==31715==    definitely lost: 0 bytes in 0 blocks
==31715==    indirectly lost: 0 bytes in 0 blocks
==31715==      possibly lost: 0 bytes in 0 blocks
==31715==    still reachable: 8 bytes in 1 blocks
==31715==         suppressed: 0 bytes in 0 blocks
==31715== Rerun with --leak-check=full to see details of leaked memory
==31715== 
==31715== For counts of detected and suppressed errors, rerun with: -v
==31715== Use --track-origins=yes to see where uninitialised values come from
==31715== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==31720== Memcheck, a memory error detector
==31720== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31720== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31720== Command: ./test ../../testfiles/2/ext_060.tst --disable-mmap=1 --overwrite=1 --reopen=1
==31720== 
==31720== Thread 3:
==31720== Conditional jump or move depends on uninitialised value(s)
==31720==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31720==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31720==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31720==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31720==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31720==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31720==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31720== 
==31720== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31720==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31720==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31720==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31720==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31720==  Address 0xb28b722 is 418 bytes inside a block of size 4,184 alloc'd
==31720==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31720==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31720==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31720== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			41.954001
	perf-erase 			0.590000
	perf-find  			1.083000
	perf-insert			1.767000
	perf-misc  			0.582000
	perf-total		45.975998
hamsterdb
	filesize		81920
	mem-num-allocs		449310
	mem-peak-bytes		89535
	mem-total-bytes		11981748
	perf-cursor			32.006001
	perf-erase 			0.402000
	perf-find  			0.680000
	perf-insert			1.248000
	perf-misc  			0.614000
	perf-total		34.950001
==31720== 
==31720== HEAP SUMMARY:
==31720==     in use at exit: 8 bytes in 1 blocks
==31720==   total heap usage: 1,065,744 allocs, 1,065,743 frees, 142,700,156 bytes allocated
==31720== 
==31720== LEAK SUMMARY:
==31720==    definitely lost: 0 bytes in 0 blocks
==31720==    indirectly lost: 0 bytes in 0 blocks
==31720==      possibly lost: 0 bytes in 0 blocks
==31720==    still reachable: 8 bytes in 1 blocks
==31720==         suppressed: 0 bytes in 0 blocks
==31720== Rerun with --leak-check=full to see details of leaked memory
==31720== 
==31720== For counts of detected and suppressed errors, rerun with: -v
==31720== Use --track-origins=yes to see where uninitialised values come from
==31720== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==31735== Memcheck, a memory error detector
==31735== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31735== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31735== Command: ./test ../../testfiles/2/blb-001.tst --disable-mmap=1 --overwrite=1 --reopen=1
==31735== 
==31735== Thread 3:
==31735== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31735==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31735==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31735==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31735==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31735==  Address 0xac51684 is 3,588 bytes inside a block of size 4,184 alloc'd
==31735==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31735==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31735== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.709000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.727000
	perf-misc  			1.100000
	perf-total		6.536000
hamsterdb
	filesize		40697856
	mem-num-allocs		40
	mem-peak-bytes		425996
	mem-total-bytes		426040
	perf-cursor			0.153000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			5.013000
	perf-misc  			1.279000
	perf-total		6.445000
==31735== 
==31735== HEAP SUMMARY:
==31735==     in use at exit: 8 bytes in 1 blocks
==31735==   total heap usage: 1,604 allocs, 1,603 frees, 190,336,196 bytes allocated
==31735== 
==31735== LEAK SUMMARY:
==31735==    definitely lost: 0 bytes in 0 blocks
==31735==    indirectly lost: 0 bytes in 0 blocks
==31735==      possibly lost: 0 bytes in 0 blocks
==31735==    still reachable: 8 bytes in 1 blocks
==31735==         suppressed: 0 bytes in 0 blocks
==31735== Rerun with --leak-check=full to see details of leaked memory
==31735== 
==31735== For counts of detected and suppressed errors, rerun with: -v
==31735== Use --track-origins=yes to see where uninitialised values come from
==31735== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --keysize=8 --overwrite=1 --reopen=1    
==31741== Memcheck, a memory error detector
==31741== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31741== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31741== Command: ./test ../../testfiles/1/45.tst --keysize=8 --overwrite=1 --reopen=1
==31741== 
==31741== Thread 3:
==31741== Conditional jump or move depends on uninitialised value(s)
==31741==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31741==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31741==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31741==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31741==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31741==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31741==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31741== 
==31741== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31741==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31741==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31741==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31741==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31741==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31741==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31741==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31741==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31741==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31741==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31741== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.885000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.014000
	perf-misc  			1.380000
	perf-total		13.279000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.792000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.850000
	perf-misc  			1.283000
	perf-total		8.925000
==31741== 
==31741== HEAP SUMMARY:
==31741==     in use at exit: 8 bytes in 1 blocks
==31741==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31741== 
==31741== LEAK SUMMARY:
==31741==    definitely lost: 0 bytes in 0 blocks
==31741==    indirectly lost: 0 bytes in 0 blocks
==31741==      possibly lost: 0 bytes in 0 blocks
==31741==    still reachable: 8 bytes in 1 blocks
==31741==         suppressed: 0 bytes in 0 blocks
==31741== Rerun with --leak-check=full to see details of leaked memory
==31741== 
==31741== For counts of detected and suppressed errors, rerun with: -v
==31741== Use --track-origins=yes to see where uninitialised values come from
==31741== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --keysize=8 --overwrite=1 --reopen=1    
==31746== Memcheck, a memory error detector
==31746== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31746== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31746== Command: ./test ../../testfiles/1/220.tst --keysize=8 --overwrite=1 --reopen=1
==31746== 
==31746== Thread 3:
==31746== Conditional jump or move depends on uninitialised value(s)
==31746==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31746==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31746==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31746==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31746==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31746==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31746==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31746== 
==31746== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31746==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31746==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==  Address 0xaeb8de2 is 130 bytes inside a block of size 4,184 alloc'd
==31746==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31746==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31746==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31746== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.778000
	perf-erase 			0.417000
	perf-find  			0.000000
	perf-insert			0.883000
	perf-misc  			0.559000
	perf-total		8.637000
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.818000
	perf-erase 			0.202000
	perf-find  			0.000000
	perf-insert			0.564000
	perf-misc  			0.538000
	perf-total		5.122000
==31746== 
==31746== HEAP SUMMARY:
==31746==     in use at exit: 8 bytes in 1 blocks
==31746==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31746== 
==31746== LEAK SUMMARY:
==31746==    definitely lost: 0 bytes in 0 blocks
==31746==    indirectly lost: 0 bytes in 0 blocks
==31746==      possibly lost: 0 bytes in 0 blocks
==31746==    still reachable: 8 bytes in 1 blocks
==31746==         suppressed: 0 bytes in 0 blocks
==31746== Rerun with --leak-check=full to see details of leaked memory
==31746== 
==31746== For counts of detected and suppressed errors, rerun with: -v
==31746== Use --track-origins=yes to see where uninitialised values come from
==31746== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --keysize=8 --overwrite=1 --reopen=1    
==31751== Memcheck, a memory error detector
==31751== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31751== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31751== Command: ./test ../../testfiles/1/ext_020.tst --keysize=8 --overwrite=1 --reopen=1
==31751== 
==31751== Thread 3:
==31751== Conditional jump or move depends on uninitialised value(s)
==31751==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31751==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31751==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31751==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31751==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31751==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31751==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31751== 
==31751== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31751==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31751==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31751==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31751==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31751==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31751==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31751==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31751==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31751== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.047000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.119000
	perf-misc  			0.560000
	perf-total		0.726000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.025000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.116000
	perf-misc  			0.589000
	perf-total		0.730000
==31751== 
==31751== HEAP SUMMARY:
==31751==     in use at exit: 8 bytes in 1 blocks
==31751==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31751== 
==31751== LEAK SUMMARY:
==31751==    definitely lost: 0 bytes in 0 blocks
==31751==    indirectly lost: 0 bytes in 0 blocks
==31751==      possibly lost: 0 bytes in 0 blocks
==31751==    still reachable: 8 bytes in 1 blocks
==31751==         suppressed: 0 bytes in 0 blocks
==31751== Rerun with --leak-check=full to see details of leaked memory
==31751== 
==31751== For counts of detected and suppressed errors, rerun with: -v
==31751== Use --track-origins=yes to see where uninitialised values come from
==31751== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --keysize=8 --overwrite=1 --reopen=1    
==31756== Memcheck, a memory error detector
==31756== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31756== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31756== Command: ./test ../../testfiles/2/ext_060.tst --keysize=8 --overwrite=1 --reopen=1
==31756== 
==31756== Thread 3:
==31756== Conditional jump or move depends on uninitialised value(s)
==31756==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31756==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31756==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31756==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31756==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31756==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31756==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31756== 
==31756== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31756==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31756==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31756==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31756==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31756==  Address 0xb27f2d2 is 418 bytes inside a block of size 4,184 alloc'd
==31756==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31756==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31756==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31756== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.538000
	perf-erase 			0.615000
	perf-find  			1.049000
	perf-insert			1.912000
	perf-misc  			0.534000
	perf-total		46.648001
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			32.018999
	perf-erase 			0.357000
	perf-find  			0.742000
	perf-insert			1.236000
	perf-misc  			0.448000
	perf-total		34.802000
==31756== 
==31756== HEAP SUMMARY:
==31756==     in use at exit: 8 bytes in 1 blocks
==31756==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31756== 
==31756== LEAK SUMMARY:
==31756==    definitely lost: 0 bytes in 0 blocks
==31756==    indirectly lost: 0 bytes in 0 blocks
==31756==      possibly lost: 0 bytes in 0 blocks
==31756==    still reachable: 8 bytes in 1 blocks
==31756==         suppressed: 0 bytes in 0 blocks
==31756== Rerun with --leak-check=full to see details of leaked memory
==31756== 
==31756== For counts of detected and suppressed errors, rerun with: -v
==31756== Use --track-origins=yes to see where uninitialised values come from
==31756== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --keysize=8 --overwrite=1 --reopen=1    
==31761== Memcheck, a memory error detector
==31761== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31761== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31761== Command: ./test ../../testfiles/2/blb-001.tst --keysize=8 --overwrite=1 --reopen=1
==31761== 
==31761== Thread 3:
==31761== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31761==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31761==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31761==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31761==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31761==  Address 0xac41d74 is 3,588 bytes inside a block of size 4,184 alloc'd
==31761==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31761==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31761== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.703000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			5.576000
	perf-misc  			1.161000
	perf-total		7.440000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.158000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.132000
	perf-misc  			1.260000
	perf-total		4.550000
==31761== 
==31761== HEAP SUMMARY:
==31761==     in use at exit: 8 bytes in 1 blocks
==31761==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31761== 
==31761== LEAK SUMMARY:
==31761==    definitely lost: 0 bytes in 0 blocks
==31761==    indirectly lost: 0 bytes in 0 blocks
==31761==      possibly lost: 0 bytes in 0 blocks
==31761==    still reachable: 8 bytes in 1 blocks
==31761==         suppressed: 0 bytes in 0 blocks
==31761== Rerun with --leak-check=full to see details of leaked memory
==31761== 
==31761== For counts of detected and suppressed errors, rerun with: -v
==31761== Use --track-origins=yes to see where uninitialised values come from
==31761== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --keysize=12 --overwrite=1 --reopen=1    
==31767== Memcheck, a memory error detector
==31767== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31767== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31767== Command: ./test ../../testfiles/1/45.tst --keysize=12 --overwrite=1 --reopen=1
==31767== 
==31767== Thread 3:
==31767== Conditional jump or move depends on uninitialised value(s)
==31767==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31767==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31767==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31767==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31767==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31767==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31767==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31767== 
==31767== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31767==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31767==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31767==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31767==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31767==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31767==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31767==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31767==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31767==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31767==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31767== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.675000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.982000
	perf-misc  			1.438000
	perf-total		13.095000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.883000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.859000
	perf-misc  			1.391000
	perf-total		9.133000
==31767== 
==31767== HEAP SUMMARY:
==31767==     in use at exit: 8 bytes in 1 blocks
==31767==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31767== 
==31767== LEAK SUMMARY:
==31767==    definitely lost: 0 bytes in 0 blocks
==31767==    indirectly lost: 0 bytes in 0 blocks
==31767==      possibly lost: 0 bytes in 0 blocks
==31767==    still reachable: 8 bytes in 1 blocks
==31767==         suppressed: 0 bytes in 0 blocks
==31767== Rerun with --leak-check=full to see details of leaked memory
==31767== 
==31767== For counts of detected and suppressed errors, rerun with: -v
==31767== Use --track-origins=yes to see where uninitialised values come from
==31767== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --keysize=12 --overwrite=1 --reopen=1    
==31772== Memcheck, a memory error detector
==31772== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31772== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31772== Command: ./test ../../testfiles/1/220.tst --keysize=12 --overwrite=1 --reopen=1
==31772== 
==31772== Thread 3:
==31772== Conditional jump or move depends on uninitialised value(s)
==31772==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31772==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31772==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31772==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31772==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31772==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31772==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31772== 
==31772== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31772==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31772==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==  Address 0xaeb8aa2 is 130 bytes inside a block of size 4,184 alloc'd
==31772==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31772==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31772==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31772== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.751000
	perf-erase 			0.387000
	perf-find  			0.000000
	perf-insert			0.885000
	perf-misc  			0.717000
	perf-total		8.740000
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.711000
	perf-erase 			0.190000
	perf-find  			0.000000
	perf-insert			0.507000
	perf-misc  			0.723000
	perf-total		5.131000
==31772== 
==31772== HEAP SUMMARY:
==31772==     in use at exit: 8 bytes in 1 blocks
==31772==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31772== 
==31772== LEAK SUMMARY:
==31772==    definitely lost: 0 bytes in 0 blocks
==31772==    indirectly lost: 0 bytes in 0 blocks
==31772==      possibly lost: 0 bytes in 0 blocks
==31772==    still reachable: 8 bytes in 1 blocks
==31772==         suppressed: 0 bytes in 0 blocks
==31772== Rerun with --leak-check=full to see details of leaked memory
==31772== 
==31772== For counts of detected and suppressed errors, rerun with: -v
==31772== Use --track-origins=yes to see where uninitialised values come from
==31772== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --keysize=12 --overwrite=1 --reopen=1    
==31777== Memcheck, a memory error detector
==31777== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31777== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31777== Command: ./test ../../testfiles/1/ext_020.tst --keysize=12 --overwrite=1 --reopen=1
==31777== 
==31777== Thread 3:
==31777== Conditional jump or move depends on uninitialised value(s)
==31777==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31777==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31777==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31777==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31777==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31777==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31777==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31777== 
==31777== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31777==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31777==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31777==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31777==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31777==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31777==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31777==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31777==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31777== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.048000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.108000
	perf-misc  			0.572000
	perf-total		0.728000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.026000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.107000
	perf-misc  			0.517000
	perf-total		0.650000
==31777== 
==31777== HEAP SUMMARY:
==31777==     in use at exit: 8 bytes in 1 blocks
==31777==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31777== 
==31777== LEAK SUMMARY:
==31777==    definitely lost: 0 bytes in 0 blocks
==31777==    indirectly lost: 0 bytes in 0 blocks
==31777==      possibly lost: 0 bytes in 0 blocks
==31777==    still reachable: 8 bytes in 1 blocks
==31777==         suppressed: 0 bytes in 0 blocks
==31777== Rerun with --leak-check=full to see details of leaked memory
==31777== 
==31777== For counts of detected and suppressed errors, rerun with: -v
==31777== Use --track-origins=yes to see where uninitialised values come from
==31777== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --keysize=12 --overwrite=1 --reopen=1    
==31782== Memcheck, a memory error detector
==31782== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31782== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31782== Command: ./test ../../testfiles/2/ext_060.tst --keysize=12 --overwrite=1 --reopen=1
==31782== 
==31782== Thread 3:
==31782== Conditional jump or move depends on uninitialised value(s)
==31782==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31782==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31782==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31782==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31782==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31782==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31782==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31782== 
==31782== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31782==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31782==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31782==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31782==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31782==  Address 0xb27f2d2 is 418 bytes inside a block of size 4,184 alloc'd
==31782==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31782==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31782==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31782== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.390999
	perf-erase 			0.598000
	perf-find  			1.101000
	perf-insert			1.779000
	perf-misc  			0.520000
	perf-total		46.388998
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			32.109001
	perf-erase 			0.378000
	perf-find  			0.740000
	perf-insert			1.231000
	perf-misc  			0.624000
	perf-total		35.081998
==31782== 
==31782== HEAP SUMMARY:
==31782==     in use at exit: 8 bytes in 1 blocks
==31782==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31782== 
==31782== LEAK SUMMARY:
==31782==    definitely lost: 0 bytes in 0 blocks
==31782==    indirectly lost: 0 bytes in 0 blocks
==31782==      possibly lost: 0 bytes in 0 blocks
==31782==    still reachable: 8 bytes in 1 blocks
==31782==         suppressed: 0 bytes in 0 blocks
==31782== Rerun with --leak-check=full to see details of leaked memory
==31782== 
==31782== For counts of detected and suppressed errors, rerun with: -v
==31782== Use --track-origins=yes to see where uninitialised values come from
==31782== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --keysize=12 --overwrite=1 --reopen=1    
==31790== Memcheck, a memory error detector
==31790== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31790== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31790== Command: ./test ../../testfiles/2/blb-001.tst --keysize=12 --overwrite=1 --reopen=1
==31790== 
==31790== Thread 3:
==31790== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31790==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31790==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31790==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31790==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31790==  Address 0xac45bd4 is 3,588 bytes inside a block of size 4,184 alloc'd
==31790==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31790==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31790== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.697000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.211000
	perf-misc  			1.164000
	perf-total		6.072000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.151000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.040000
	perf-misc  			1.292000
	perf-total		5.483000
==31790== 
==31790== HEAP SUMMARY:
==31790==     in use at exit: 8 bytes in 1 blocks
==31790==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31790== 
==31790== LEAK SUMMARY:
==31790==    definitely lost: 0 bytes in 0 blocks
==31790==    indirectly lost: 0 bytes in 0 blocks
==31790==      possibly lost: 0 bytes in 0 blocks
==31790==    still reachable: 8 bytes in 1 blocks
==31790==         suppressed: 0 bytes in 0 blocks
==31790== Rerun with --leak-check=full to see details of leaked memory
==31790== 
==31790== For counts of detected and suppressed errors, rerun with: -v
==31790== Use --track-origins=yes to see where uninitialised values come from
==31790== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --keysize=33 --overwrite=1 --reopen=1    
==31796== Memcheck, a memory error detector
==31796== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31796== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31796== Command: ./test ../../testfiles/1/45.tst --keysize=33 --overwrite=1 --reopen=1
==31796== 
==31796== Thread 3:
==31796== Conditional jump or move depends on uninitialised value(s)
==31796==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31796==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31796==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31796==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31796==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31796==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31796==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31796== 
==31796== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31796==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31796==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31796==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31796==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31796==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31796==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31796==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31796==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31796==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31796==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31796== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.004000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.005000
	perf-misc  			1.364000
	perf-total		13.373000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.844000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.824000
	perf-misc  			1.496000
	perf-total		9.164000
==31796== 
==31796== HEAP SUMMARY:
==31796==     in use at exit: 8 bytes in 1 blocks
==31796==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31796== 
==31796== LEAK SUMMARY:
==31796==    definitely lost: 0 bytes in 0 blocks
==31796==    indirectly lost: 0 bytes in 0 blocks
==31796==      possibly lost: 0 bytes in 0 blocks
==31796==    still reachable: 8 bytes in 1 blocks
==31796==         suppressed: 0 bytes in 0 blocks
==31796== Rerun with --leak-check=full to see details of leaked memory
==31796== 
==31796== For counts of detected and suppressed errors, rerun with: -v
==31796== Use --track-origins=yes to see where uninitialised values come from
==31796== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --keysize=33 --overwrite=1 --reopen=1    
==31801== Memcheck, a memory error detector
==31801== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31801== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31801== Command: ./test ../../testfiles/1/220.tst --keysize=33 --overwrite=1 --reopen=1
==31801== 
==31801== Thread 3:
==31801== Conditional jump or move depends on uninitialised value(s)
==31801==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31801==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31801==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31801==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31801==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31801==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31801==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31801== 
==31801== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31801==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31801==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==  Address 0xaeb8aa2 is 130 bytes inside a block of size 4,184 alloc'd
==31801==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31801==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31801==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31801== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.644000
	perf-erase 			0.375000
	perf-find  			0.000000
	perf-insert			0.927000
	perf-misc  			0.556000
	perf-total		8.502000
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.932000
	perf-erase 			0.200000
	perf-find  			0.000000
	perf-insert			0.581000
	perf-misc  			0.635000
	perf-total		5.348000
==31801== 
==31801== HEAP SUMMARY:
==31801==     in use at exit: 8 bytes in 1 blocks
==31801==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31801== 
==31801== LEAK SUMMARY:
==31801==    definitely lost: 0 bytes in 0 blocks
==31801==    indirectly lost: 0 bytes in 0 blocks
==31801==      possibly lost: 0 bytes in 0 blocks
==31801==    still reachable: 8 bytes in 1 blocks
==31801==         suppressed: 0 bytes in 0 blocks
==31801== Rerun with --leak-check=full to see details of leaked memory
==31801== 
==31801== For counts of detected and suppressed errors, rerun with: -v
==31801== Use --track-origins=yes to see where uninitialised values come from
==31801== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --keysize=33 --overwrite=1 --reopen=1    
==31806== Memcheck, a memory error detector
==31806== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31806== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31806== Command: ./test ../../testfiles/1/ext_020.tst --keysize=33 --overwrite=1 --reopen=1
==31806== 
==31806== Thread 3:
==31806== Conditional jump or move depends on uninitialised value(s)
==31806==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31806==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31806==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31806==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31806==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31806==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31806==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31806== 
==31806== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31806==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31806==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31806==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31806==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31806==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31806==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31806==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31806==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31806== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.049000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.117000
	perf-misc  			0.586000
	perf-total		0.752000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.028000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.111000
	perf-misc  			0.525000
	perf-total		0.664000
==31806== 
==31806== HEAP SUMMARY:
==31806==     in use at exit: 8 bytes in 1 blocks
==31806==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31806== 
==31806== LEAK SUMMARY:
==31806==    definitely lost: 0 bytes in 0 blocks
==31806==    indirectly lost: 0 bytes in 0 blocks
==31806==      possibly lost: 0 bytes in 0 blocks
==31806==    still reachable: 8 bytes in 1 blocks
==31806==         suppressed: 0 bytes in 0 blocks
==31806== Rerun with --leak-check=full to see details of leaked memory
==31806== 
==31806== For counts of detected and suppressed errors, rerun with: -v
==31806== Use --track-origins=yes to see where uninitialised values come from
==31806== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --keysize=33 --overwrite=1 --reopen=1    
==31811== Memcheck, a memory error detector
==31811== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31811== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31811== Command: ./test ../../testfiles/2/ext_060.tst --keysize=33 --overwrite=1 --reopen=1
==31811== 
==31811== Thread 3:
==31811== Conditional jump or move depends on uninitialised value(s)
==31811==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31811==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31811==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31811==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31811==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31811==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31811==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31811== 
==31811== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31811==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31811==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31811==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31811==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31811==  Address 0xb27f2d2 is 418 bytes inside a block of size 4,184 alloc'd
==31811==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31811==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31811==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31811== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.685002
	perf-erase 			0.630000
	perf-find  			1.090000
	perf-insert			1.867000
	perf-misc  			0.622000
	perf-total		46.893998
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			31.865999
	perf-erase 			0.403000
	perf-find  			0.740000
	perf-insert			1.253000
	perf-misc  			0.650000
	perf-total		34.912002
==31811== 
==31811== HEAP SUMMARY:
==31811==     in use at exit: 8 bytes in 1 blocks
==31811==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31811== 
==31811== LEAK SUMMARY:
==31811==    definitely lost: 0 bytes in 0 blocks
==31811==    indirectly lost: 0 bytes in 0 blocks
==31811==      possibly lost: 0 bytes in 0 blocks
==31811==    still reachable: 8 bytes in 1 blocks
==31811==         suppressed: 0 bytes in 0 blocks
==31811== Rerun with --leak-check=full to see details of leaked memory
==31811== 
==31811== For counts of detected and suppressed errors, rerun with: -v
==31811== Use --track-origins=yes to see where uninitialised values come from
==31811== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --keysize=33 --overwrite=1 --reopen=1    
==31816== Memcheck, a memory error detector
==31816== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31816== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31816== Command: ./test ../../testfiles/2/blb-001.tst --keysize=33 --overwrite=1 --reopen=1
==31816== 
==31816== Thread 3:
==31816== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31816==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31816==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31816==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31816==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31816==  Address 0xac41d74 is 3,588 bytes inside a block of size 4,184 alloc'd
==31816==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31816==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31816== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.703000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.882000
	perf-misc  			1.191000
	perf-total		6.776000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.155000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.368000
	perf-misc  			1.199000
	perf-total		4.722000
==31816== 
==31816== HEAP SUMMARY:
==31816==     in use at exit: 8 bytes in 1 blocks
==31816==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31816== 
==31816== LEAK SUMMARY:
==31816==    definitely lost: 0 bytes in 0 blocks
==31816==    indirectly lost: 0 bytes in 0 blocks
==31816==      possibly lost: 0 bytes in 0 blocks
==31816==    still reachable: 8 bytes in 1 blocks
==31816==         suppressed: 0 bytes in 0 blocks
==31816== Rerun with --leak-check=full to see details of leaked memory
==31816== 
==31816== For counts of detected and suppressed errors, rerun with: -v
==31816== Use --track-origins=yes to see where uninitialised values come from
==31816== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --keysize=680 --overwrite=1 --reopen=1    
==31822== Memcheck, a memory error detector
==31822== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31822== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31822== Command: ./test ../../testfiles/1/45.tst --keysize=680 --overwrite=1 --reopen=1
==31822== 
==31822== Thread 3:
==31822== Conditional jump or move depends on uninitialised value(s)
==31822==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31822==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31822==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31822==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31822==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31822==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31822==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31822== 
==31822== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31822==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31822==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31822==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31822==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31822==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31822==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31822==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31822==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31822==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31822==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31822== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.929000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.019000
	perf-misc  			1.264000
	perf-total		13.212000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.653000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.887000
	perf-misc  			1.319000
	perf-total		8.859000
==31822== 
==31822== HEAP SUMMARY:
==31822==     in use at exit: 8 bytes in 1 blocks
==31822==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31822== 
==31822== LEAK SUMMARY:
==31822==    definitely lost: 0 bytes in 0 blocks
==31822==    indirectly lost: 0 bytes in 0 blocks
==31822==      possibly lost: 0 bytes in 0 blocks
==31822==    still reachable: 8 bytes in 1 blocks
==31822==         suppressed: 0 bytes in 0 blocks
==31822== Rerun with --leak-check=full to see details of leaked memory
==31822== 
==31822== For counts of detected and suppressed errors, rerun with: -v
==31822== Use --track-origins=yes to see where uninitialised values come from
==31822== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --keysize=680 --overwrite=1 --reopen=1    
==31827== Memcheck, a memory error detector
==31827== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31827== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31827== Command: ./test ../../testfiles/1/220.tst --keysize=680 --overwrite=1 --reopen=1
==31827== 
==31827== Thread 3:
==31827== Conditional jump or move depends on uninitialised value(s)
==31827==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31827==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31827==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31827==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31827==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31827==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31827==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31827== 
==31827== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31827==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31827==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==  Address 0xaeb8aa2 is 130 bytes inside a block of size 4,184 alloc'd
==31827==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31827==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31827==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31827== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.730000
	perf-erase 			0.414000
	perf-find  			0.000000
	perf-insert			0.897000
	perf-misc  			0.639000
	perf-total		8.679999
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.794000
	perf-erase 			0.230000
	perf-find  			0.000000
	perf-insert			0.580000
	perf-misc  			0.682000
	perf-total		5.286000
==31827== 
==31827== HEAP SUMMARY:
==31827==     in use at exit: 8 bytes in 1 blocks
==31827==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31827== 
==31827== LEAK SUMMARY:
==31827==    definitely lost: 0 bytes in 0 blocks
==31827==    indirectly lost: 0 bytes in 0 blocks
==31827==      possibly lost: 0 bytes in 0 blocks
==31827==    still reachable: 8 bytes in 1 blocks
==31827==         suppressed: 0 bytes in 0 blocks
==31827== Rerun with --leak-check=full to see details of leaked memory
==31827== 
==31827== For counts of detected and suppressed errors, rerun with: -v
==31827== Use --track-origins=yes to see where uninitialised values come from
==31827== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --keysize=680 --overwrite=1 --reopen=1    
==31832== Memcheck, a memory error detector
==31832== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31832== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31832== Command: ./test ../../testfiles/1/ext_020.tst --keysize=680 --overwrite=1 --reopen=1
==31832== 
==31832== Thread 3:
==31832== Conditional jump or move depends on uninitialised value(s)
==31832==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31832==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31832==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31832==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31832==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31832==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31832==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31832== 
==31832== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31832==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31832==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31832==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31832==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31832==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31832==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31832==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31832==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31832== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.045000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.109000
	perf-misc  			0.518000
	perf-total		0.672000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.026000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.107000
	perf-misc  			0.529000
	perf-total		0.662000
==31832== 
==31832== HEAP SUMMARY:
==31832==     in use at exit: 8 bytes in 1 blocks
==31832==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31832== 
==31832== LEAK SUMMARY:
==31832==    definitely lost: 0 bytes in 0 blocks
==31832==    indirectly lost: 0 bytes in 0 blocks
==31832==      possibly lost: 0 bytes in 0 blocks
==31832==    still reachable: 8 bytes in 1 blocks
==31832==         suppressed: 0 bytes in 0 blocks
==31832== Rerun with --leak-check=full to see details of leaked memory
==31832== 
==31832== For counts of detected and suppressed errors, rerun with: -v
==31832== Use --track-origins=yes to see where uninitialised values come from
==31832== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --keysize=680 --overwrite=1 --reopen=1    
==31837== Memcheck, a memory error detector
==31837== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31837== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31837== Command: ./test ../../testfiles/2/ext_060.tst --keysize=680 --overwrite=1 --reopen=1
==31837== 
==31837== Thread 3:
==31837== Conditional jump or move depends on uninitialised value(s)
==31837==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31837==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31837==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31837==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31837==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31837==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31837==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31837== 
==31837== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31837==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31837==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31837==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31837==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31837==  Address 0xb27f632 is 418 bytes inside a block of size 4,184 alloc'd
==31837==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31837==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31837==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31837== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			43.167998
	perf-erase 			0.622000
	perf-find  			1.148000
	perf-insert			1.858000
	perf-misc  			0.565000
	perf-total		47.360999
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			32.386001
	perf-erase 			0.407000
	perf-find  			0.743000
	perf-insert			1.287000
	perf-misc  			0.615000
	perf-total		35.437998
==31837== 
==31837== HEAP SUMMARY:
==31837==     in use at exit: 8 bytes in 1 blocks
==31837==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31837== 
==31837== LEAK SUMMARY:
==31837==    definitely lost: 0 bytes in 0 blocks
==31837==    indirectly lost: 0 bytes in 0 blocks
==31837==      possibly lost: 0 bytes in 0 blocks
==31837==    still reachable: 8 bytes in 1 blocks
==31837==         suppressed: 0 bytes in 0 blocks
==31837== Rerun with --leak-check=full to see details of leaked memory
==31837== 
==31837== For counts of detected and suppressed errors, rerun with: -v
==31837== Use --track-origins=yes to see where uninitialised values come from
==31837== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --keysize=680 --overwrite=1 --reopen=1    
==31848== Memcheck, a memory error detector
==31848== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31848== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31848== Command: ./test ../../testfiles/2/blb-001.tst --keysize=680 --overwrite=1 --reopen=1
==31848== 
==31848== Thread 3:
==31848== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31848==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31848==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31848==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31848==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31848==  Address 0xac45814 is 3,588 bytes inside a block of size 4,184 alloc'd
==31848==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31848==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31848== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.810000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.681000
	perf-misc  			0.837000
	perf-total		6.328000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.161000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.503000
	perf-misc  			0.897000
	perf-total		5.561000
==31848== 
==31848== HEAP SUMMARY:
==31848==     in use at exit: 8 bytes in 1 blocks
==31848==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31848== 
==31848== LEAK SUMMARY:
==31848==    definitely lost: 0 bytes in 0 blocks
==31848==    indirectly lost: 0 bytes in 0 blocks
==31848==      possibly lost: 0 bytes in 0 blocks
==31848==    still reachable: 8 bytes in 1 blocks
==31848==         suppressed: 0 bytes in 0 blocks
==31848== Rerun with --leak-check=full to see details of leaked memory
==31848== 
==31848== For counts of detected and suppressed errors, rerun with: -v
==31848== Use --track-origins=yes to see where uninitialised values come from
==31848== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --pagesize=1024 --overwrite=1 --reopen=1    
==31854== Memcheck, a memory error detector
==31854== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31854== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31854== Command: ./test ../../testfiles/1/45.tst --pagesize=1024 --overwrite=1 --reopen=1
==31854== 
==31854== Thread 3:
==31854== Conditional jump or move depends on uninitialised value(s)
==31854==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31854==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31854==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31854==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31854==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31854==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31854==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31854== 
==31854== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31854==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31854==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31854==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31854==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31854==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31854==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31854==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31854==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31854==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31854==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31854== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.981000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.997000
	perf-misc  			1.308000
	perf-total		13.286000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.784000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.845000
	perf-misc  			1.191000
	perf-total		8.820000
==31854== 
==31854== HEAP SUMMARY:
==31854==     in use at exit: 8 bytes in 1 blocks
==31854==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31854== 
==31854== LEAK SUMMARY:
==31854==    definitely lost: 0 bytes in 0 blocks
==31854==    indirectly lost: 0 bytes in 0 blocks
==31854==      possibly lost: 0 bytes in 0 blocks
==31854==    still reachable: 8 bytes in 1 blocks
==31854==         suppressed: 0 bytes in 0 blocks
==31854== Rerun with --leak-check=full to see details of leaked memory
==31854== 
==31854== For counts of detected and suppressed errors, rerun with: -v
==31854== Use --track-origins=yes to see where uninitialised values come from
==31854== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --pagesize=1024 --overwrite=1 --reopen=1    
==31859== Memcheck, a memory error detector
==31859== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31859== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31859== Command: ./test ../../testfiles/1/220.tst --pagesize=1024 --overwrite=1 --reopen=1
==31859== 
==31859== Thread 3:
==31859== Conditional jump or move depends on uninitialised value(s)
==31859==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31859==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31859==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31859==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31859==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31859==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31859==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31859== 
==31859== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31859==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31859==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==  Address 0xaeb8aa2 is 130 bytes inside a block of size 4,184 alloc'd
==31859==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31859==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31859==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31859== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.852000
	perf-erase 			0.430000
	perf-find  			0.000000
	perf-insert			0.927000
	perf-misc  			0.612000
	perf-total		8.821000
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.756000
	perf-erase 			0.205000
	perf-find  			0.000000
	perf-insert			0.579000
	perf-misc  			0.657000
	perf-total		5.197000
==31859== 
==31859== HEAP SUMMARY:
==31859==     in use at exit: 8 bytes in 1 blocks
==31859==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31859== 
==31859== LEAK SUMMARY:
==31859==    definitely lost: 0 bytes in 0 blocks
==31859==    indirectly lost: 0 bytes in 0 blocks
==31859==      possibly lost: 0 bytes in 0 blocks
==31859==    still reachable: 8 bytes in 1 blocks
==31859==         suppressed: 0 bytes in 0 blocks
==31859== Rerun with --leak-check=full to see details of leaked memory
==31859== 
==31859== For counts of detected and suppressed errors, rerun with: -v
==31859== Use --track-origins=yes to see where uninitialised values come from
==31859== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --pagesize=1024 --overwrite=1 --reopen=1    
==31864== Memcheck, a memory error detector
==31864== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31864== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31864== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=1024 --overwrite=1 --reopen=1
==31864== 
==31864== Thread 3:
==31864== Conditional jump or move depends on uninitialised value(s)
==31864==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31864==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31864==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31864==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31864==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31864==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31864==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31864== 
==31864== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31864==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31864==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31864==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31864==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31864==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31864==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31864==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31864==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31864== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.048000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.110000
	perf-misc  			0.590000
	perf-total		0.748000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.036000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.106000
	perf-misc  			0.522000
	perf-total		0.664000
==31864== 
==31864== HEAP SUMMARY:
==31864==     in use at exit: 8 bytes in 1 blocks
==31864==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31864== 
==31864== LEAK SUMMARY:
==31864==    definitely lost: 0 bytes in 0 blocks
==31864==    indirectly lost: 0 bytes in 0 blocks
==31864==      possibly lost: 0 bytes in 0 blocks
==31864==    still reachable: 8 bytes in 1 blocks
==31864==         suppressed: 0 bytes in 0 blocks
==31864== Rerun with --leak-check=full to see details of leaked memory
==31864== 
==31864== For counts of detected and suppressed errors, rerun with: -v
==31864== Use --track-origins=yes to see where uninitialised values come from
==31864== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --pagesize=1024 --overwrite=1 --reopen=1    
==31869== Memcheck, a memory error detector
==31869== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31869== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31869== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=1024 --overwrite=1 --reopen=1
==31869== 
==31869== Thread 3:
==31869== Conditional jump or move depends on uninitialised value(s)
==31869==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31869==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31869==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31869==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31869==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31869==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31869==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31869== 
==31869== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31869==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31869==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31869==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31869==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31869==  Address 0xb27f2d2 is 418 bytes inside a block of size 4,184 alloc'd
==31869==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31869==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31869==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31869== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.284999
	perf-erase 			0.559000
	perf-find  			1.111000
	perf-insert			1.807000
	perf-misc  			0.572000
	perf-total		46.334001
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			31.538000
	perf-erase 			0.364000
	perf-find  			0.766000
	perf-insert			1.284000
	perf-misc  			0.615000
	perf-total		34.567000
==31869== 
==31869== HEAP SUMMARY:
==31869==     in use at exit: 8 bytes in 1 blocks
==31869==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31869== 
==31869== LEAK SUMMARY:
==31869==    definitely lost: 0 bytes in 0 blocks
==31869==    indirectly lost: 0 bytes in 0 blocks
==31869==      possibly lost: 0 bytes in 0 blocks
==31869==    still reachable: 8 bytes in 1 blocks
==31869==         suppressed: 0 bytes in 0 blocks
==31869== Rerun with --leak-check=full to see details of leaked memory
==31869== 
==31869== For counts of detected and suppressed errors, rerun with: -v
==31869== Use --track-origins=yes to see where uninitialised values come from
==31869== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --pagesize=1024 --overwrite=1 --reopen=1    
==31874== Memcheck, a memory error detector
==31874== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31874== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31874== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=1024 --overwrite=1 --reopen=1
==31874== 
==31874== Thread 3:
==31874== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31874==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31874==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31874==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31874==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31874==  Address 0xac41d74 is 3,588 bytes inside a block of size 4,184 alloc'd
==31874==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31874==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31874== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.719000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			5.710000
	perf-misc  			1.100000
	perf-total		7.529000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.154000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.202000
	perf-misc  			1.152000
	perf-total		4.508000
==31874== 
==31874== HEAP SUMMARY:
==31874==     in use at exit: 8 bytes in 1 blocks
==31874==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31874== 
==31874== LEAK SUMMARY:
==31874==    definitely lost: 0 bytes in 0 blocks
==31874==    indirectly lost: 0 bytes in 0 blocks
==31874==      possibly lost: 0 bytes in 0 blocks
==31874==    still reachable: 8 bytes in 1 blocks
==31874==         suppressed: 0 bytes in 0 blocks
==31874== Rerun with --leak-check=full to see details of leaked memory
==31874== 
==31874== For counts of detected and suppressed errors, rerun with: -v
==31874== Use --track-origins=yes to see where uninitialised values come from
==31874== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --pagesize=8192 --overwrite=1 --reopen=1    
==31880== Memcheck, a memory error detector
==31880== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31880== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31880== Command: ./test ../../testfiles/1/45.tst --pagesize=8192 --overwrite=1 --reopen=1
==31880== 
==31880== Thread 3:
==31880== Conditional jump or move depends on uninitialised value(s)
==31880==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31880==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31880==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31880==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31880==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31880==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31880==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31880== 
==31880== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31880==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31880==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31880==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31880==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31880==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31880==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31880==  Address 0xad2fc76 is 214 bytes inside a block of size 4,184 alloc'd
==31880==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31880==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31880==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31880== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.960000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.033000
	perf-misc  			1.439000
	perf-total		13.432001
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.713000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.810000
	perf-misc  			1.309000
	perf-total		8.832000
==31880== 
==31880== HEAP SUMMARY:
==31880==     in use at exit: 8 bytes in 1 blocks
==31880==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31880== 
==31880== LEAK SUMMARY:
==31880==    definitely lost: 0 bytes in 0 blocks
==31880==    indirectly lost: 0 bytes in 0 blocks
==31880==      possibly lost: 0 bytes in 0 blocks
==31880==    still reachable: 8 bytes in 1 blocks
==31880==         suppressed: 0 bytes in 0 blocks
==31880== Rerun with --leak-check=full to see details of leaked memory
==31880== 
==31880== For counts of detected and suppressed errors, rerun with: -v
==31880== Use --track-origins=yes to see where uninitialised values come from
==31880== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --pagesize=8192 --overwrite=1 --reopen=1    
==31885== Memcheck, a memory error detector
==31885== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31885== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31885== Command: ./test ../../testfiles/1/220.tst --pagesize=8192 --overwrite=1 --reopen=1
==31885== 
==31885== Thread 3:
==31885== Conditional jump or move depends on uninitialised value(s)
==31885==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31885==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31885==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31885==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31885==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31885==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31885==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31885== 
==31885== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31885==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31885==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==  Address 0xaeb8aa2 is 130 bytes inside a block of size 4,184 alloc'd
==31885==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31885==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31885==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31885== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.770000
	perf-erase 			0.402000
	perf-find  			0.000000
	perf-insert			0.901000
	perf-misc  			0.529000
	perf-total		8.602000
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.713000
	perf-erase 			0.201000
	perf-find  			0.000000
	perf-insert			0.582000
	perf-misc  			0.616000
	perf-total		5.112000
==31885== 
==31885== HEAP SUMMARY:
==31885==     in use at exit: 8 bytes in 1 blocks
==31885==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31885== 
==31885== LEAK SUMMARY:
==31885==    definitely lost: 0 bytes in 0 blocks
==31885==    indirectly lost: 0 bytes in 0 blocks
==31885==      possibly lost: 0 bytes in 0 blocks
==31885==    still reachable: 8 bytes in 1 blocks
==31885==         suppressed: 0 bytes in 0 blocks
==31885== Rerun with --leak-check=full to see details of leaked memory
==31885== 
==31885== For counts of detected and suppressed errors, rerun with: -v
==31885== Use --track-origins=yes to see where uninitialised values come from
==31885== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --pagesize=8192 --overwrite=1 --reopen=1    
==31890== Memcheck, a memory error detector
==31890== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31890== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31890== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=8192 --overwrite=1 --reopen=1
==31890== 
==31890== Thread 3:
==31890== Conditional jump or move depends on uninitialised value(s)
==31890==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31890==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31890==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31890==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31890==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31890==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31890==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31890== 
==31890== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31890==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31890==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31890==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31890==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31890==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31890==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31890==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31890==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31890== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.048000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.109000
	perf-misc  			0.556000
	perf-total		0.713000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.029000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.108000
	perf-misc  			0.659000
	perf-total		0.796000
==31890== 
==31890== HEAP SUMMARY:
==31890==     in use at exit: 8 bytes in 1 blocks
==31890==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31890== 
==31890== LEAK SUMMARY:
==31890==    definitely lost: 0 bytes in 0 blocks
==31890==    indirectly lost: 0 bytes in 0 blocks
==31890==      possibly lost: 0 bytes in 0 blocks
==31890==    still reachable: 8 bytes in 1 blocks
==31890==         suppressed: 0 bytes in 0 blocks
==31890== Rerun with --leak-check=full to see details of leaked memory
==31890== 
==31890== For counts of detected and suppressed errors, rerun with: -v
==31890== Use --track-origins=yes to see where uninitialised values come from
==31890== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --pagesize=8192 --overwrite=1 --reopen=1    
==31895== Memcheck, a memory error detector
==31895== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31895== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31895== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=8192 --overwrite=1 --reopen=1
==31895== 
==31895== Thread 3:
==31895== Conditional jump or move depends on uninitialised value(s)
==31895==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31895==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31895==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31895==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31895==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31895==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31895==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31895== 
==31895== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31895==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31895==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31895==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31895==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31895==  Address 0xb27f632 is 418 bytes inside a block of size 4,184 alloc'd
==31895==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31895==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31895==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31895== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.192998
	perf-erase 			0.538000
	perf-find  			1.168000
	perf-insert			1.866000
	perf-misc  			0.544000
	perf-total		46.308999
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			31.910001
	perf-erase 			0.335000
	perf-find  			0.751000
	perf-insert			1.258000
	perf-misc  			0.500000
	perf-total		34.753999
==31895== 
==31895== HEAP SUMMARY:
==31895==     in use at exit: 8 bytes in 1 blocks
==31895==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31895== 
==31895== LEAK SUMMARY:
==31895==    definitely lost: 0 bytes in 0 blocks
==31895==    indirectly lost: 0 bytes in 0 blocks
==31895==      possibly lost: 0 bytes in 0 blocks
==31895==    still reachable: 8 bytes in 1 blocks
==31895==         suppressed: 0 bytes in 0 blocks
==31895== Rerun with --leak-check=full to see details of leaked memory
==31895== 
==31895== For counts of detected and suppressed errors, rerun with: -v
==31895== Use --track-origins=yes to see where uninitialised values come from
==31895== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --pagesize=8192 --overwrite=1 --reopen=1    
==31900== Memcheck, a memory error detector
==31900== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31900== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31900== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=8192 --overwrite=1 --reopen=1
==31900== 
==31900== Thread 3:
==31900== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31900==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31900==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31900==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31900==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31900==  Address 0xac41a74 is 3,588 bytes inside a block of size 4,184 alloc'd
==31900==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31900==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31900== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			3.232000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.519000
	perf-misc  			1.180000
	perf-total		7.931000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.157000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.016000
	perf-misc  			1.184000
	perf-total		2.357000
==31900== 
==31900== HEAP SUMMARY:
==31900==     in use at exit: 8 bytes in 1 blocks
==31900==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31900== 
==31900== LEAK SUMMARY:
==31900==    definitely lost: 0 bytes in 0 blocks
==31900==    indirectly lost: 0 bytes in 0 blocks
==31900==      possibly lost: 0 bytes in 0 blocks
==31900==    still reachable: 8 bytes in 1 blocks
==31900==         suppressed: 0 bytes in 0 blocks
==31900== Rerun with --leak-check=full to see details of leaked memory
==31900== 
==31900== For counts of detected and suppressed errors, rerun with: -v
==31900== Use --track-origins=yes to see where uninitialised values come from
==31900== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --pagesize=131072 --overwrite=1 --reopen=1    
==31906== Memcheck, a memory error detector
==31906== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31906== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31906== Command: ./test ../../testfiles/1/45.tst --pagesize=131072 --overwrite=1 --reopen=1
==31906== 
==31906== Thread 3:
==31906== Conditional jump or move depends on uninitialised value(s)
==31906==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31906==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31906==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31906==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31906==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31906==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31906==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31906== 
==31906== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31906==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31906==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31906==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31906==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31906==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31906==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31906==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31906==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31906==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31906==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31906== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.697000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.055000
	perf-misc  			1.294000
	perf-total		13.046000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.955000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.820000
	perf-misc  			1.242000
	perf-total		9.017000
==31906== 
==31906== HEAP SUMMARY:
==31906==     in use at exit: 8 bytes in 1 blocks
==31906==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31906== 
==31906== LEAK SUMMARY:
==31906==    definitely lost: 0 bytes in 0 blocks
==31906==    indirectly lost: 0 bytes in 0 blocks
==31906==      possibly lost: 0 bytes in 0 blocks
==31906==    still reachable: 8 bytes in 1 blocks
==31906==         suppressed: 0 bytes in 0 blocks
==31906== Rerun with --leak-check=full to see details of leaked memory
==31906== 
==31906== For counts of detected and suppressed errors, rerun with: -v
==31906== Use --track-origins=yes to see where uninitialised values come from
==31906== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --pagesize=131072 --overwrite=1 --reopen=1    
==31911== Memcheck, a memory error detector
==31911== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31911== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31911== Command: ./test ../../testfiles/1/220.tst --pagesize=131072 --overwrite=1 --reopen=1
==31911== 
==31911== Thread 3:
==31911== Conditional jump or move depends on uninitialised value(s)
==31911==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31911==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31911==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31911==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31911==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31911==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31911==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31911== 
==31911== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31911==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31911==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==  Address 0xaeb8aa2 is 130 bytes inside a block of size 4,184 alloc'd
==31911==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31911==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31911==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31911== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.745000
	perf-erase 			0.403000
	perf-find  			0.000000
	perf-insert			0.900000
	perf-misc  			0.722000
	perf-total		8.770000
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.679000
	perf-erase 			0.226000
	perf-find  			0.000000
	perf-insert			0.584000
	perf-misc  			0.725000
	perf-total		5.214000
==31911== 
==31911== HEAP SUMMARY:
==31911==     in use at exit: 8 bytes in 1 blocks
==31911==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31911== 
==31911== LEAK SUMMARY:
==31911==    definitely lost: 0 bytes in 0 blocks
==31911==    indirectly lost: 0 bytes in 0 blocks
==31911==      possibly lost: 0 bytes in 0 blocks
==31911==    still reachable: 8 bytes in 1 blocks
==31911==         suppressed: 0 bytes in 0 blocks
==31911== Rerun with --leak-check=full to see details of leaked memory
==31911== 
==31911== For counts of detected and suppressed errors, rerun with: -v
==31911== Use --track-origins=yes to see where uninitialised values come from
==31911== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --pagesize=131072 --overwrite=1 --reopen=1    
==31916== Memcheck, a memory error detector
==31916== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31916== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31916== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=131072 --overwrite=1 --reopen=1
==31916== 
==31916== Thread 3:
==31916== Conditional jump or move depends on uninitialised value(s)
==31916==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31916==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31916==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31916==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31916==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31916==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31916==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31916== 
==31916== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31916==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31916==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31916==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31916==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31916==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31916==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31916==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31916==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31916== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.049000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.108000
	perf-misc  			0.570000
	perf-total		0.727000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.027000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.111000
	perf-misc  			0.490000
	perf-total		0.628000
==31916== 
==31916== HEAP SUMMARY:
==31916==     in use at exit: 8 bytes in 1 blocks
==31916==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31916== 
==31916== LEAK SUMMARY:
==31916==    definitely lost: 0 bytes in 0 blocks
==31916==    indirectly lost: 0 bytes in 0 blocks
==31916==      possibly lost: 0 bytes in 0 blocks
==31916==    still reachable: 8 bytes in 1 blocks
==31916==         suppressed: 0 bytes in 0 blocks
==31916== Rerun with --leak-check=full to see details of leaked memory
==31916== 
==31916== For counts of detected and suppressed errors, rerun with: -v
==31916== Use --track-origins=yes to see where uninitialised values come from
==31916== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --pagesize=131072 --overwrite=1 --reopen=1    
==31921== Memcheck, a memory error detector
==31921== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31921== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31921== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=131072 --overwrite=1 --reopen=1
==31921== 
==31921== Thread 3:
==31921== Conditional jump or move depends on uninitialised value(s)
==31921==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31921==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31921==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31921==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31921==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31921==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31921==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31921== 
==31921== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31921==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31921==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31921==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31921==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31921==  Address 0xb27f2d2 is 418 bytes inside a block of size 4,184 alloc'd
==31921==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31921==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31921==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31921== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.902999
	perf-erase 			0.571000
	perf-find  			1.144000
	perf-insert			1.842000
	perf-misc  			0.616000
	perf-total		47.076000
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			31.922000
	perf-erase 			0.408000
	perf-find  			0.721000
	perf-insert			1.206000
	perf-misc  			0.530000
	perf-total		34.787000
==31921== 
==31921== HEAP SUMMARY:
==31921==     in use at exit: 8 bytes in 1 blocks
==31921==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31921== 
==31921== LEAK SUMMARY:
==31921==    definitely lost: 0 bytes in 0 blocks
==31921==    indirectly lost: 0 bytes in 0 blocks
==31921==      possibly lost: 0 bytes in 0 blocks
==31921==    still reachable: 8 bytes in 1 blocks
==31921==         suppressed: 0 bytes in 0 blocks
==31921== Rerun with --leak-check=full to see details of leaked memory
==31921== 
==31921== For counts of detected and suppressed errors, rerun with: -v
==31921== Use --track-origins=yes to see where uninitialised values come from
==31921== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --pagesize=131072 --overwrite=1 --reopen=1    
==31932== Memcheck, a memory error detector
==31932== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31932== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31932== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=131072 --overwrite=1 --reopen=1
==31932== 
==31932== Thread 3:
==31932== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31932==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31932==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31932==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31932==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31932==  Address 0xac41a74 is 3,588 bytes inside a block of size 4,184 alloc'd
==31932==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31932==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31932== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.706000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			5.899000
	perf-misc  			1.241000
	perf-total		7.846000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.160000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.032000
	perf-misc  			1.249000
	perf-total		4.441000
==31932== 
==31932== HEAP SUMMARY:
==31932==     in use at exit: 8 bytes in 1 blocks
==31932==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31932== 
==31932== LEAK SUMMARY:
==31932==    definitely lost: 0 bytes in 0 blocks
==31932==    indirectly lost: 0 bytes in 0 blocks
==31932==      possibly lost: 0 bytes in 0 blocks
==31932==    still reachable: 8 bytes in 1 blocks
==31932==         suppressed: 0 bytes in 0 blocks
==31932== Rerun with --leak-check=full to see details of leaked memory
==31932== 
==31932== For counts of detected and suppressed errors, rerun with: -v
==31932== Use --track-origins=yes to see where uninitialised values come from
==31932== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --cachesize=0 --overwrite=1 --reopen=1    
==31938== Memcheck, a memory error detector
==31938== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31938== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31938== Command: ./test ../../testfiles/1/45.tst --cachesize=0 --overwrite=1 --reopen=1
==31938== 
==31938== Thread 3:
==31938== Conditional jump or move depends on uninitialised value(s)
==31938==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31938==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31938==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31938==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31938==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31938==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31938==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31938== 
==31938== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31938==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31938==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31938==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31938==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31938==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31938==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31938==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31938==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31938==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31938==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31938== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.902000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.979000
	perf-misc  			1.505000
	perf-total		13.386000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.783000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.857000
	perf-misc  			1.417000
	perf-total		9.057000
==31938== 
==31938== HEAP SUMMARY:
==31938==     in use at exit: 8 bytes in 1 blocks
==31938==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31938== 
==31938== LEAK SUMMARY:
==31938==    definitely lost: 0 bytes in 0 blocks
==31938==    indirectly lost: 0 bytes in 0 blocks
==31938==      possibly lost: 0 bytes in 0 blocks
==31938==    still reachable: 8 bytes in 1 blocks
==31938==         suppressed: 0 bytes in 0 blocks
==31938== Rerun with --leak-check=full to see details of leaked memory
==31938== 
==31938== For counts of detected and suppressed errors, rerun with: -v
==31938== Use --track-origins=yes to see where uninitialised values come from
==31938== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --cachesize=0 --overwrite=1 --reopen=1    
==31947== Memcheck, a memory error detector
==31947== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31947== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31947== Command: ./test ../../testfiles/1/220.tst --cachesize=0 --overwrite=1 --reopen=1
==31947== 
==31947== Thread 3:
==31947== Conditional jump or move depends on uninitialised value(s)
==31947==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31947==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31947==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31947==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31947==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31947==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31947==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31947== 
==31947== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31947==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31947==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F0DD4B: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4E6248D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4E63AA9: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4E5EBD1: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==  Address 0xaeb8aa2 is 130 bytes inside a block of size 4,184 alloc'd
==31947==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31947==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31947==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31947== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.712000
	perf-erase 			0.402000
	perf-find  			0.000000
	perf-insert			0.859000
	perf-misc  			0.540000
	perf-total		8.513000
hamsterdb
	filesize		507904
	mem-num-allocs		2562
	mem-peak-bytes		12
	mem-total-bytes		10248
	perf-cursor			3.861000
	perf-erase 			0.208000
	perf-find  			0.000000
	perf-insert			0.547000
	perf-misc  			0.600000
	perf-total		5.216000
==31947== 
==31947== HEAP SUMMARY:
==31947==     in use at exit: 8 bytes in 1 blocks
==31947==   total heap usage: 91,132 allocs, 91,131 frees, 110,424,969 bytes allocated
==31947== 
==31947== LEAK SUMMARY:
==31947==    definitely lost: 0 bytes in 0 blocks
==31947==    indirectly lost: 0 bytes in 0 blocks
==31947==      possibly lost: 0 bytes in 0 blocks
==31947==    still reachable: 8 bytes in 1 blocks
==31947==         suppressed: 0 bytes in 0 blocks
==31947== Rerun with --leak-check=full to see details of leaked memory
==31947== 
==31947== For counts of detected and suppressed errors, rerun with: -v
==31947== Use --track-origins=yes to see where uninitialised values come from
==31947== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --cachesize=0 --overwrite=1 --reopen=1    
==31952== Memcheck, a memory error detector
==31952== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31952== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31952== Command: ./test ../../testfiles/1/ext_020.tst --cachesize=0 --overwrite=1 --reopen=1
==31952== 
==31952== Thread 3:
==31952== Conditional jump or move depends on uninitialised value(s)
==31952==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31952==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31952==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31952==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31952==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31952==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31952==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31952== 
==31952== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31952==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31952==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31952==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31952==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31952==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==31952==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31952==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31952==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31952== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.042000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.107000
	perf-misc  			0.532000
	perf-total		0.681000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.030000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.115000
	perf-misc  			0.517000
	perf-total		0.662000
==31952== 
==31952== HEAP SUMMARY:
==31952==     in use at exit: 8 bytes in 1 blocks
==31952==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31952== 
==31952== LEAK SUMMARY:
==31952==    definitely lost: 0 bytes in 0 blocks
==31952==    indirectly lost: 0 bytes in 0 blocks
==31952==      possibly lost: 0 bytes in 0 blocks
==31952==    still reachable: 8 bytes in 1 blocks
==31952==         suppressed: 0 bytes in 0 blocks
==31952== Rerun with --leak-check=full to see details of leaked memory
==31952== 
==31952== For counts of detected and suppressed errors, rerun with: -v
==31952== Use --track-origins=yes to see where uninitialised values come from
==31952== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --cachesize=0 --overwrite=1 --reopen=1    
==31957== Memcheck, a memory error detector
==31957== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31957== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31957== Command: ./test ../../testfiles/2/ext_060.tst --cachesize=0 --overwrite=1 --reopen=1
==31957== 
==31957== Thread 3:
==31957== Conditional jump or move depends on uninitialised value(s)
==31957==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31957==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31957==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31957==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31957==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31957==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31957==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31957== 
==31957== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31957==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31957==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31957==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31957==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31957==  Address 0xb27f2d2 is 418 bytes inside a block of size 4,184 alloc'd
==31957==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31957==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31957==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31957== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.810999
	perf-erase 			0.550000
	perf-find  			1.072000
	perf-insert			1.814000
	perf-misc  			0.613000
	perf-total		46.860001
hamsterdb
	filesize		81920
	mem-num-allocs		449305
	mem-peak-bytes		7615
	mem-total-bytes		11899828
	perf-cursor			32.029999
	perf-erase 			0.374000
	perf-find  			0.669000
	perf-insert			1.238000
	perf-misc  			0.514000
	perf-total		34.824999
==31957== 
==31957== HEAP SUMMARY:
==31957==     in use at exit: 8 bytes in 1 blocks
==31957==   total heap usage: 1,065,734 allocs, 1,065,733 frees, 142,536,241 bytes allocated
==31957== 
==31957== LEAK SUMMARY:
==31957==    definitely lost: 0 bytes in 0 blocks
==31957==    indirectly lost: 0 bytes in 0 blocks
==31957==      possibly lost: 0 bytes in 0 blocks
==31957==    still reachable: 8 bytes in 1 blocks
==31957==         suppressed: 0 bytes in 0 blocks
==31957== Rerun with --leak-check=full to see details of leaked memory
==31957== 
==31957== For counts of detected and suppressed errors, rerun with: -v
==31957== Use --track-origins=yes to see where uninitialised values come from
==31957== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --cachesize=0 --overwrite=1 --reopen=1    
==31963== Memcheck, a memory error detector
==31963== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31963== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31963== Command: ./test ../../testfiles/2/blb-001.tst --cachesize=0 --overwrite=1 --reopen=1
==31963== 
==31963== Thread 3:
==31963== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31963==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31963==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31963==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31963==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31963==  Address 0xac41d74 is 3,588 bytes inside a block of size 4,184 alloc'd
==31963==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31963==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31963== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.696000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			5.185000
	perf-misc  			1.115000
	perf-total		6.996000
hamsterdb
	filesize		40697856
	mem-num-allocs		14
	mem-peak-bytes		12
	mem-total-bytes		56
	perf-cursor			0.152000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.960000
	perf-misc  			1.100000
	perf-total		2.212000
==31963== 
==31963== HEAP SUMMARY:
==31963==     in use at exit: 8 bytes in 1 blocks
==31963==   total heap usage: 1,556 allocs, 1,555 frees, 189,549,390 bytes allocated
==31963== 
==31963== LEAK SUMMARY:
==31963==    definitely lost: 0 bytes in 0 blocks
==31963==    indirectly lost: 0 bytes in 0 blocks
==31963==      possibly lost: 0 bytes in 0 blocks
==31963==    still reachable: 8 bytes in 1 blocks
==31963==         suppressed: 0 bytes in 0 blocks
==31963== Rerun with --leak-check=full to see details of leaked memory
==31963== 
==31963== For counts of detected and suppressed errors, rerun with: -v
==31963== Use --track-origins=yes to see where uninitialised values come from
==31963== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-aes=1 --reopen=1    
==31969== Memcheck, a memory error detector
==31969== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31969== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31969== Command: ./test ../../testfiles/1/45.tst --use-aes=1 --reopen=1
==31969== 
==31969== Thread 3:
==31969== Conditional jump or move depends on uninitialised value(s)
==31969==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31969==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31969==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31969==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31969==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31969==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31969==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31969== 
==31969== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31969==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31969==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31969==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31969==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31969==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31969==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31969==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==31969==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31969==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31969==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31969== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.998000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.008000
	perf-misc  			1.346000
	perf-total		13.351999
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.852000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.840000
	perf-misc  			1.247000
	perf-total		8.939000
==31969== 
==31969== HEAP SUMMARY:
==31969==     in use at exit: 8 bytes in 1 blocks
==31969==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==31969== 
==31969== LEAK SUMMARY:
==31969==    definitely lost: 0 bytes in 0 blocks
==31969==    indirectly lost: 0 bytes in 0 blocks
==31969==      possibly lost: 0 bytes in 0 blocks
==31969==    still reachable: 8 bytes in 1 blocks
==31969==         suppressed: 0 bytes in 0 blocks
==31969== Rerun with --leak-check=full to see details of leaked memory
==31969== 
==31969== For counts of detected and suppressed errors, rerun with: -v
==31969== Use --track-origins=yes to see where uninitialised values come from
==31969== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-aes=1 --reopen=1    
==31974== Memcheck, a memory error detector
==31974== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31974== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31974== Command: ./test ../../testfiles/1/220.tst --use-aes=1 --reopen=1
==31974== 
==31974== Thread 3:
==31974== Conditional jump or move depends on uninitialised value(s)
==31974==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31974==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31974==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31974==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31974==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31974==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31974==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31974== 
==31974== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31974==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31974==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==  Address 0xaebb2b2 is 130 bytes inside a block of size 4,184 alloc'd
==31974==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31974==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31974==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31974== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.789000
	perf-erase 			0.401000
	perf-find  			0.000000
	perf-insert			0.772000
	perf-misc  			0.677000
	perf-total		8.639000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.660000
	perf-erase 			0.192000
	perf-find  			0.000000
	perf-insert			0.475000
	perf-misc  			0.593000
	perf-total		4.920000
==31974== 
==31974== HEAP SUMMARY:
==31974==     in use at exit: 8 bytes in 1 blocks
==31974==   total heap usage: 91,101 allocs, 91,100 frees, 110,376,567 bytes allocated
==31974== 
==31974== LEAK SUMMARY:
==31974==    definitely lost: 0 bytes in 0 blocks
==31974==    indirectly lost: 0 bytes in 0 blocks
==31974==      possibly lost: 0 bytes in 0 blocks
==31974==    still reachable: 8 bytes in 1 blocks
==31974==         suppressed: 0 bytes in 0 blocks
==31974== Rerun with --leak-check=full to see details of leaked memory
==31974== 
==31974== For counts of detected and suppressed errors, rerun with: -v
==31974== Use --track-origins=yes to see where uninitialised values come from
==31974== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-aes=1 --reopen=1    
==31979== Memcheck, a memory error detector
==31979== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31979== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31979== Command: ./test ../../testfiles/1/ext_020.tst --use-aes=1 --reopen=1
==31979== 
==31979== Thread 3:
==31979== Conditional jump or move depends on uninitialised value(s)
==31979==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31979==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31979==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31979==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31979==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31979==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31979==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31979== 
==31979== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31979==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31979==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31979==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31979==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31979==  Address 0xac610ce is 126 bytes inside a block of size 4,184 alloc'd
==31979==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31979==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31979==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31979== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.051000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.097000
	perf-misc  			0.616000
	perf-total		0.764000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.027000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.114000
	perf-misc  			0.562000
	perf-total		0.703000
==31979== 
==31979== HEAP SUMMARY:
==31979==     in use at exit: 8 bytes in 1 blocks
==31979==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==31979== 
==31979== LEAK SUMMARY:
==31979==    definitely lost: 0 bytes in 0 blocks
==31979==    indirectly lost: 0 bytes in 0 blocks
==31979==      possibly lost: 0 bytes in 0 blocks
==31979==    still reachable: 8 bytes in 1 blocks
==31979==         suppressed: 0 bytes in 0 blocks
==31979== Rerun with --leak-check=full to see details of leaked memory
==31979== 
==31979== For counts of detected and suppressed errors, rerun with: -v
==31979== Use --track-origins=yes to see where uninitialised values come from
==31979== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-aes=1 --reopen=1    
==31984== Memcheck, a memory error detector
==31984== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31984== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31984== Command: ./test ../../testfiles/2/ext_060.tst --use-aes=1 --reopen=1
==31984== 
==31984== Thread 3:
==31984== Conditional jump or move depends on uninitialised value(s)
==31984==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31984==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31984==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31984==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31984==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31984==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31984==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31984== 
==31984== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31984==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31984==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31984==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31984==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31984==  Address 0xb27beba is 410 bytes inside a block of size 4,184 alloc'd
==31984==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31984==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31984==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31984== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.029998
	perf-erase 			0.566000
	perf-find  			1.123000
	perf-insert			1.220000
	perf-misc  			0.554000
	perf-total		45.492998
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			31.577999
	perf-erase 			0.406000
	perf-find  			0.730000
	perf-insert			0.841000
	perf-misc  			0.532000
	perf-total		34.087000
==31984== 
==31984== HEAP SUMMARY:
==31984==     in use at exit: 8 bytes in 1 blocks
==31984==   total heap usage: 1,065,674 allocs, 1,065,673 frees, 142,533,470 bytes allocated
==31984== 
==31984== LEAK SUMMARY:
==31984==    definitely lost: 0 bytes in 0 blocks
==31984==    indirectly lost: 0 bytes in 0 blocks
==31984==      possibly lost: 0 bytes in 0 blocks
==31984==    still reachable: 8 bytes in 1 blocks
==31984==         suppressed: 0 bytes in 0 blocks
==31984== Rerun with --leak-check=full to see details of leaked memory
==31984== 
==31984== For counts of detected and suppressed errors, rerun with: -v
==31984== Use --track-origins=yes to see where uninitialised values come from
==31984== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-aes=1 --reopen=1    
==31989== Memcheck, a memory error detector
==31989== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31989== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31989== Command: ./test ../../testfiles/2/blb-001.tst --use-aes=1 --reopen=1
==31989== 
==31989== Thread 3:
==31989== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31989==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31989==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==31989==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==31989==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==31989==  Address 0xac45d60 is 3,984 bytes inside a block of size 4,184 alloc'd
==31989==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31989==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31989== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.346000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.513000
	perf-misc  			0.685000
	perf-total		8.544000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.171000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.268000
	perf-misc  			0.589000
	perf-total		3.028000
==31989== 
==31989== HEAP SUMMARY:
==31989==     in use at exit: 8 bytes in 1 blocks
==31989==   total heap usage: 1,571 allocs, 1,570 frees, 268,420,656 bytes allocated
==31989== 
==31989== LEAK SUMMARY:
==31989==    definitely lost: 0 bytes in 0 blocks
==31989==    indirectly lost: 0 bytes in 0 blocks
==31989==      possibly lost: 0 bytes in 0 blocks
==31989==    still reachable: 8 bytes in 1 blocks
==31989==         suppressed: 0 bytes in 0 blocks
==31989== Rerun with --leak-check=full to see details of leaked memory
==31989== 
==31989== For counts of detected and suppressed errors, rerun with: -v
==31989== Use --track-origins=yes to see where uninitialised values come from
==31989== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-recovery=1 --reopen=1    
==31995== Memcheck, a memory error detector
==31995== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==31995== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==31995== Command: ./test ../../testfiles/1/45.tst --use-recovery=1 --reopen=1
==31995== 
==31995== Thread 3:
==31995== Conditional jump or move depends on uninitialised value(s)
==31995==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31995==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==31995==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==31995==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31995==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31995==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==31995==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==31995== 
==31995== Syscall param pwrite64(buf) points to uninitialised byte(s)
==31995==    at 0x53CF6C3: ??? (syscall-template.S:82)
==31995==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==31995==    by 0x415D68: Engine::flush() (engine.cpp:315)
==31995==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==31995==    by 0x418DC5: Thread::run() (thread.hpp:73)
==31995==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==31995==  Address 0xad2fcc6 is 214 bytes inside a block of size 4,184 alloc'd
==31995==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31995==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==31995==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==31995== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.079999
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.086000
	perf-misc  			1.529000
	perf-total		13.695000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			7.210000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.962000
	perf-misc  			1.622000
	perf-total		13.794000
==31995== 
==31995== HEAP SUMMARY:
==31995==     in use at exit: 8 bytes in 1 blocks
==31995==   total heap usage: 103,340 allocs, 103,339 frees, 111,019,527 bytes allocated
==31995== 
==31995== LEAK SUMMARY:
==31995==    definitely lost: 0 bytes in 0 blocks
==31995==    indirectly lost: 0 bytes in 0 blocks
==31995==      possibly lost: 0 bytes in 0 blocks
==31995==    still reachable: 8 bytes in 1 blocks
==31995==         suppressed: 0 bytes in 0 blocks
==31995== Rerun with --leak-check=full to see details of leaked memory
==31995== 
==31995== For counts of detected and suppressed errors, rerun with: -v
==31995== Use --track-origins=yes to see where uninitialised values come from
==31995== ERROR SUMMARY: 314 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-recovery=1 --reopen=1    
==32000== Memcheck, a memory error detector
==32000== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32000== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32000== Command: ./test ../../testfiles/1/220.tst --use-recovery=1 --reopen=1
==32000== 
==32000== Thread 3:
==32000== Conditional jump or move depends on uninitialised value(s)
==32000==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32000==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32000==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32000==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32000==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32000==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32000==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32000== 
==32000== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32000==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32000==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==  Address 0xad2d42e is 158 bytes inside a block of size 4,184 alloc'd
==32000==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32000==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32000==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32000== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			7.132000
	perf-erase 			0.437000
	perf-find  			0.000000
	perf-insert			0.829000
	perf-misc  			0.561000
	perf-total		8.959000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			4.085000
	perf-erase 			0.975000
	perf-find  			0.000000
	perf-insert			1.928000
	perf-misc  			0.657000
	perf-total		7.645000
==32000== 
==32000== HEAP SUMMARY:
==32000==     in use at exit: 8 bytes in 1 blocks
==32000==   total heap usage: 91,108 allocs, 91,107 frees, 110,377,012 bytes allocated
==32000== 
==32000== LEAK SUMMARY:
==32000==    definitely lost: 0 bytes in 0 blocks
==32000==    indirectly lost: 0 bytes in 0 blocks
==32000==      possibly lost: 0 bytes in 0 blocks
==32000==    still reachable: 8 bytes in 1 blocks
==32000==         suppressed: 0 bytes in 0 blocks
==32000== Rerun with --leak-check=full to see details of leaked memory
==32000== 
==32000== For counts of detected and suppressed errors, rerun with: -v
==32000== Use --track-origins=yes to see where uninitialised values come from
==32000== ERROR SUMMARY: 250 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-recovery=1 --reopen=1    
==32005== Memcheck, a memory error detector
==32005== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32005== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32005== Command: ./test ../../testfiles/1/ext_020.tst --use-recovery=1 --reopen=1
==32005== 
==32005== Thread 3:
==32005== Conditional jump or move depends on uninitialised value(s)
==32005==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32005==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32005==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32005==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32005==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32005==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32005==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32005== 
==32005== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32005==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32005==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32005==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32005==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32005==  Address 0xac60fce is 126 bytes inside a block of size 4,184 alloc'd
==32005==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32005==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32005==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32005== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.053000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.100000
	perf-misc  			0.712000
	perf-total		0.865000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.028000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.135000
	perf-misc  			0.765000
	perf-total		0.928000
==32005== 
==32005== HEAP SUMMARY:
==32005==     in use at exit: 8 bytes in 1 blocks
==32005==   total heap usage: 1,997 allocs, 1,996 frees, 106,438,308 bytes allocated
==32005== 
==32005== LEAK SUMMARY:
==32005==    definitely lost: 0 bytes in 0 blocks
==32005==    indirectly lost: 0 bytes in 0 blocks
==32005==      possibly lost: 0 bytes in 0 blocks
==32005==    still reachable: 8 bytes in 1 blocks
==32005==         suppressed: 0 bytes in 0 blocks
==32005== Rerun with --leak-check=full to see details of leaked memory
==32005== 
==32005== For counts of detected and suppressed errors, rerun with: -v
==32005== Use --track-origins=yes to see where uninitialised values come from
==32005== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-recovery=1 --reopen=1    
==32010== Memcheck, a memory error detector
==32010== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32010== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32010== Command: ./test ../../testfiles/2/ext_060.tst --use-recovery=1 --reopen=1
==32010== 
==32010== Thread 3:
==32010== Conditional jump or move depends on uninitialised value(s)
==32010==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32010==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32010==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32010==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32010==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32010==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32010==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32010== 
==32010== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32010==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32010==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32010==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32010==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32010==  Address 0xb27c24a is 410 bytes inside a block of size 4,184 alloc'd
==32010==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32010==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32010==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32010== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.083000
	perf-erase 			0.604000
	perf-find  			1.151000
	perf-insert			1.258000
	perf-misc  			0.520000
	perf-total		45.616001
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			33.785000
	perf-erase 			0.376000
	perf-find  			0.817000
	perf-insert			1.156000
	perf-misc  			0.406000
	perf-total		36.539998
==32010== 
==32010== HEAP SUMMARY:
==32010==     in use at exit: 8 bytes in 1 blocks
==32010==   total heap usage: 1,065,681 allocs, 1,065,680 frees, 142,533,915 bytes allocated
==32010== 
==32010== LEAK SUMMARY:
==32010==    definitely lost: 0 bytes in 0 blocks
==32010==    indirectly lost: 0 bytes in 0 blocks
==32010==      possibly lost: 0 bytes in 0 blocks
==32010==    still reachable: 8 bytes in 1 blocks
==32010==         suppressed: 0 bytes in 0 blocks
==32010== Rerun with --leak-check=full to see details of leaked memory
==32010== 
==32010== For counts of detected and suppressed errors, rerun with: -v
==32010== Use --track-origins=yes to see where uninitialised values come from
==32010== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-recovery=1 --reopen=1    
==32016== Memcheck, a memory error detector
==32016== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32016== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32016== Command: ./test ../../testfiles/2/blb-001.tst --use-recovery=1 --reopen=1
==32016== 
==32016== Thread 3:
==32016== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32016==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32016==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32016==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32016==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32016==  Address 0xac46070 is 3,984 bytes inside a block of size 4,184 alloc'd
==32016==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32016==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32016== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.025000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.364000
	perf-misc  			0.755000
	perf-total		8.144000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.215000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.214000
	perf-misc  			0.855000
	perf-total		5.284000
==32016== 
==32016== HEAP SUMMARY:
==32016==     in use at exit: 8 bytes in 1 blocks
==32016==   total heap usage: 1,580 allocs, 1,579 frees, 268,421,293 bytes allocated
==32016== 
==32016== LEAK SUMMARY:
==32016==    definitely lost: 0 bytes in 0 blocks
==32016==    indirectly lost: 0 bytes in 0 blocks
==32016==      possibly lost: 0 bytes in 0 blocks
==32016==    still reachable: 8 bytes in 1 blocks
==32016==         suppressed: 0 bytes in 0 blocks
==32016== Rerun with --leak-check=full to see details of leaked memory
==32016== 
==32016== For counts of detected and suppressed errors, rerun with: -v
==32016== Use --track-origins=yes to see where uninitialised values come from
==32016== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --cacheunlimited=1    
==32022== Memcheck, a memory error detector
==32022== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32022== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32022== Command: ./test ../../testfiles/1/45.tst --cacheunlimited=1
==32022== 
==32022== Thread 3:
==32022== Conditional jump or move depends on uninitialised value(s)
==32022==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32022==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32022==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32022==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32022==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32022==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32022==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32022== 
==32022== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32022==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32022==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==32022==    by 0x415D68: Engine::flush() (engine.cpp:315)
==32022==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==32022==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32022==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32022==  Address 0xad2f6b6 is 214 bytes inside a block of size 4,184 alloc'd
==32022==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32022==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32022==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32022== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.532000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.978000
	perf-misc  			0.678000
	perf-total		12.188000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.604000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.829000
	perf-misc  			0.796000
	perf-total		8.229000
==32022== 
==32022== HEAP SUMMARY:
==32022==     in use at exit: 8 bytes in 1 blocks
==32022==   total heap usage: 103,039 allocs, 103,038 frees, 110,248,316 bytes allocated
==32022== 
==32022== LEAK SUMMARY:
==32022==    definitely lost: 0 bytes in 0 blocks
==32022==    indirectly lost: 0 bytes in 0 blocks
==32022==      possibly lost: 0 bytes in 0 blocks
==32022==    still reachable: 8 bytes in 1 blocks
==32022==         suppressed: 0 bytes in 0 blocks
==32022== Rerun with --leak-check=full to see details of leaked memory
==32022== 
==32022== For counts of detected and suppressed errors, rerun with: -v
==32022== Use --track-origins=yes to see where uninitialised values come from
==32022== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --cacheunlimited=1    
==32027== Memcheck, a memory error detector
==32027== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32027== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32027== Command: ./test ../../testfiles/1/220.tst --cacheunlimited=1
==32027== 
==32027== Thread 3:
==32027== Conditional jump or move depends on uninitialised value(s)
==32027==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32027==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32027==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32027==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32027==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32027==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32027==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32027== 
==32027== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32027==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32027==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==  Address 0xaebb032 is 130 bytes inside a block of size 4,184 alloc'd
==32027==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32027==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32027==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32027== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.882000
	perf-erase 			0.436000
	perf-find  			0.000000
	perf-insert			0.787000
	perf-misc  			0.367000
	perf-total		8.472000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.729000
	perf-erase 			0.212000
	perf-find  			0.000000
	perf-insert			0.480000
	perf-misc  			0.334000
	perf-total		4.755000
==32027== 
==32027== HEAP SUMMARY:
==32027==     in use at exit: 8 bytes in 1 blocks
==32027==   total heap usage: 90,837 allocs, 90,836 frees, 109,604,042 bytes allocated
==32027== 
==32027== LEAK SUMMARY:
==32027==    definitely lost: 0 bytes in 0 blocks
==32027==    indirectly lost: 0 bytes in 0 blocks
==32027==      possibly lost: 0 bytes in 0 blocks
==32027==    still reachable: 8 bytes in 1 blocks
==32027==         suppressed: 0 bytes in 0 blocks
==32027== Rerun with --leak-check=full to see details of leaked memory
==32027== 
==32027== For counts of detected and suppressed errors, rerun with: -v
==32027== Use --track-origins=yes to see where uninitialised values come from
==32027== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --cacheunlimited=1    
==32032== Memcheck, a memory error detector
==32032== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32032== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32032== Command: ./test ../../testfiles/1/ext_020.tst --cacheunlimited=1
==32032== 
==32032== Thread 3:
==32032== Conditional jump or move depends on uninitialised value(s)
==32032==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32032==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32032==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32032==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32032==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32032==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32032==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32032== 
==32032== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32032==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32032==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32032==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32032==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32032==  Address 0xac609be is 126 bytes inside a block of size 4,184 alloc'd
==32032==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32032==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32032==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32032== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.049000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.099000
	perf-misc  			0.261000
	perf-total		0.409000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.025000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.112000
	perf-misc  			0.303000
	perf-total		0.440000
==32032== 
==32032== HEAP SUMMARY:
==32032==     in use at exit: 8 bytes in 1 blocks
==32032==   total heap usage: 1,747 allocs, 1,746 frees, 105,773,460 bytes allocated
==32032== 
==32032== LEAK SUMMARY:
==32032==    definitely lost: 0 bytes in 0 blocks
==32032==    indirectly lost: 0 bytes in 0 blocks
==32032==      possibly lost: 0 bytes in 0 blocks
==32032==    still reachable: 8 bytes in 1 blocks
==32032==         suppressed: 0 bytes in 0 blocks
==32032== Rerun with --leak-check=full to see details of leaked memory
==32032== 
==32032== For counts of detected and suppressed errors, rerun with: -v
==32032== Use --track-origins=yes to see where uninitialised values come from
==32032== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --cacheunlimited=1    
==32037== Memcheck, a memory error detector
==32037== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32037== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32037== Command: ./test ../../testfiles/2/ext_060.tst --cacheunlimited=1
==32037== 
==32037== Thread 3:
==32037== Conditional jump or move depends on uninitialised value(s)
==32037==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32037==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32037==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32037==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32037==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32037==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32037==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32037== 
==32037== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32037==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32037==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32037==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32037==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32037==  Address 0xb27bc3a is 410 bytes inside a block of size 4,184 alloc'd
==32037==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32037==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32037==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32037== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			41.671000
	perf-erase 			0.594000
	perf-find  			1.118000
	perf-insert			1.276000
	perf-misc  			0.268000
	perf-total		44.927001
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			31.604001
	perf-erase 			0.383000
	perf-find  			0.724000
	perf-insert			0.852000
	perf-misc  			0.347000
	perf-total		33.910000
==32037== 
==32037== HEAP SUMMARY:
==32037==     in use at exit: 8 bytes in 1 blocks
==32037==   total heap usage: 1,065,212 allocs, 1,065,211 frees, 141,899,092 bytes allocated
==32037== 
==32037== LEAK SUMMARY:
==32037==    definitely lost: 0 bytes in 0 blocks
==32037==    indirectly lost: 0 bytes in 0 blocks
==32037==      possibly lost: 0 bytes in 0 blocks
==32037==    still reachable: 8 bytes in 1 blocks
==32037==         suppressed: 0 bytes in 0 blocks
==32037== Rerun with --leak-check=full to see details of leaked memory
==32037== 
==32037== For counts of detected and suppressed errors, rerun with: -v
==32037== Use --track-origins=yes to see where uninitialised values come from
==32037== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --cacheunlimited=1    
==32049== Memcheck, a memory error detector
==32049== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32049== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32049== Command: ./test ../../testfiles/2/blb-001.tst --cacheunlimited=1
==32049== 
==32049== Thread 3:
==32049== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32049==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32049==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32049==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32049==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32049==  Address 0xac41980 is 3,984 bytes inside a block of size 4,184 alloc'd
==32049==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32049==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32049== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.595000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.914000
	perf-misc  			0.245000
	perf-total		8.754000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.053000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.967000
	perf-misc  			0.264000
	perf-total		2.284000
==32049== 
==32049== HEAP SUMMARY:
==32049==     in use at exit: 8 bytes in 1 blocks
==32049==   total heap usage: 1,301 allocs, 1,300 frees, 227,153,526 bytes allocated
==32049== 
==32049== LEAK SUMMARY:
==32049==    definitely lost: 0 bytes in 0 blocks
==32049==    indirectly lost: 0 bytes in 0 blocks
==32049==      possibly lost: 0 bytes in 0 blocks
==32049==    still reachable: 8 bytes in 1 blocks
==32049==         suppressed: 0 bytes in 0 blocks
==32049== Rerun with --leak-check=full to see details of leaked memory
==32049== 
==32049== For counts of detected and suppressed errors, rerun with: -v
==32049== Use --track-origins=yes to see where uninitialised values come from
==32049== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==32055== Memcheck, a memory error detector
==32055== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32055== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32055== Command: ./test ../../testfiles/1/45.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==32055== 
==32055== Thread 3:
==32055== Conditional jump or move depends on uninitialised value(s)
==32055==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32055==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32055==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32055==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32055==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32055==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32055==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32055== 
==32055== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32055==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32055==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==32055==    by 0x415D68: Engine::flush() (engine.cpp:315)
==32055==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==32055==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32055==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32055==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==32055==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32055==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32055==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32055== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.917000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.981000
	perf-misc  			1.010000
	perf-total		12.908000
hamsterdb
	filesize		3293184
	mem-num-allocs		1308
	mem-peak-bytes		16
	mem-total-bytes		5232
	perf-cursor			8.124000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.862000
	perf-misc  			0.928000
	perf-total		9.914000
==32055== 
==32055== HEAP SUMMARY:
==32055==     in use at exit: 8 bytes in 1 blocks
==32055==   total heap usage: 125,883 allocs, 125,882 frees, 113,305,787 bytes allocated
==32055== 
==32055== LEAK SUMMARY:
==32055==    definitely lost: 0 bytes in 0 blocks
==32055==    indirectly lost: 0 bytes in 0 blocks
==32055==      possibly lost: 0 bytes in 0 blocks
==32055==    still reachable: 8 bytes in 1 blocks
==32055==         suppressed: 0 bytes in 0 blocks
==32055== Rerun with --leak-check=full to see details of leaked memory
==32055== 
==32055== For counts of detected and suppressed errors, rerun with: -v
==32055== Use --track-origins=yes to see where uninitialised values come from
==32055== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==32060== Memcheck, a memory error detector
==32060== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32060== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32060== Command: ./test ../../testfiles/1/220.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==32060== 
==32060== Thread 3:
==32060== Conditional jump or move depends on uninitialised value(s)
==32060==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32060==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32060==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32060==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32060==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32060==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32060==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32060== 
==32060== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32060==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32060==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==  Address 0xaebb2b2 is 130 bytes inside a block of size 4,184 alloc'd
==32060==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32060==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32060==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32060== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.812000
	perf-erase 			0.414000
	perf-find  			0.000000
	perf-insert			0.813000
	perf-misc  			0.480000
	perf-total		8.519000
hamsterdb
	filesize		1163264
	mem-num-allocs		2095
	mem-peak-bytes		12
	mem-total-bytes		8380
	perf-cursor			3.766000
	perf-erase 			0.220000
	perf-find  			0.000000
	perf-insert			0.488000
	perf-misc  			0.506000
	perf-total		4.980000
==32060== 
==32060== HEAP SUMMARY:
==32060==     in use at exit: 8 bytes in 1 blocks
==32060==   total heap usage: 90,689 allocs, 90,688 frees, 110,373,951 bytes allocated
==32060== 
==32060== LEAK SUMMARY:
==32060==    definitely lost: 0 bytes in 0 blocks
==32060==    indirectly lost: 0 bytes in 0 blocks
==32060==      possibly lost: 0 bytes in 0 blocks
==32060==    still reachable: 8 bytes in 1 blocks
==32060==         suppressed: 0 bytes in 0 blocks
==32060== Rerun with --leak-check=full to see details of leaked memory
==32060== 
==32060== For counts of detected and suppressed errors, rerun with: -v
==32060== Use --track-origins=yes to see where uninitialised values come from
==32060== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==32065== Memcheck, a memory error detector
==32065== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32065== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32065== Command: ./test ../../testfiles/1/ext_020.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==32065== 
==32065== Thread 3:
==32065== Conditional jump or move depends on uninitialised value(s)
==32065==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32065==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32065==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32065==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32065==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32065==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32065==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32065== 
==32065== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32065==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32065==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32065==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32065==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32065==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==32065==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32065==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32065==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32065== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.095000
	perf-misc  			0.450000
	perf-total		0.589000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.030000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.109000
	perf-misc  			0.402000
	perf-total		0.541000
==32065== 
==32065== HEAP SUMMARY:
==32065==     in use at exit: 8 bytes in 1 blocks
==32065==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==32065== 
==32065== LEAK SUMMARY:
==32065==    definitely lost: 0 bytes in 0 blocks
==32065==    indirectly lost: 0 bytes in 0 blocks
==32065==      possibly lost: 0 bytes in 0 blocks
==32065==    still reachable: 8 bytes in 1 blocks
==32065==         suppressed: 0 bytes in 0 blocks
==32065== Rerun with --leak-check=full to see details of leaked memory
==32065== 
==32065== For counts of detected and suppressed errors, rerun with: -v
==32065== Use --track-origins=yes to see where uninitialised values come from
==32065== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==32070== Memcheck, a memory error detector
==32070== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32070== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32070== Command: ./test ../../testfiles/2/ext_060.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==32070== 
==32070== Thread 3:
==32070== Conditional jump or move depends on uninitialised value(s)
==32070==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32070==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32070==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32070==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32070==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32070==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32070==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32070== 
==32070== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32070==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32070==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32070==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32070==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32070==  Address 0xb27beba is 410 bytes inside a block of size 4,184 alloc'd
==32070==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32070==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32070==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32070== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.909999
	perf-erase 			0.592000
	perf-find  			1.082000
	perf-insert			1.174000
	perf-misc  			0.493000
	perf-total		46.251000
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			31.995001
	perf-erase 			0.388000
	perf-find  			0.716000
	perf-insert			0.919000
	perf-misc  			0.401000
	perf-total		34.418999
==32070== 
==32070== HEAP SUMMARY:
==32070==     in use at exit: 8 bytes in 1 blocks
==32070==   total heap usage: 1,065,674 allocs, 1,065,673 frees, 142,533,470 bytes allocated
==32070== 
==32070== LEAK SUMMARY:
==32070==    definitely lost: 0 bytes in 0 blocks
==32070==    indirectly lost: 0 bytes in 0 blocks
==32070==      possibly lost: 0 bytes in 0 blocks
==32070==    still reachable: 8 bytes in 1 blocks
==32070==         suppressed: 0 bytes in 0 blocks
==32070== Rerun with --leak-check=full to see details of leaked memory
==32070== 
==32070== For counts of detected and suppressed errors, rerun with: -v
==32070== Use --track-origins=yes to see where uninitialised values come from
==32070== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==32075== Memcheck, a memory error detector
==32075== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32075== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32075== Command: ./test ../../testfiles/2/blb-001.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==32075== 
==32075== Thread 3:
==32075== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32075==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32075==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32075==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32075==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32075==  Address 0xac41f00 is 3,984 bytes inside a block of size 4,184 alloc'd
==32075==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32075==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32075== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.358000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.379000
	perf-misc  			0.600000
	perf-total		9.337000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.182000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.797000
	perf-misc  			0.512000
	perf-total		2.491000
==32075== 
==32075== HEAP SUMMARY:
==32075==     in use at exit: 8 bytes in 1 blocks
==32075==   total heap usage: 1,571 allocs, 1,570 frees, 268,420,656 bytes allocated
==32075== 
==32075== LEAK SUMMARY:
==32075==    definitely lost: 0 bytes in 0 blocks
==32075==    indirectly lost: 0 bytes in 0 blocks
==32075==      possibly lost: 0 bytes in 0 blocks
==32075==    still reachable: 8 bytes in 1 blocks
==32075==         suppressed: 0 bytes in 0 blocks
==32075== Rerun with --leak-check=full to see details of leaked memory
==32075== 
==32075== For counts of detected and suppressed errors, rerun with: -v
==32075== Use --track-origins=yes to see where uninitialised values come from
==32075== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==32081== Memcheck, a memory error detector
==32081== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32081== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32081== Command: ./test ../../testfiles/1/45.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==32081== 
==32081== Thread 3:
==32081== Conditional jump or move depends on uninitialised value(s)
==32081==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32081==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32081==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32081==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32081==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32081==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32081==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32081== 
==32081== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32081==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32081==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==32081==    by 0x415D68: Engine::flush() (engine.cpp:315)
==32081==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==32081==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32081==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32081==  Address 0xad2f936 is 214 bytes inside a block of size 4,184 alloc'd
==32081==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32081==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32081==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32081== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.886000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.036000
	perf-misc  			0.851000
	perf-total		12.773000
hamsterdb
	filesize		966656
	mem-num-allocs		2813
	mem-peak-bytes		16
	mem-total-bytes		11252
	perf-cursor			6.808000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.831000
	perf-misc  			0.779000
	perf-total		8.418000
==32081== 
==32081== HEAP SUMMARY:
==32081==     in use at exit: 8 bytes in 1 blocks
==32081==   total heap usage: 103,333 allocs, 103,332 frees, 111,019,082 bytes allocated
==32081== 
==32081== LEAK SUMMARY:
==32081==    definitely lost: 0 bytes in 0 blocks
==32081==    indirectly lost: 0 bytes in 0 blocks
==32081==      possibly lost: 0 bytes in 0 blocks
==32081==    still reachable: 8 bytes in 1 blocks
==32081==         suppressed: 0 bytes in 0 blocks
==32081== Rerun with --leak-check=full to see details of leaked memory
==32081== 
==32081== For counts of detected and suppressed errors, rerun with: -v
==32081== Use --track-origins=yes to see where uninitialised values come from
==32081== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==32086== Memcheck, a memory error detector
==32086== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32086== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32086== Command: ./test ../../testfiles/1/220.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==32086== 
==32086== Thread 3:
==32086== Conditional jump or move depends on uninitialised value(s)
==32086==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32086==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32086==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32086==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32086==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32086==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32086==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32086== 
==32086== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32086==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32086==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==  Address 0xaebb2b2 is 130 bytes inside a block of size 4,184 alloc'd
==32086==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32086==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32086==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32086== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.779000
	perf-erase 			0.431000
	perf-find  			0.000000
	perf-insert			0.815000
	perf-misc  			0.503000
	perf-total		8.528000
hamsterdb
	filesize		442368
	mem-num-allocs		2551
	mem-peak-bytes		12
	mem-total-bytes		10204
	perf-cursor			3.770000
	perf-erase 			0.204000
	perf-find  			0.000000
	perf-insert			0.425000
	perf-misc  			0.418000
	perf-total		4.817000
==32086== 
==32086== HEAP SUMMARY:
==32086==     in use at exit: 8 bytes in 1 blocks
==32086==   total heap usage: 91,101 allocs, 91,100 frees, 110,376,567 bytes allocated
==32086== 
==32086== LEAK SUMMARY:
==32086==    definitely lost: 0 bytes in 0 blocks
==32086==    indirectly lost: 0 bytes in 0 blocks
==32086==      possibly lost: 0 bytes in 0 blocks
==32086==    still reachable: 8 bytes in 1 blocks
==32086==         suppressed: 0 bytes in 0 blocks
==32086== Rerun with --leak-check=full to see details of leaked memory
==32086== 
==32086== For counts of detected and suppressed errors, rerun with: -v
==32086== Use --track-origins=yes to see where uninitialised values come from
==32086== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==32091== Memcheck, a memory error detector
==32091== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32091== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32091== Command: ./test ../../testfiles/1/ext_020.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==32091== 
==32091== Thread 3:
==32091== Conditional jump or move depends on uninitialised value(s)
==32091==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32091==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32091==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32091==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32091==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32091==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32091==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32091== 
==32091== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32091==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32091==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32091==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32091==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32091==  Address 0xac60c3e is 126 bytes inside a block of size 4,184 alloc'd
==32091==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32091==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32091==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32091== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.097000
	perf-misc  			0.550000
	perf-total		0.691000
hamsterdb
	filesize		65536
	mem-num-allocs		255
	mem-peak-bytes		13724
	mem-total-bytes		106584
	perf-cursor			0.029000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.118000
	perf-misc  			0.472000
	perf-total		0.619000
==32091== 
==32091== HEAP SUMMARY:
==32091==     in use at exit: 8 bytes in 1 blocks
==32091==   total heap usage: 1,990 allocs, 1,989 frees, 106,437,863 bytes allocated
==32091== 
==32091== LEAK SUMMARY:
==32091==    definitely lost: 0 bytes in 0 blocks
==32091==    indirectly lost: 0 bytes in 0 blocks
==32091==      possibly lost: 0 bytes in 0 blocks
==32091==    still reachable: 8 bytes in 1 blocks
==32091==         suppressed: 0 bytes in 0 blocks
==32091== Rerun with --leak-check=full to see details of leaked memory
==32091== 
==32091== For counts of detected and suppressed errors, rerun with: -v
==32091== Use --track-origins=yes to see where uninitialised values come from
==32091== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==32096== Memcheck, a memory error detector
==32096== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32096== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32096== Command: ./test ../../testfiles/2/ext_060.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==32096== 
==32096== Thread 3:
==32096== Conditional jump or move depends on uninitialised value(s)
==32096==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32096==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32096==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32096==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32096==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32096==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32096==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32096== 
==32096== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32096==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32096==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32096==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32096==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32096==  Address 0xb27beba is 410 bytes inside a block of size 4,184 alloc'd
==32096==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32096==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32096==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32096== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			42.290000
	perf-erase 			0.576000
	perf-find  			1.108000
	perf-insert			1.216000
	perf-misc  			0.464000
	perf-total		45.654000
hamsterdb
	filesize		65536
	mem-num-allocs		449246
	mem-peak-bytes		7615
	mem-total-bytes		11899227
	perf-cursor			31.773999
	perf-erase 			0.402000
	perf-find  			0.711000
	perf-insert			0.866000
	perf-misc  			0.370000
	perf-total		34.123000
==32096== 
==32096== HEAP SUMMARY:
==32096==     in use at exit: 8 bytes in 1 blocks
==32096==   total heap usage: 1,065,674 allocs, 1,065,673 frees, 142,533,470 bytes allocated
==32096== 
==32096== LEAK SUMMARY:
==32096==    definitely lost: 0 bytes in 0 blocks
==32096==    indirectly lost: 0 bytes in 0 blocks
==32096==      possibly lost: 0 bytes in 0 blocks
==32096==    still reachable: 8 bytes in 1 blocks
==32096==         suppressed: 0 bytes in 0 blocks
==32096== Rerun with --leak-check=full to see details of leaked memory
==32096== 
==32096== For counts of detected and suppressed errors, rerun with: -v
==32096== Use --track-origins=yes to see where uninitialised values come from
==32096== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==32101== Memcheck, a memory error detector
==32101== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32101== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32101== Command: ./test ../../testfiles/2/blb-001.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==32101== 
==32101== Thread 3:
==32101== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32101==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32101==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32101==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32101==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32101==  Address 0xac45b80 is 3,984 bytes inside a block of size 4,184 alloc'd
==32101==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32101==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32101== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.339000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.337000
	perf-misc  			0.539000
	perf-total		8.215000
hamsterdb
	filesize		50315264
	mem-num-allocs		12
	mem-peak-bytes		12
	mem-total-bytes		48
	perf-cursor			1.179000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.463000
	perf-misc  			0.488000
	perf-total		4.130000
==32101== 
==32101== HEAP SUMMARY:
==32101==     in use at exit: 8 bytes in 1 blocks
==32101==   total heap usage: 1,571 allocs, 1,570 frees, 268,420,656 bytes allocated
==32101== 
==32101== LEAK SUMMARY:
==32101==    definitely lost: 0 bytes in 0 blocks
==32101==    indirectly lost: 0 bytes in 0 blocks
==32101==      possibly lost: 0 bytes in 0 blocks
==32101==    still reachable: 8 bytes in 1 blocks
==32101==         suppressed: 0 bytes in 0 blocks
==32101== Rerun with --leak-check=full to see details of leaked memory
==32101== 
==32101== For counts of detected and suppressed errors, rerun with: -v
==32101== Use --track-origins=yes to see where uninitialised values come from
==32101== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --direct-access=1 --inmemorydb=1    
==32107== Memcheck, a memory error detector
==32107== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32107== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32107== Command: ./test ../../testfiles/1/45.tst --direct-access=1 --inmemorydb=1
==32107== 
==32107== Thread 3:
==32107== Conditional jump or move depends on uninitialised value(s)
==32107==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32107==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32107==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32107==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32107==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32107==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32107==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32107== 
==32107== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32107==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32107==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==  Address 0xae05cba is 538 bytes inside a block of size 8,280 alloc'd
==32107==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32107==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32107==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32107== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			10.327000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.988000
	perf-misc  			0.186000
	perf-total		11.501000
hamsterdb
	filesize		0
	mem-num-allocs		8128
	mem-peak-bytes		873627
	mem-total-bytes		884867
	perf-cursor			4.549000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.641000
	perf-misc  			0.090000
	perf-total		5.280000
==32107== 
==32107== HEAP SUMMARY:
==32107==     in use at exit: 8 bytes in 1 blocks
==32107==   total heap usage: 108,157 allocs, 108,156 frees, 111,195,782 bytes allocated
==32107== 
==32107== LEAK SUMMARY:
==32107==    definitely lost: 0 bytes in 0 blocks
==32107==    indirectly lost: 0 bytes in 0 blocks
==32107==      possibly lost: 0 bytes in 0 blocks
==32107==    still reachable: 8 bytes in 1 blocks
==32107==         suppressed: 0 bytes in 0 blocks
==32107== Rerun with --leak-check=full to see details of leaked memory
==32107== 
==32107== For counts of detected and suppressed errors, rerun with: -v
==32107== Use --track-origins=yes to see where uninitialised values come from
==32107== ERROR SUMMARY: 158 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --direct-access=1 --inmemorydb=1    
==32112== Memcheck, a memory error detector
==32112== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32112== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32112== Command: ./test ../../testfiles/1/220.tst --direct-access=1 --inmemorydb=1
==32112== 
==32112== Thread 3:
==32112== Conditional jump or move depends on uninitialised value(s)
==32112==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32112==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32112==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32112==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32112==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32112==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32112==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32112== 
==32112== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32112==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32112==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==  Address 0xaddccb2 is 162 bytes inside a block of size 8,280 alloc'd
==32112==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32112==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32112==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32112== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			5.937000
	perf-erase 			0.373000
	perf-find  			0.000000
	perf-insert			0.808000
	perf-misc  			0.140000
	perf-total		7.258000
hamsterdb
	filesize		0
	mem-num-allocs		4448
	mem-peak-bytes		384800
	mem-total-bytes		1085540
	perf-cursor			2.651000
	perf-erase 			0.187000
	perf-find  			0.000000
	perf-insert			0.325000
	perf-misc  			0.073000
	perf-total		3.236000
==32112== 
==32112== HEAP SUMMARY:
==32112==     in use at exit: 8 bytes in 1 blocks
==32112==   total heap usage: 92,559 allocs, 92,558 frees, 110,434,879 bytes allocated
==32112== 
==32112== LEAK SUMMARY:
==32112==    definitely lost: 0 bytes in 0 blocks
==32112==    indirectly lost: 0 bytes in 0 blocks
==32112==      possibly lost: 0 bytes in 0 blocks
==32112==    still reachable: 8 bytes in 1 blocks
==32112==         suppressed: 0 bytes in 0 blocks
==32112== Rerun with --leak-check=full to see details of leaked memory
==32112== 
==32112== For counts of detected and suppressed errors, rerun with: -v
==32112== Use --track-origins=yes to see where uninitialised values come from
==32112== ERROR SUMMARY: 101 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --direct-access=1 --inmemorydb=1    
==32117== Memcheck, a memory error detector
==32117== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32117== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32117== Command: ./test ../../testfiles/1/ext_020.tst --direct-access=1 --inmemorydb=1
==32117== 
==32117== Thread 3:
==32117== Conditional jump or move depends on uninitialised value(s)
==32117==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32117==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32117==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32117==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32117==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32117==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32117==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32117==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32117==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32117==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32117==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32117==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32117== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.037000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.086000
	perf-misc  			0.149000
	perf-total		0.272000
hamsterdb
	filesize		0
	mem-num-allocs		277
	mem-peak-bytes		56664
	mem-total-bytes		149524
	perf-cursor			0.025000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.052000
	perf-misc  			0.075000
	perf-total		0.152000
==32117== 
==32117== HEAP SUMMARY:
==32117==     in use at exit: 8 bytes in 1 blocks
==32117==   total heap usage: 1,731 allocs, 1,730 frees, 105,719,273 bytes allocated
==32117== 
==32117== LEAK SUMMARY:
==32117==    definitely lost: 0 bytes in 0 blocks
==32117==    indirectly lost: 0 bytes in 0 blocks
==32117==      possibly lost: 0 bytes in 0 blocks
==32117==    still reachable: 8 bytes in 1 blocks
==32117==         suppressed: 0 bytes in 0 blocks
==32117== Rerun with --leak-check=full to see details of leaked memory
==32117== 
==32117== For counts of detected and suppressed errors, rerun with: -v
==32117== Use --track-origins=yes to see where uninitialised values come from
==32117== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --direct-access=1 --inmemorydb=1    
==32122== Memcheck, a memory error detector
==32122== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32122== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32122== Command: ./test ../../testfiles/2/ext_060.tst --direct-access=1 --inmemorydb=1
==32122== 
==32122== Thread 3:
==32122== Conditional jump or move depends on uninitialised value(s)
==32122==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32122==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32122==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32122==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32122==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32122==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32122==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32122==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32122==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32122==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32122==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32122==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32122== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			41.776001
	perf-erase 			0.564000
	perf-find  			1.196000
	perf-insert			1.270000
	perf-misc  			0.143000
	perf-total		44.949000
hamsterdb
	filesize		0
	mem-num-allocs		449567
	mem-peak-bytes		56815
	mem-total-bytes		11948427
	perf-cursor			24.537999
	perf-erase 			0.395000
	perf-find  			0.719000
	perf-insert			0.825000
	perf-misc  			0.076000
	perf-total		26.553000
==32122== 
==32122== HEAP SUMMARY:
==32122==     in use at exit: 8 bytes in 1 blocks
==32122==   total heap usage: 1,065,497 allocs, 1,065,496 frees, 141,854,543 bytes allocated
==32122== 
==32122== LEAK SUMMARY:
==32122==    definitely lost: 0 bytes in 0 blocks
==32122==    indirectly lost: 0 bytes in 0 blocks
==32122==      possibly lost: 0 bytes in 0 blocks
==32122==    still reachable: 8 bytes in 1 blocks
==32122==         suppressed: 0 bytes in 0 blocks
==32122== Rerun with --leak-check=full to see details of leaked memory
==32122== 
==32122== For counts of detected and suppressed errors, rerun with: -v
==32122== Use --track-origins=yes to see where uninitialised values come from
==32122== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --direct-access=1 --inmemorydb=1    
==32133== Memcheck, a memory error detector
==32133== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32133== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32133== Command: ./test ../../testfiles/2/blb-001.tst --direct-access=1 --inmemorydb=1
==32133== 
==32133== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32133==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32133==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F0D8BC: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4EF6E4E: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F04EFC: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x426B2E: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:363)
==32133==    by 0x4206AD: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:128)
==32133==    by 0x41FD35: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:38)
==32133==  Address 0xac40ef8 is 600 bytes inside a block of size 8,280 alloc'd
==32133==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32133==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4E61BDD: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F0C29D: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F0CA05: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x4F06267: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32133==    by 0x425CB1: Berkeleydb::create_db() (berkeleydb.cpp:78)
==32133==    by 0x415284: Engine::create_db(bool) (engine.cpp:66)
==32133==    by 0x411811: Parser::process_line(unsigned int, Engine*) (parser.cpp:88)
==32133== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.749000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.002000
	perf-misc  			0.146000
	perf-total		5.897000
hamsterdb
	filesize		0
	mem-num-allocs		24
	mem-peak-bytes		49956004
	mem-total-bytes		49956040
	perf-cursor			3.398000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.958000
	perf-misc  			0.069000
	perf-total		5.425000
==32133== 
==32133== HEAP SUMMARY:
==32133==     in use at exit: 8 bytes in 1 blocks
==32133==   total heap usage: 1,226 allocs, 1,225 frees, 277,092,828 bytes allocated
==32133== 
==32133== LEAK SUMMARY:
==32133==    definitely lost: 0 bytes in 0 blocks
==32133==    indirectly lost: 0 bytes in 0 blocks
==32133==      possibly lost: 0 bytes in 0 blocks
==32133==    still reachable: 8 bytes in 1 blocks
==32133==         suppressed: 0 bytes in 0 blocks
==32133== Rerun with --leak-check=full to see details of leaked memory
==32133== 
==32133== For counts of detected and suppressed errors, rerun with: -v
==32133== Use --track-origins=yes to see where uninitialised values come from
==32133== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-transactions=tmp    
==32139== Memcheck, a memory error detector
==32139== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32139== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32139== Command: ./test ../../testfiles/1/45.tst --use-transactions=tmp
==32139== 
==32139== Thread 3:
==32139== Conditional jump or move depends on uninitialised value(s)
==32139==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32139==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32139==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32139==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32139==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32139==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32139==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32139== 
==32139== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32139==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32139==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==32139==    by 0x415D68: Engine::flush() (engine.cpp:315)
==32139==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==32139==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32139==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32139==  Address 0xad3b916 is 214 bytes inside a block of size 4,184 alloc'd
==32139==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32139==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32139==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32139== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			12.204000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.105000
	perf-misc  			1.127000
	perf-total		14.436000
hamsterdb
	filesize		966656
	mem-num-allocs		25562
	mem-peak-bytes		344
	mem-total-bytes		1538121
	perf-cursor			20.888001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			5.922000
	perf-misc  			1.215000
	perf-total		28.025000
==32139== 
==32139== HEAP SUMMARY:
==32139==     in use at exit: 8 bytes in 1 blocks
==32139==   total heap usage: 1,324,094 allocs, 1,324,093 frees, 313,108,621 bytes allocated
==32139== 
==32139== LEAK SUMMARY:
==32139==    definitely lost: 0 bytes in 0 blocks
==32139==    indirectly lost: 0 bytes in 0 blocks
==32139==      possibly lost: 0 bytes in 0 blocks
==32139==    still reachable: 8 bytes in 1 blocks
==32139==         suppressed: 0 bytes in 0 blocks
==32139== Rerun with --leak-check=full to see details of leaked memory
==32139== 
==32139== For counts of detected and suppressed errors, rerun with: -v
==32139== Use --track-origins=yes to see where uninitialised values come from
==32139== ERROR SUMMARY: 314 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-transactions=tmp    
==32148== Memcheck, a memory error detector
==32148== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32148== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32148== Command: ./test ../../testfiles/1/220.tst --use-transactions=tmp
==32148== 
==32148== Thread 3:
==32148== Conditional jump or move depends on uninitialised value(s)
==32148==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32148==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32148==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32148==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32148==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32148==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32148==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32148== 
==32148== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32148==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32148==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==  Address 0xad532ce is 158 bytes inside a block of size 4,184 alloc'd
==32148==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32148==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32148==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32148== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			7.188000
	perf-erase 			0.428000
	perf-find  			0.000000
	perf-insert			0.855000
	perf-misc  			0.338000
	perf-total		8.809000
hamsterdb
	filesize		442368
	mem-num-allocs		17879
	mem-peak-bytes		1240
	mem-total-bytes		1764416
	perf-cursor			9.776000
	perf-erase 			1.201000
	perf-find  			0.000000
	perf-insert			2.395000
	perf-misc  			0.518000
	perf-total		13.890000
==32148== 
==32148== HEAP SUMMARY:
==32148==     in use at exit: 8 bytes in 1 blocks
==32148==   total heap usage: 551,384 allocs, 551,383 frees, 186,105,123 bytes allocated
==32148== 
==32148== LEAK SUMMARY:
==32148==    definitely lost: 0 bytes in 0 blocks
==32148==    indirectly lost: 0 bytes in 0 blocks
==32148==      possibly lost: 0 bytes in 0 blocks
==32148==    still reachable: 8 bytes in 1 blocks
==32148==         suppressed: 0 bytes in 0 blocks
==32148== Rerun with --leak-check=full to see details of leaked memory
==32148== 
==32148== For counts of detected and suppressed errors, rerun with: -v
==32148== Use --track-origins=yes to see where uninitialised values come from
==32148== ERROR SUMMARY: 250 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-transactions=tmp    
==32153== Memcheck, a memory error detector
==32153== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32153== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32153== Command: ./test ../../testfiles/1/ext_020.tst --use-transactions=tmp
==32153== 
==32153== Thread 3:
==32153== Conditional jump or move depends on uninitialised value(s)
==32153==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32153==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32153==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32153==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32153==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32153==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32153==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32153== 
==32153== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32153==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32153==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32153==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32153==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32153==  Address 0xac6651e is 126 bytes inside a block of size 4,184 alloc'd
==32153==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32153==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32153==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32153== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.042000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.103000
	perf-misc  			0.291000
	perf-total		0.436000
hamsterdb
	filesize		65536
	mem-num-allocs		545
	mem-peak-bytes		13985
	mem-total-bytes		218997
	perf-cursor			0.081000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.175000
	perf-misc  			0.480000
	perf-total		0.736000
==32153== 
==32153== HEAP SUMMARY:
==32153==     in use at exit: 8 bytes in 1 blocks
==32153==   total heap usage: 2,714 allocs, 2,713 frees, 106,000,468 bytes allocated
==32153== 
==32153== LEAK SUMMARY:
==32153==    definitely lost: 0 bytes in 0 blocks
==32153==    indirectly lost: 0 bytes in 0 blocks
==32153==      possibly lost: 0 bytes in 0 blocks
==32153==    still reachable: 8 bytes in 1 blocks
==32153==         suppressed: 0 bytes in 0 blocks
==32153== Rerun with --leak-check=full to see details of leaked memory
==32153== 
==32153== For counts of detected and suppressed errors, rerun with: -v
==32153== Use --track-origins=yes to see where uninitialised values come from
==32153== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-transactions=tmp    
==32158== Memcheck, a memory error detector
==32158== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32158== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32158== Command: ./test ../../testfiles/2/ext_060.tst --use-transactions=tmp
==32158== 
==32158== Thread 3:
==32158== Conditional jump or move depends on uninitialised value(s)
==32158==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32158==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32158==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32158==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32158==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32158==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32158==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32158== 
==32158== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32158==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32158==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32158==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32158==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32158==  Address 0xb2e1faa is 410 bytes inside a block of size 4,184 alloc'd
==32158==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32158==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32158==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32158== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			42.284999
	perf-erase 			0.600000
	perf-find  			1.140000
	perf-insert			1.278000
	perf-misc  			0.240000
	perf-total		45.542998
hamsterdb
	filesize		65536
	mem-num-allocs		942518
	mem-peak-bytes		7844
	mem-total-bytes		25776286
	perf-cursor			84.386996
	perf-erase 			0.751000
	perf-find  			1.019000
	perf-insert			1.912000
	perf-misc  			0.577000
	perf-total		88.646001
==32158== 
==32158== HEAP SUMMARY:
==32158==     in use at exit: 8 bytes in 1 blocks
==32158==   total heap usage: 5,620,154 allocs, 5,620,153 frees, 841,961,692 bytes allocated
==32158== 
==32158== LEAK SUMMARY:
==32158==    definitely lost: 0 bytes in 0 blocks
==32158==    indirectly lost: 0 bytes in 0 blocks
==32158==      possibly lost: 0 bytes in 0 blocks
==32158==    still reachable: 8 bytes in 1 blocks
==32158==         suppressed: 0 bytes in 0 blocks
==32158== Rerun with --leak-check=full to see details of leaked memory
==32158== 
==32158== For counts of detected and suppressed errors, rerun with: -v
==32158== Use --track-origins=yes to see where uninitialised values come from
==32158== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-transactions=tmp    
==32164== Memcheck, a memory error detector
==32164== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32164== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32164== Command: ./test ../../testfiles/2/blb-001.tst --use-transactions=tmp
==32164== 
==32164== Thread 3:
==32164== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32164==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32164==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32164==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32164==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32164==  Address 0xac42210 is 3,984 bytes inside a block of size 4,184 alloc'd
==32164==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32164==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32164== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.443000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.499000
	perf-misc  			0.374000
	perf-total		7.316000
hamsterdb
	filesize		50315264
	mem-num-allocs		56
	mem-peak-bytes		40485972
	mem-total-bytes		49925116
	perf-cursor			1.073000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			5.185000
	perf-misc  			0.467000
	perf-total		6.725000
==32164== 
==32164== HEAP SUMMARY:
==32164==     in use at exit: 8 bytes in 1 blocks
==32164==   total heap usage: 1,540 allocs, 1,539 frees, 277,110,123 bytes allocated
==32164== 
==32164== LEAK SUMMARY:
==32164==    definitely lost: 0 bytes in 0 blocks
==32164==    indirectly lost: 0 bytes in 0 blocks
==32164==      possibly lost: 0 bytes in 0 blocks
==32164==    still reachable: 8 bytes in 1 blocks
==32164==         suppressed: 0 bytes in 0 blocks
==32164== Rerun with --leak-check=full to see details of leaked memory
==32164== 
==32164== For counts of detected and suppressed errors, rerun with: -v
==32164== Use --track-origins=yes to see where uninitialised values come from
==32164== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-transactions=10    
==32170== Memcheck, a memory error detector
==32170== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32170== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32170== Command: ./test ../../testfiles/1/45.tst --use-transactions=10
==32170== 
==32170== Thread 3:
==32170== Conditional jump or move depends on uninitialised value(s)
==32170==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32170==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32170==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32170==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32170==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32170==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32170==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32170== 
==32170== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32170==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32170==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==32170==    by 0x415D68: Engine::flush() (engine.cpp:315)
==32170==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==32170==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32170==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32170==  Address 0xad3c436 is 214 bytes inside a block of size 4,184 alloc'd
==32170==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32170==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32170==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32170== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			12.195000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.016000
	perf-misc  			1.273000
	perf-total		14.484000
hamsterdb
	filesize		966656
	mem-num-allocs		675284
	mem-peak-bytes		18446744073709551615
	mem-total-bytes		10636979
	perf-cursor			32.402999
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.165000
	perf-misc  			1.367000
	perf-total		34.935001
==32170== 
==32170== HEAP SUMMARY:
==32170==     in use at exit: 8 bytes in 1 blocks
==32170==   total heap usage: 2,935,437 allocs, 2,935,436 frees, 534,291,583 bytes allocated
==32170== 
==32170== LEAK SUMMARY:
==32170==    definitely lost: 0 bytes in 0 blocks
==32170==    indirectly lost: 0 bytes in 0 blocks
==32170==      possibly lost: 0 bytes in 0 blocks
==32170==    still reachable: 8 bytes in 1 blocks
==32170==         suppressed: 0 bytes in 0 blocks
==32170== Rerun with --leak-check=full to see details of leaked memory
==32170== 
==32170== For counts of detected and suppressed errors, rerun with: -v
==32170== Use --track-origins=yes to see where uninitialised values come from
==32170== ERROR SUMMARY: 314 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-transactions=10    
==32175== Memcheck, a memory error detector
==32175== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32175== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32175== Command: ./test ../../testfiles/1/220.tst --use-transactions=10
==32175== 
==32175== Thread 3:
==32175== Conditional jump or move depends on uninitialised value(s)
==32175==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32175==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32175==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32175==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32175==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32175==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32175==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32175== 
==32175== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32175==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32175==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==  Address 0xad5ffbe is 158 bytes inside a block of size 4,184 alloc'd
==32175==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32175==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32175==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32175== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.841000
	perf-erase 			0.400000
	perf-find  			0.000000
	perf-insert			0.802000
	perf-misc  			0.284000
	perf-total		8.327000
hamsterdb
	filesize		442368
	mem-num-allocs		118720
	mem-peak-bytes		18446744073709551603
	mem-total-bytes		3295904
	perf-cursor			11.253000
	perf-erase 			0.330000
	perf-find  			0.000000
	perf-insert			0.604000
	perf-misc  			0.499000
	perf-total		12.686000
==32175== 
==32175== HEAP SUMMARY:
==32175==     in use at exit: 8 bytes in 1 blocks
==32175==   total heap usage: 790,737 allocs, 790,736 frees, 225,148,398 bytes allocated
==32175== 
==32175== LEAK SUMMARY:
==32175==    definitely lost: 0 bytes in 0 blocks
==32175==    indirectly lost: 0 bytes in 0 blocks
==32175==      possibly lost: 0 bytes in 0 blocks
==32175==    still reachable: 8 bytes in 1 blocks
==32175==         suppressed: 0 bytes in 0 blocks
==32175== Rerun with --leak-check=full to see details of leaked memory
==32175== 
==32175== For counts of detected and suppressed errors, rerun with: -v
==32175== Use --track-origins=yes to see where uninitialised values come from
==32175== ERROR SUMMARY: 250 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-transactions=10    
==32183== Memcheck, a memory error detector
==32183== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32183== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32183== Command: ./test ../../testfiles/1/ext_020.tst --use-transactions=10
==32183== 
==32183== Thread 3:
==32183== Conditional jump or move depends on uninitialised value(s)
==32183==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32183==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32183==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32183==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32183==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32183==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32183==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32183== 
==32183== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32183==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32183==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32183==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32183==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32183==  Address 0xac4c82e is 126 bytes inside a block of size 4,184 alloc'd
==32183==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32183==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32183==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32183== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.055000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.099000
	perf-misc  			0.336000
	perf-total		0.490000
hamsterdb
	filesize		65536
	mem-num-allocs		686
	mem-peak-bytes		18446744073709551530
	mem-total-bytes		194264
	perf-cursor			0.080000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.039000
	perf-misc  			0.494000
	perf-total		0.613000
==32183== 
==32183== HEAP SUMMARY:
==32183==     in use at exit: 8 bytes in 1 blocks
==32183==   total heap usage: 2,878 allocs, 2,877 frees, 106,025,906 bytes allocated
==32183== 
==32183== LEAK SUMMARY:
==32183==    definitely lost: 0 bytes in 0 blocks
==32183==    indirectly lost: 0 bytes in 0 blocks
==32183==      possibly lost: 0 bytes in 0 blocks
==32183==    still reachable: 8 bytes in 1 blocks
==32183==         suppressed: 0 bytes in 0 blocks
==32183== Rerun with --leak-check=full to see details of leaked memory
==32183== 
==32183== For counts of detected and suppressed errors, rerun with: -v
==32183== Use --track-origins=yes to see where uninitialised values come from
==32183== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-transactions=10    
==32188== Memcheck, a memory error detector
==32188== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32188== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32188== Command: ./test ../../testfiles/2/ext_060.tst --use-transactions=10
==32188== 
==32188== Thread 3:
==32188== Conditional jump or move depends on uninitialised value(s)
==32188==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32188==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32188==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32188==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32188==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32188==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32188==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32188== 
==32188== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32188==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32188==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32188==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32188==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32188==  Address 0xb30ff1a is 410 bytes inside a block of size 4,184 alloc'd
==32188==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32188==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32188==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32188== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			43.197002
	perf-erase 			0.620000
	perf-find  			1.108000
	perf-insert			1.258000
	perf-misc  			0.299000
	perf-total		46.482002
hamsterdb
	filesize		65536
	mem-num-allocs		980993
	mem-peak-bytes		18446744073709551615
	mem-total-bytes		26614666
	perf-cursor			73.439003
	perf-erase 			0.717000
	perf-find  			0.864000
	perf-insert			1.464000
	perf-misc  			0.398000
	perf-total		76.882002
==32188== 
==32188== HEAP SUMMARY:
==32188==     in use at exit: 8 bytes in 1 blocks
==32188==   total heap usage: 4,373,881 allocs, 4,373,880 frees, 682,877,516 bytes allocated
==32188== 
==32188== LEAK SUMMARY:
==32188==    definitely lost: 0 bytes in 0 blocks
==32188==    indirectly lost: 0 bytes in 0 blocks
==32188==      possibly lost: 0 bytes in 0 blocks
==32188==    still reachable: 8 bytes in 1 blocks
==32188==         suppressed: 0 bytes in 0 blocks
==32188== Rerun with --leak-check=full to see details of leaked memory
==32188== 
==32188== For counts of detected and suppressed errors, rerun with: -v
==32188== Use --track-origins=yes to see where uninitialised values come from
==32188== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-transactions=10    
==32193== Memcheck, a memory error detector
==32193== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32193== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32193== Command: ./test ../../testfiles/2/blb-001.tst --use-transactions=10
==32193== 
==32193== Thread 3:
==32193== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32193==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32193==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32193==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32193==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32193==  Address 0xac42410 is 3,984 bytes inside a block of size 4,184 alloc'd
==32193==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32193==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32193== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.540000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.277000
	perf-misc  			0.326000
	perf-total		7.143000
hamsterdb
	filesize		50315264
	mem-num-allocs		73
	mem-peak-bytes		89361976
	mem-total-bytes		130896808
	perf-cursor			0.994000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.066000
	perf-misc  			0.471000
	perf-total		2.531000
==32193== 
==32193== HEAP SUMMARY:
==32193==     in use at exit: 8 bytes in 1 blocks
==32193==   total heap usage: 1,447 allocs, 1,446 frees, 358,065,762 bytes allocated
==32193== 
==32193== LEAK SUMMARY:
==32193==    definitely lost: 0 bytes in 0 blocks
==32193==    indirectly lost: 0 bytes in 0 blocks
==32193==      possibly lost: 0 bytes in 0 blocks
==32193==    still reachable: 8 bytes in 1 blocks
==32193==         suppressed: 0 bytes in 0 blocks
==32193== Rerun with --leak-check=full to see details of leaked memory
==32193== 
==32193== For counts of detected and suppressed errors, rerun with: -v
==32193== Use --track-origins=yes to see where uninitialised values come from
==32193== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-transactions=10000    
==32199== Memcheck, a memory error detector
==32199== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32199== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32199== Command: ./test ../../testfiles/1/45.tst --use-transactions=10000
==32199== 
==32199== Thread 3:
==32199== Conditional jump or move depends on uninitialised value(s)
==32199==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32199==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32199==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32199==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32199==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32199==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32199==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32199== 
==32199== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32199==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32199==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==32199==    by 0x415D68: Engine::flush() (engine.cpp:315)
==32199==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==32199==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32199==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32199==  Address 0xad36106 is 214 bytes inside a block of size 4,184 alloc'd
==32199==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32199==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32199==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32199== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.949000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.016000
	perf-misc  			1.218000
	perf-total		13.183000
hamsterdb
	filesize		966656
	mem-num-allocs		25562
	mem-peak-bytes		1526944
	mem-total-bytes		1538180
	perf-cursor			6.829000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.212000
	perf-misc  			3.097000
	perf-total		11.138000
==32199== 
==32199== HEAP SUMMARY:
==32199==     in use at exit: 8 bytes in 1 blocks
==32199==   total heap usage: 125,801 allocs, 125,800 frees, 112,026,834 bytes allocated
==32199== 
==32199== LEAK SUMMARY:
==32199==    definitely lost: 0 bytes in 0 blocks
==32199==    indirectly lost: 0 bytes in 0 blocks
==32199==      possibly lost: 0 bytes in 0 blocks
==32199==    still reachable: 8 bytes in 1 blocks
==32199==         suppressed: 0 bytes in 0 blocks
==32199== Rerun with --leak-check=full to see details of leaked memory
==32199== 
==32199== For counts of detected and suppressed errors, rerun with: -v
==32199== Use --track-origins=yes to see where uninitialised values come from
==32199== ERROR SUMMARY: 314 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-transactions=10000    
==32205== Memcheck, a memory error detector
==32205== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32205== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32205== Command: ./test ../../testfiles/1/220.tst --use-transactions=10000
==32205== 
==32205== Thread 3:
==32205== Conditional jump or move depends on uninitialised value(s)
==32205==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32205==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32205==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32205==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32205==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32205==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32205==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32205== 
==32205== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32205==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32205==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==  Address 0xad3b64e is 158 bytes inside a block of size 4,184 alloc'd
==32205==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32205==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32205==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32205== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.875000
	perf-erase 			0.415000
	perf-find  			0.000000
	perf-insert			0.799000
	perf-misc  			0.376000
	perf-total		8.465000
hamsterdb
	filesize		442368
	mem-num-allocs		9646
	mem-peak-bytes		1441858
	mem-total-bytes		1452658
	perf-cursor			3.477000
	perf-erase 			0.253000
	perf-find  			0.000000
	perf-insert			0.433000
	perf-misc  			1.726000
	perf-total		5.889000
==32205== 
==32205== HEAP SUMMARY:
==32205==     in use at exit: 8 bytes in 1 blocks
==32205==   total heap usage: 97,950 allocs, 97,949 frees, 111,133,297 bytes allocated
==32205== 
==32205== LEAK SUMMARY:
==32205==    definitely lost: 0 bytes in 0 blocks
==32205==    indirectly lost: 0 bytes in 0 blocks
==32205==      possibly lost: 0 bytes in 0 blocks
==32205==    still reachable: 8 bytes in 1 blocks
==32205==         suppressed: 0 bytes in 0 blocks
==32205== Rerun with --leak-check=full to see details of leaked memory
==32205== 
==32205== For counts of detected and suppressed errors, rerun with: -v
==32205== Use --track-origins=yes to see where uninitialised values come from
==32205== ERROR SUMMARY: 250 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-transactions=10000    
==32210== Memcheck, a memory error detector
==32210== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32210== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32210== Command: ./test ../../testfiles/1/ext_020.tst --use-transactions=10000
==32210== 
==32210== Thread 3:
==32210== Conditional jump or move depends on uninitialised value(s)
==32210==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32210==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32210==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32210==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32210==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32210==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32210==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32210== 
==32210== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32210==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32210==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32210==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32210==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32210==  Address 0xac4c82e is 126 bytes inside a block of size 4,184 alloc'd
==32210==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32210==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32210==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32210== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.042000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.107000
	perf-misc  			0.372000
	perf-total		0.521000
hamsterdb
	filesize		65536
	mem-num-allocs		126
	mem-peak-bytes		35974
	mem-total-bytes		42014
	perf-cursor			0.025000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.042000
	perf-misc  			0.581000
	perf-total		0.648000
==32210== 
==32210== HEAP SUMMARY:
==32210==     in use at exit: 8 bytes in 1 blocks
==32210==   total heap usage: 1,628 allocs, 1,627 frees, 105,709,265 bytes allocated
==32210== 
==32210== LEAK SUMMARY:
==32210==    definitely lost: 0 bytes in 0 blocks
==32210==    indirectly lost: 0 bytes in 0 blocks
==32210==      possibly lost: 0 bytes in 0 blocks
==32210==    still reachable: 8 bytes in 1 blocks
==32210==         suppressed: 0 bytes in 0 blocks
==32210== Rerun with --leak-check=full to see details of leaked memory
==32210== 
==32210== For counts of detected and suppressed errors, rerun with: -v
==32210== Use --track-origins=yes to see where uninitialised values come from
==32210== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-transactions=10000    
==32215== Memcheck, a memory error detector
==32215== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32215== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32215== Command: ./test ../../testfiles/2/ext_060.tst --use-transactions=10000
==32215== 
==32215== Thread 3:
==32215== Conditional jump or move depends on uninitialised value(s)
==32215==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32215==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32215==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32215==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32215==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32215==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32215==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32215== 
==32215== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32215==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32215==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32215==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32215==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32215==  Address 0xb26e70a is 410 bytes inside a block of size 4,184 alloc'd
==32215==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32215==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32215==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32215== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			43.200999
	perf-erase 			0.565000
	perf-find  			1.146000
	perf-insert			1.267000
	perf-misc  			0.290000
	perf-total		46.469001
hamsterdb
	filesize		65536
	mem-num-allocs		702142
	mem-peak-bytes		101256
	mem-total-bytes		19282389
	perf-cursor			61.213999
	perf-erase 			0.644000
	perf-find  			0.727000
	perf-insert			1.188000
	perf-misc  			0.483000
	perf-total		64.256000
==32215== 
==32215== HEAP SUMMARY:
==32215==     in use at exit: 8 bytes in 1 blocks
==32215==   total heap usage: 3,295,718 allocs, 3,295,717 frees, 523,850,861 bytes allocated
==32215== 
==32215== LEAK SUMMARY:
==32215==    definitely lost: 0 bytes in 0 blocks
==32215==    indirectly lost: 0 bytes in 0 blocks
==32215==      possibly lost: 0 bytes in 0 blocks
==32215==    still reachable: 8 bytes in 1 blocks
==32215==         suppressed: 0 bytes in 0 blocks
==32215== Rerun with --leak-check=full to see details of leaked memory
==32215== 
==32215== For counts of detected and suppressed errors, rerun with: -v
==32215== Use --track-origins=yes to see where uninitialised values come from
==32215== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-transactions=10000    
==32226== Memcheck, a memory error detector
==32226== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32226== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32226== Command: ./test ../../testfiles/2/blb-001.tst --use-transactions=10000
==32226== 
==32226== Thread 3:
==32226== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32226==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32226==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32226==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32226==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32226==  Address 0xac42250 is 3,984 bytes inside a block of size 4,184 alloc'd
==32226==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32226==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32226== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.597000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.199000
	perf-misc  			0.375000
	perf-total		8.171000
hamsterdb
	filesize		50315264
	mem-num-allocs		53
	mem-peak-bytes		90410756
	mem-total-bytes		90410792
	perf-cursor			0.884000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.451000
	perf-misc  			0.701000
	perf-total		2.036000
==32226== 
==32226== HEAP SUMMARY:
==32226==     in use at exit: 8 bytes in 1 blocks
==32226==   total heap usage: 1,354 allocs, 1,353 frees, 317,565,862 bytes allocated
==32226== 
==32226== LEAK SUMMARY:
==32226==    definitely lost: 0 bytes in 0 blocks
==32226==    indirectly lost: 0 bytes in 0 blocks
==32226==      possibly lost: 0 bytes in 0 blocks
==32226==    still reachable: 8 bytes in 1 blocks
==32226==         suppressed: 0 bytes in 0 blocks
==32226== Rerun with --leak-check=full to see details of leaked memory
==32226== 
==32226== For counts of detected and suppressed errors, rerun with: -v
==32226== Use --track-origins=yes to see where uninitialised values come from
==32226== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-transactions=all    
==32232== Memcheck, a memory error detector
==32232== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32232== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32232== Command: ./test ../../testfiles/1/45.tst --use-transactions=all
==32232== 
==32232== Thread 3:
==32232== Conditional jump or move depends on uninitialised value(s)
==32232==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32232==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32232==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32232==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32232==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32232==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32232==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32232== 
==32232== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32232==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32232==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F04146: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4261CF: Berkeleydb::flush() (berkeleydb.cpp:180)
==32232==    by 0x415D68: Engine::flush() (engine.cpp:315)
==32232==    by 0x411C64: Parser::process_line(unsigned int, Engine*) (parser.cpp:153)
==32232==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32232==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32232==  Address 0xad36676 is 214 bytes inside a block of size 4,184 alloc'd
==32232==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32232==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32232==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32232== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.113000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.985000
	perf-misc  			1.073000
	perf-total		13.171000
hamsterdb
	filesize		966656
	mem-num-allocs		25562
	mem-peak-bytes		1526944
	mem-total-bytes		1538180
	perf-cursor			6.913000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.208000
	perf-misc  			2.994000
	perf-total		11.115000
==32232== 
==32232== HEAP SUMMARY:
==32232==     in use at exit: 8 bytes in 1 blocks
==32232==   total heap usage: 125,801 allocs, 125,800 frees, 112,026,834 bytes allocated
==32232== 
==32232== LEAK SUMMARY:
==32232==    definitely lost: 0 bytes in 0 blocks
==32232==    indirectly lost: 0 bytes in 0 blocks
==32232==      possibly lost: 0 bytes in 0 blocks
==32232==    still reachable: 8 bytes in 1 blocks
==32232==         suppressed: 0 bytes in 0 blocks
==32232== Rerun with --leak-check=full to see details of leaked memory
==32232== 
==32232== For counts of detected and suppressed errors, rerun with: -v
==32232== Use --track-origins=yes to see where uninitialised values come from
==32232== ERROR SUMMARY: 314 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-transactions=all    
==32237== Memcheck, a memory error detector
==32237== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32237== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32237== Command: ./test ../../testfiles/1/220.tst --use-transactions=all
==32237== 
==32237== Thread 3:
==32237== Conditional jump or move depends on uninitialised value(s)
==32237==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32237==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32237==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32237==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32237==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32237==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32237==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32237== 
==32237== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32237==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32237==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F46506: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==  Address 0xad3b64e is 158 bytes inside a block of size 4,184 alloc'd
==32237==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32237==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4E72390: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32237==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32237== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.748000
	perf-erase 			0.411000
	perf-find  			0.000000
	perf-insert			0.820000
	perf-misc  			0.323000
	perf-total		8.302000
hamsterdb
	filesize		442368
	mem-num-allocs		9646
	mem-peak-bytes		1441858
	mem-total-bytes		1452658
	perf-cursor			3.575000
	perf-erase 			0.234000
	perf-find  			0.000000
	perf-insert			0.440000
	perf-misc  			1.714000
	perf-total		5.963000
==32237== 
==32237== HEAP SUMMARY:
==32237==     in use at exit: 8 bytes in 1 blocks
==32237==   total heap usage: 97,950 allocs, 97,949 frees, 111,133,297 bytes allocated
==32237== 
==32237== LEAK SUMMARY:
==32237==    definitely lost: 0 bytes in 0 blocks
==32237==    indirectly lost: 0 bytes in 0 blocks
==32237==      possibly lost: 0 bytes in 0 blocks
==32237==    still reachable: 8 bytes in 1 blocks
==32237==         suppressed: 0 bytes in 0 blocks
==32237== Rerun with --leak-check=full to see details of leaked memory
==32237== 
==32237== For counts of detected and suppressed errors, rerun with: -v
==32237== Use --track-origins=yes to see where uninitialised values come from
==32237== ERROR SUMMARY: 250 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-transactions=all    
==32242== Memcheck, a memory error detector
==32242== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32242== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32242== Command: ./test ../../testfiles/1/ext_020.tst --use-transactions=all
==32242== 
==32242== Thread 3:
==32242== Conditional jump or move depends on uninitialised value(s)
==32242==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32242==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32242==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32242==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32242==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32242==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32242==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32242== 
==32242== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32242==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32242==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32242==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32242==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32242==  Address 0xac4c82e is 126 bytes inside a block of size 4,184 alloc'd
==32242==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32242==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32242==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32242== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.042000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.097000
	perf-misc  			0.347000
	perf-total		0.486000
hamsterdb
	filesize		65536
	mem-num-allocs		126
	mem-peak-bytes		35974
	mem-total-bytes		42014
	perf-cursor			0.029000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.037000
	perf-misc  			0.607000
	perf-total		0.673000
==32242== 
==32242== HEAP SUMMARY:
==32242==     in use at exit: 8 bytes in 1 blocks
==32242==   total heap usage: 1,628 allocs, 1,627 frees, 105,709,265 bytes allocated
==32242== 
==32242== LEAK SUMMARY:
==32242==    definitely lost: 0 bytes in 0 blocks
==32242==    indirectly lost: 0 bytes in 0 blocks
==32242==      possibly lost: 0 bytes in 0 blocks
==32242==    still reachable: 8 bytes in 1 blocks
==32242==         suppressed: 0 bytes in 0 blocks
==32242== Rerun with --leak-check=full to see details of leaked memory
==32242== 
==32242== For counts of detected and suppressed errors, rerun with: -v
==32242== Use --track-origins=yes to see where uninitialised values come from
==32242== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-transactions=all    
==32247== Memcheck, a memory error detector
==32247== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32247== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32247== Command: ./test ../../testfiles/2/ext_060.tst --use-transactions=all
==32247== 
==32247== Thread 3:
==32247== Conditional jump or move depends on uninitialised value(s)
==32247==    at 0x4E6E004: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4E5ED3B: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32247==    by 0x4156F1: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:175)
==32247==    by 0x4119EB: Parser::process_line(unsigned int, Engine*) (parser.cpp:118)
==32247==    by 0x418DC5: Thread::run() (thread.hpp:73)
==32247==    by 0x41B737: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==32247==    by 0x41B6A7: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==32247==    by 0x41B656: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==32247== 
==32247== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32247==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32247==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32247==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32247==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32247==  Address 0xb26e70a is 410 bytes inside a block of size 4,184 alloc'd
==32247==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32247==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F0AAA0: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4E728E7: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4E5ECAC: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32247==    by 0x4263C1: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:214)
==32247== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			42.745000
	perf-erase 			0.627000
	perf-find  			1.084000
	perf-insert			1.222000
	perf-misc  			0.443000
	perf-total		46.121001
hamsterdb
	filesize		65536
	mem-num-allocs		16660
	mem-peak-bytes		101256
	mem-total-bytes		743378
	perf-cursor			28.401000
	perf-erase 			0.562000
	perf-find  			0.444000
	perf-insert			0.489000
	perf-misc  			0.771000
	perf-total		30.667000
==32247== 
==32247== HEAP SUMMARY:
==32247==     in use at exit: 8 bytes in 1 blocks
==32247==   total heap usage: 632,639 allocs, 632,638 frees, 125,985,923 bytes allocated
==32247== 
==32247== LEAK SUMMARY:
==32247==    definitely lost: 0 bytes in 0 blocks
==32247==    indirectly lost: 0 bytes in 0 blocks
==32247==      possibly lost: 0 bytes in 0 blocks
==32247==    still reachable: 8 bytes in 1 blocks
==32247==         suppressed: 0 bytes in 0 blocks
==32247== Rerun with --leak-check=full to see details of leaked memory
==32247== 
==32247== For counts of detected and suppressed errors, rerun with: -v
==32247== Use --track-origins=yes to see where uninitialised values come from
==32247== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-transactions=all    
==32252== Memcheck, a memory error detector
==32252== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==32252== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==32252== Command: ./test ../../testfiles/2/blb-001.tst --use-transactions=all
==32252== 
==32252== Thread 3:
==32252== Syscall param pwrite64(buf) points to uninitialised byte(s)
==32252==    at 0x53CF6C3: ??? (syscall-template.S:82)
==32252==    by 0x4F5A1B7: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4F46F23: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4F47360: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4F568C5: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4EF4876: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4EF24D7: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4EF2733: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4F02604: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x42606E: Berkeleydb::close_env() (berkeleydb.cpp:145)
==32252==    by 0x415CC0: Engine::close_env() (engine.cpp:302)
==32252==    by 0x411C2F: Parser::process_line(unsigned int, Engine*) (parser.cpp:150)
==32252==  Address 0xac42410 is 3,984 bytes inside a block of size 4,184 alloc'd
==32252==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32252==    by 0x4F57A34: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4F24BE8: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4F45B8B: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4F48E29: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4E6E369: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4E6EA93: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4E5AA75: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4E5ED94: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4EF6418: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4EF401F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252==    by 0x4F05D8A: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==32252== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.519000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.093000
	perf-misc  			0.303000
	perf-total		6.915000
hamsterdb
	filesize		50315264
	mem-num-allocs		53
	mem-peak-bytes		90410756
	mem-total-bytes		90410792
	perf-cursor			0.909000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.708000
	perf-misc  			0.734000
	perf-total		3.351000
==32252== 
==32252== HEAP SUMMARY:
==32252==     in use at exit: 8 bytes in 1 blocks
==32252==   total heap usage: 1,354 allocs, 1,353 frees, 317,565,862 bytes allocated
==32252== 
==32252== LEAK SUMMARY:
==32252==    definitely lost: 0 bytes in 0 blocks
==32252==    indirectly lost: 0 bytes in 0 blocks
==32252==      possibly lost: 0 bytes in 0 blocks
==32252==    still reachable: 8 bytes in 1 blocks
==32252==         suppressed: 0 bytes in 0 blocks
==32252== Rerun with --leak-check=full to see details of leaked memory
==32252== 
==32252== For counts of detected and suppressed errors, rerun with: -v
==32252== Use --track-origins=yes to see where uninitialised values come from
==32252== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


