running ../../testfiles/1/45.tst --reopen=1    
==2751== Memcheck, a memory error detector
==2751== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==2751== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==2751== Command: ./test ../../testfiles/1/45.tst --reopen=1
==2751== 
==2751== Thread 3:
==2751== Conditional jump or move depends on uninitialised value(s)
==2751==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==2751==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==2751==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==2751==    by 0x418B33: Thread::run() (thread.hpp:90)
==2751==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==2751==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==2751==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==2751== 
==2751== Syscall param pwrite64(buf) points to uninitialised byte(s)
==2751==    at 0x53D06C3: ??? (syscall-template.S:82)
==2751==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==2751==    by 0x415C78: Engine::flush() (engine.cpp:314)
==2751==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==2751==    by 0x418B33: Thread::run() (thread.hpp:90)
==2751==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==2751==  Address 0xad41706 is 214 bytes inside a block of size 4,184 alloc'd
==2751==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2751==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==2751==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==2751== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.423000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.565000
	perf-misc  			0.413000
	perf-total		11.401000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.775000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.397000
	perf-misc  			0.275000
	perf-total		6.447000
==2751== 
==2751== HEAP SUMMARY:
==2751==     in use at exit: 16 bytes in 2 blocks
==2751==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==2751== 
==2751== LEAK SUMMARY:
==2751==    definitely lost: 8 bytes in 1 blocks
==2751==    indirectly lost: 0 bytes in 0 blocks
==2751==      possibly lost: 0 bytes in 0 blocks
==2751==    still reachable: 0 bytes in 0 blocks
==2751==         suppressed: 8 bytes in 1 blocks
==2751== Rerun with --leak-check=full to see details of leaked memory
==2751== 
==2751== For counts of detected and suppressed errors, rerun with: -v
==2751== Use --track-origins=yes to see where uninitialised values come from
==2751== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --reopen=1    
==3352== Memcheck, a memory error detector
==3352== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3352== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3352== Command: ./test ../../testfiles/1/220.tst --reopen=1
==3352== 
==3352== Thread 3:
==3352== Conditional jump or move depends on uninitialised value(s)
==3352==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3352==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3352==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3352==    by 0x418B33: Thread::run() (thread.hpp:90)
==3352==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3352==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3352==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3352== 
==3352== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3352==    at 0x53D06C3: ??? (syscall-template.S:82)
==3352==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==  Address 0xaede272 is 130 bytes inside a block of size 4,184 alloc'd
==3352==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3352==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3352==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3352== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			5.704000
	perf-erase 			0.236000
	perf-find  			0.000000
	perf-insert			0.407000
	perf-misc  			0.279000
	perf-total		6.626000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.309000
	perf-erase 			0.088000
	perf-find  			0.000000
	perf-insert			0.267000
	perf-misc  			0.321000
	perf-total		2.985000
==3352== 
==3352== HEAP SUMMARY:
==3352==     in use at exit: 16 bytes in 2 blocks
==3352==   total heap usage: 88,586 allocs, 88,584 frees, 110,785,442 bytes allocated
==3352== 
==3352== LEAK SUMMARY:
==3352==    definitely lost: 8 bytes in 1 blocks
==3352==    indirectly lost: 0 bytes in 0 blocks
==3352==      possibly lost: 0 bytes in 0 blocks
==3352==    still reachable: 0 bytes in 0 blocks
==3352==         suppressed: 8 bytes in 1 blocks
==3352== Rerun with --leak-check=full to see details of leaked memory
==3352== 
==3352== For counts of detected and suppressed errors, rerun with: -v
==3352== Use --track-origins=yes to see where uninitialised values come from
==3352== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --reopen=1    
==3357== Memcheck, a memory error detector
==3357== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3357== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3357== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1
==3357== 
==3357== Thread 3:
==3357== Conditional jump or move depends on uninitialised value(s)
==3357==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3357==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3357==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3357==    by 0x418B33: Thread::run() (thread.hpp:90)
==3357==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3357==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3357==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3357== 
==3357== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3357==    at 0x53D06C3: ??? (syscall-template.S:82)
==3357==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3357==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3357==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3357==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==3357==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3357==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3357==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3357== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.033000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.082000
	perf-misc  			0.296000
	perf-total		0.411000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.026000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.070000
	perf-misc  			0.167000
	perf-total		0.263000
==3357== 
==3357== HEAP SUMMARY:
==3357==     in use at exit: 16 bytes in 2 blocks
==3357==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==3357== 
==3357== LEAK SUMMARY:
==3357==    definitely lost: 8 bytes in 1 blocks
==3357==    indirectly lost: 0 bytes in 0 blocks
==3357==      possibly lost: 0 bytes in 0 blocks
==3357==    still reachable: 0 bytes in 0 blocks
==3357==         suppressed: 8 bytes in 1 blocks
==3357== Rerun with --leak-check=full to see details of leaked memory
==3357== 
==3357== For counts of detected and suppressed errors, rerun with: -v
==3357== Use --track-origins=yes to see where uninitialised values come from
==3357== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --reopen=1    
==3362== Memcheck, a memory error detector
==3362== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3362== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3362== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1
==3362== 
==3362== Thread 3:
==3362== Conditional jump or move depends on uninitialised value(s)
==3362==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3362==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3362==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3362==    by 0x418B33: Thread::run() (thread.hpp:90)
==3362==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3362==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3362==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3362== 
==3362== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3362==    at 0x53D06C3: ??? (syscall-template.S:82)
==3362==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3362==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3362==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3362==  Address 0xb28c81a is 410 bytes inside a block of size 4,184 alloc'd
==3362==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3362==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3362==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3362== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.241000
	perf-erase 			0.477000
	perf-find  			0.932000
	perf-insert			1.039000
	perf-misc  			0.311000
	perf-total		40.000000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.402000
	perf-erase 			0.255000
	perf-find  			0.464000
	perf-insert			0.610000
	perf-misc  			0.175000
	perf-total		25.906000
==3362== 
==3362== HEAP SUMMARY:
==3362==     in use at exit: 16 bytes in 2 blocks
==3362==   total heap usage: 1,065,294 allocs, 1,065,292 frees, 139,480,257 bytes allocated
==3362== 
==3362== LEAK SUMMARY:
==3362==    definitely lost: 8 bytes in 1 blocks
==3362==    indirectly lost: 0 bytes in 0 blocks
==3362==      possibly lost: 0 bytes in 0 blocks
==3362==    still reachable: 0 bytes in 0 blocks
==3362==         suppressed: 8 bytes in 1 blocks
==3362== Rerun with --leak-check=full to see details of leaked memory
==3362== 
==3362== For counts of detected and suppressed errors, rerun with: -v
==3362== Use --track-origins=yes to see where uninitialised values come from
==3362== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --reopen=1    
==3372== Memcheck, a memory error detector
==3372== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3372== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3372== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1
==3372== 
==3372== Thread 3:
==3372== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3372==    at 0x53D06C3: ??? (syscall-template.S:82)
==3372==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3372==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3372==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3372==  Address 0xac541a0 is 3,984 bytes inside a block of size 4,184 alloc'd
==3372==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3372==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3372== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.259000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.412000
	perf-misc  			0.313000
	perf-total		7.984000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.101000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.324000
	perf-misc  			0.232000
	perf-total		3.657000
==3372== 
==3372== HEAP SUMMARY:
==3372==     in use at exit: 16 bytes in 2 blocks
==3372==   total heap usage: 1,585 allocs, 1,583 frees, 268,965,044 bytes allocated
==3372== 
==3372== LEAK SUMMARY:
==3372==    definitely lost: 8 bytes in 1 blocks
==3372==    indirectly lost: 0 bytes in 0 blocks
==3372==      possibly lost: 0 bytes in 0 blocks
==3372==    still reachable: 0 bytes in 0 blocks
==3372==         suppressed: 8 bytes in 1 blocks
==3372== Rerun with --leak-check=full to see details of leaked memory
==3372== 
==3372== For counts of detected and suppressed errors, rerun with: -v
==3372== Use --track-origins=yes to see where uninitialised values come from
==3372== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --overwrite=1 --reopen=1    
==3378== Memcheck, a memory error detector
==3378== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3378== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3378== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --reopen=1
==3378== 
==3378== Thread 3:
==3378== Conditional jump or move depends on uninitialised value(s)
==3378==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3378==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3378==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3378==    by 0x418B33: Thread::run() (thread.hpp:90)
==3378==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3378==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3378==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3378== 
==3378== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3378==    at 0x53D06C3: ??? (syscall-template.S:82)
==3378==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3378==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3378==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3378==    by 0x418B33: Thread::run() (thread.hpp:90)
==3378==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3378==  Address 0xad41416 is 214 bytes inside a block of size 4,184 alloc'd
==3378==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3378==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3378==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3378== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.232001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.845000
	perf-misc  			0.412000
	perf-total		11.489000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.852000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.730000
	perf-misc  			0.326000
	perf-total		6.908000
==3378== 
==3378== HEAP SUMMARY:
==3378==     in use at exit: 16 bytes in 2 blocks
==3378==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==3378== 
==3378== LEAK SUMMARY:
==3378==    definitely lost: 8 bytes in 1 blocks
==3378==    indirectly lost: 0 bytes in 0 blocks
==3378==      possibly lost: 0 bytes in 0 blocks
==3378==    still reachable: 0 bytes in 0 blocks
==3378==         suppressed: 8 bytes in 1 blocks
==3378== Rerun with --leak-check=full to see details of leaked memory
==3378== 
==3378== For counts of detected and suppressed errors, rerun with: -v
==3378== Use --track-origins=yes to see where uninitialised values come from
==3378== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --overwrite=1 --reopen=1    
==3383== Memcheck, a memory error detector
==3383== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3383== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3383== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --reopen=1
==3383== 
==3383== Thread 3:
==3383== Conditional jump or move depends on uninitialised value(s)
==3383==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3383==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3383==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3383==    by 0x418B33: Thread::run() (thread.hpp:90)
==3383==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3383==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3383==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3383== 
==3383== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3383==    at 0x53D06C3: ??? (syscall-template.S:82)
==3383==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==3383==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3383==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3383==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3383== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.204000
	perf-erase 			0.354000
	perf-find  			0.000000
	perf-insert			0.650000
	perf-misc  			0.383000
	perf-total		7.591000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.674000
	perf-erase 			0.135000
	perf-find  			0.000000
	perf-insert			0.386000
	perf-misc  			0.303000
	perf-total		3.498000
==3383== 
==3383== HEAP SUMMARY:
==3383==     in use at exit: 16 bytes in 2 blocks
==3383==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==3383== 
==3383== LEAK SUMMARY:
==3383==    definitely lost: 8 bytes in 1 blocks
==3383==    indirectly lost: 0 bytes in 0 blocks
==3383==      possibly lost: 0 bytes in 0 blocks
==3383==    still reachable: 0 bytes in 0 blocks
==3383==         suppressed: 8 bytes in 1 blocks
==3383== Rerun with --leak-check=full to see details of leaked memory
==3383== 
==3383== For counts of detected and suppressed errors, rerun with: -v
==3383== Use --track-origins=yes to see where uninitialised values come from
==3383== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1    
==3389== Memcheck, a memory error detector
==3389== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3389== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3389== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1
==3389== 
==3389== Thread 3:
==3389== Conditional jump or move depends on uninitialised value(s)
==3389==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3389==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3389==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3389==    by 0x418B33: Thread::run() (thread.hpp:90)
==3389==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3389==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3389==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3389== 
==3389== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3389==    at 0x53D06C3: ??? (syscall-template.S:82)
==3389==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3389==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3389==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3389==  Address 0xac7356e is 126 bytes inside a block of size 4,184 alloc'd
==3389==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3389==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3389==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3389== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.046000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.111000
	perf-misc  			0.354000
	perf-total		0.511000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.030000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.137000
	perf-misc  			0.238000
	perf-total		0.405000
==3389== 
==3389== HEAP SUMMARY:
==3389==     in use at exit: 16 bytes in 2 blocks
==3389==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==3389== 
==3389== LEAK SUMMARY:
==3389==    definitely lost: 8 bytes in 1 blocks
==3389==    indirectly lost: 0 bytes in 0 blocks
==3389==      possibly lost: 0 bytes in 0 blocks
==3389==    still reachable: 0 bytes in 0 blocks
==3389==         suppressed: 8 bytes in 1 blocks
==3389== Rerun with --leak-check=full to see details of leaked memory
==3389== 
==3389== For counts of detected and suppressed errors, rerun with: -v
==3389== Use --track-origins=yes to see where uninitialised values come from
==3389== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1    
==3394== Memcheck, a memory error detector
==3394== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3394== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3394== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1
==3394== 
==3394== Thread 3:
==3394== Conditional jump or move depends on uninitialised value(s)
==3394==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3394==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3394==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3394==    by 0x418B33: Thread::run() (thread.hpp:90)
==3394==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3394==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3394==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3394== 
==3394== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3394==    at 0x53D06C3: ??? (syscall-template.S:82)
==3394==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3394==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3394==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3394==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==3394==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3394==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3394==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3394== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.135999
	perf-erase 			0.551000
	perf-find  			1.053000
	perf-insert			1.597000
	perf-misc  			0.343000
	perf-total		40.680002
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.348000
	perf-erase 			0.294000
	perf-find  			0.505000
	perf-insert			0.977000
	perf-misc  			0.288000
	perf-total		26.411999
==3394== 
==3394== HEAP SUMMARY:
==3394==     in use at exit: 16 bytes in 2 blocks
==3394==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==3394== 
==3394== LEAK SUMMARY:
==3394==    definitely lost: 8 bytes in 1 blocks
==3394==    indirectly lost: 0 bytes in 0 blocks
==3394==      possibly lost: 0 bytes in 0 blocks
==3394==    still reachable: 0 bytes in 0 blocks
==3394==         suppressed: 8 bytes in 1 blocks
==3394== Rerun with --leak-check=full to see details of leaked memory
==3394== 
==3394== For counts of detected and suppressed errors, rerun with: -v
==3394== Use --track-origins=yes to see where uninitialised values come from
==3394== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1    
==3399== Memcheck, a memory error detector
==3399== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3399== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3399== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1
==3399== 
==3399== Thread 3:
==3399== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3399==    at 0x53D06C3: ??? (syscall-template.S:82)
==3399==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3399==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3399==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3399==  Address 0xac54014 is 3,588 bytes inside a block of size 4,184 alloc'd
==3399==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3399==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3399== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.698000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.657000
	perf-misc  			2.110000
	perf-total		4.465000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.128000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.442000
	perf-misc  			2.059000
	perf-total		5.629000
==3399== 
==3399== HEAP SUMMARY:
==3399==     in use at exit: 16 bytes in 2 blocks
==3399==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==3399== 
==3399== LEAK SUMMARY:
==3399==    definitely lost: 8 bytes in 1 blocks
==3399==    indirectly lost: 0 bytes in 0 blocks
==3399==      possibly lost: 0 bytes in 0 blocks
==3399==    still reachable: 0 bytes in 0 blocks
==3399==         suppressed: 8 bytes in 1 blocks
==3399== Rerun with --leak-check=full to see details of leaked memory
==3399== 
==3399== For counts of detected and suppressed errors, rerun with: -v
==3399== Use --track-origins=yes to see where uninitialised values come from
==3399== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --duplicate=1 --reopen=1    
==3405== Memcheck, a memory error detector
==3405== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3405== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3405== Command: ./test ../../testfiles/1/45.tst --duplicate=1 --reopen=1
==3405== 
==3405== Thread 3:
==3405== Conditional jump or move depends on uninitialised value(s)
==3405==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3405==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3405==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3405==    by 0x418B33: Thread::run() (thread.hpp:90)
==3405==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3405==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3405==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3405== 
==3405== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3405==    at 0x53D06C3: ??? (syscall-template.S:82)
==3405==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3405==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3405==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3405==    by 0x418B33: Thread::run() (thread.hpp:90)
==3405==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3405==  Address 0xad41706 is 214 bytes inside a block of size 4,184 alloc'd
==3405==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3405==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3405==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3405== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.325000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.865000
	perf-misc  			0.405000
	perf-total		11.595000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.793000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.742000
	perf-misc  			0.485000
	perf-total		7.020000
==3405== 
==3405== HEAP SUMMARY:
==3405==     in use at exit: 16 bytes in 2 blocks
==3405==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==3405== 
==3405== LEAK SUMMARY:
==3405==    definitely lost: 8 bytes in 1 blocks
==3405==    indirectly lost: 0 bytes in 0 blocks
==3405==      possibly lost: 0 bytes in 0 blocks
==3405==    still reachable: 0 bytes in 0 blocks
==3405==         suppressed: 8 bytes in 1 blocks
==3405== Rerun with --leak-check=full to see details of leaked memory
==3405== 
==3405== For counts of detected and suppressed errors, rerun with: -v
==3405== Use --track-origins=yes to see where uninitialised values come from
==3405== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --duplicate=1 --reopen=1    
==3410== Memcheck, a memory error detector
==3410== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3410== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3410== Command: ./test ../../testfiles/1/220.tst --duplicate=1 --reopen=1
==3410== 
==3410== Thread 3:
==3410== Conditional jump or move depends on uninitialised value(s)
==3410==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3410==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3410==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3410==    by 0x418B33: Thread::run() (thread.hpp:90)
==3410==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3410==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3410==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3410== 
==3410== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3410==    at 0x53D06C3: ??? (syscall-template.S:82)
==3410==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4E63F80: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==  Address 0xae9d2e8 is 120 bytes inside a block of size 4,184 alloc'd
==3410==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3410==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4E63F80: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3410==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3410== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		1548288
	perf-cursor			11.075000
	perf-erase 			0.493000
	perf-find  			0.000000
	perf-insert			0.767000
	perf-misc  			0.339000
	perf-total		12.674000
hamsterdb
	filesize		835584
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			4.917000
	perf-erase 			0.171000
	perf-find  			0.000000
	perf-insert			0.519000
	perf-misc  			0.261000
	perf-total		5.868000
==3410== 
==3410== HEAP SUMMARY:
==3410==     in use at exit: 16 bytes in 2 blocks
==3410==   total heap usage: 91,319 allocs, 91,317 frees, 111,858,744 bytes allocated
==3410== 
==3410== LEAK SUMMARY:
==3410==    definitely lost: 8 bytes in 1 blocks
==3410==    indirectly lost: 0 bytes in 0 blocks
==3410==      possibly lost: 0 bytes in 0 blocks
==3410==    still reachable: 0 bytes in 0 blocks
==3410==         suppressed: 8 bytes in 1 blocks
==3410== Rerun with --leak-check=full to see details of leaked memory
==3410== 
==3410== For counts of detected and suppressed errors, rerun with: -v
==3410== Use --track-origins=yes to see where uninitialised values come from
==3410== ERROR SUMMARY: 783 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --duplicate=1 --reopen=1    
==3415== Memcheck, a memory error detector
==3415== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3415== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3415== Command: ./test ../../testfiles/1/ext_020.tst --duplicate=1 --reopen=1
==3415== 
==3415== Thread 3:
==3415== Conditional jump or move depends on uninitialised value(s)
==3415==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3415==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3415==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3415==    by 0x418B33: Thread::run() (thread.hpp:90)
==3415==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3415==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3415==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3415== 
==3415== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3415==    at 0x53D06C3: ??? (syscall-template.S:82)
==3415==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3415==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3415==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3415==  Address 0xac7356e is 126 bytes inside a block of size 4,184 alloc'd
==3415==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3415==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3415==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3415== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.049000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.113000
	perf-misc  			0.336000
	perf-total		0.498000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.034000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.101000
	perf-misc  			0.209000
	perf-total		0.344000
==3415== 
==3415== HEAP SUMMARY:
==3415==     in use at exit: 16 bytes in 2 blocks
==3415==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==3415== 
==3415== LEAK SUMMARY:
==3415==    definitely lost: 8 bytes in 1 blocks
==3415==    indirectly lost: 0 bytes in 0 blocks
==3415==      possibly lost: 0 bytes in 0 blocks
==3415==    still reachable: 0 bytes in 0 blocks
==3415==         suppressed: 8 bytes in 1 blocks
==3415== Rerun with --leak-check=full to see details of leaked memory
==3415== 
==3415== For counts of detected and suppressed errors, rerun with: -v
==3415== Use --track-origins=yes to see where uninitialised values come from
==3415== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --duplicate=1 --reopen=1    
==3420== Memcheck, a memory error detector
==3420== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3420== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3420== Command: ./test ../../testfiles/2/ext_060.tst --duplicate=1 --reopen=1
==3420== 
==3420== Thread 3:
==3420== Conditional jump or move depends on uninitialised value(s)
==3420==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3420==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3420==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3420==    by 0x418B33: Thread::run() (thread.hpp:90)
==3420==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3420==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3420==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3420== 
==3420== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3420==    at 0x53D06C3: ??? (syscall-template.S:82)
==3420==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==  Address 0x14f83e36 is 550 bytes inside a block of size 4,184 alloc'd
==3420==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3420==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3420==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3420== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			734.436983
	perf-erase 			0.709000
	perf-find  			1.406000
	perf-insert			2.280000
	perf-misc  			0.334000
	perf-total		739.165995
hamsterdb
	filesize		1261568
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			553.238004
	perf-erase 			0.251000
	perf-find  			0.856000
	perf-insert			1.389000
	perf-misc  			0.348000
	perf-total		556.082004
==3420== 
==3420== HEAP SUMMARY:
==3420==     in use at exit: 16 bytes in 2 blocks
==3420==   total heap usage: 9,202,458 allocs, 9,202,456 frees, 405,742,064 bytes allocated
==3420== 
==3420== LEAK SUMMARY:
==3420==    definitely lost: 8 bytes in 1 blocks
==3420==    indirectly lost: 0 bytes in 0 blocks
==3420==      possibly lost: 0 bytes in 0 blocks
==3420==    still reachable: 0 bytes in 0 blocks
==3420==         suppressed: 8 bytes in 1 blocks
==3420== Rerun with --leak-check=full to see details of leaked memory
==3420== 
==3420== For counts of detected and suppressed errors, rerun with: -v
==3420== Use --track-origins=yes to see where uninitialised values come from
==3420== ERROR SUMMARY: 434 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --duplicate=1 --reopen=1    
==3437== Memcheck, a memory error detector
==3437== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3437== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3437== Command: ./test ../../testfiles/2/blb-001.tst --duplicate=1 --reopen=1
==3437== 
==3437== Thread 3:
==3437== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3437==    at 0x53D06C3: ??? (syscall-template.S:82)
==3437==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3437==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3437==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3437==  Address 0xac504e8 is 3,576 bytes inside a block of size 4,184 alloc'd
==3437==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3437==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3437== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.208000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.722000
	perf-misc  			0.413000
	perf-total		9.343000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.097000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.048000
	perf-misc  			0.329000
	perf-total		2.474000
==3437== 
==3437== HEAP SUMMARY:
==3437==     in use at exit: 16 bytes in 2 blocks
==3437==   total heap usage: 1,586 allocs, 1,584 frees, 268,965,184 bytes allocated
==3437== 
==3437== LEAK SUMMARY:
==3437==    definitely lost: 8 bytes in 1 blocks
==3437==    indirectly lost: 0 bytes in 0 blocks
==3437==      possibly lost: 0 bytes in 0 blocks
==3437==    still reachable: 0 bytes in 0 blocks
==3437==         suppressed: 8 bytes in 1 blocks
==3437== Rerun with --leak-check=full to see details of leaked memory
==3437== 
==3437== For counts of detected and suppressed errors, rerun with: -v
==3437== Use --track-origins=yes to see where uninitialised values come from
==3437== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==3443== Memcheck, a memory error detector
==3443== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3443== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3443== Command: ./test ../../testfiles/1/45.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==3443== 
unknown parameter 'sort-duplicates=1'
==3443== 
==3443== HEAP SUMMARY:
==3443==     in use at exit: 8,803 bytes in 131 blocks
==3443==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3443== 
==3443== LEAK SUMMARY:
==3443==    definitely lost: 0 bytes in 0 blocks
==3443==    indirectly lost: 0 bytes in 0 blocks
==3443==      possibly lost: 1,283 bytes in 18 blocks
==3443==    still reachable: 7,520 bytes in 113 blocks
==3443==         suppressed: 0 bytes in 0 blocks
==3443== Rerun with --leak-check=full to see details of leaked memory
==3443== 
==3443== For counts of detected and suppressed errors, rerun with: -v
==3443== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==3446== Memcheck, a memory error detector
==3446== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3446== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3446== Command: ./test ../../testfiles/1/220.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==3446== 
unknown parameter 'sort-duplicates=1'
==3446== 
==3446== HEAP SUMMARY:
==3446==     in use at exit: 8,803 bytes in 131 blocks
==3446==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3446== 
==3446== LEAK SUMMARY:
==3446==    definitely lost: 0 bytes in 0 blocks
==3446==    indirectly lost: 0 bytes in 0 blocks
==3446==      possibly lost: 1,283 bytes in 18 blocks
==3446==    still reachable: 7,520 bytes in 113 blocks
==3446==         suppressed: 0 bytes in 0 blocks
==3446== Rerun with --leak-check=full to see details of leaked memory
==3446== 
==3446== For counts of detected and suppressed errors, rerun with: -v
==3446== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==3449== Memcheck, a memory error detector
==3449== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3449== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3449== Command: ./test ../../testfiles/1/ext_020.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==3449== 
unknown parameter 'sort-duplicates=1'
==3449== 
==3449== HEAP SUMMARY:
==3449==     in use at exit: 8,803 bytes in 131 blocks
==3449==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3449== 
==3449== LEAK SUMMARY:
==3449==    definitely lost: 0 bytes in 0 blocks
==3449==    indirectly lost: 0 bytes in 0 blocks
==3449==      possibly lost: 1,283 bytes in 18 blocks
==3449==    still reachable: 7,520 bytes in 113 blocks
==3449==         suppressed: 0 bytes in 0 blocks
==3449== Rerun with --leak-check=full to see details of leaked memory
==3449== 
==3449== For counts of detected and suppressed errors, rerun with: -v
==3449== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==3452== Memcheck, a memory error detector
==3452== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3452== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3452== Command: ./test ../../testfiles/2/ext_060.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==3452== 
unknown parameter 'sort-duplicates=1'
==3452== 
==3452== HEAP SUMMARY:
==3452==     in use at exit: 8,803 bytes in 131 blocks
==3452==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3452== 
==3452== LEAK SUMMARY:
==3452==    definitely lost: 0 bytes in 0 blocks
==3452==    indirectly lost: 0 bytes in 0 blocks
==3452==      possibly lost: 1,283 bytes in 18 blocks
==3452==    still reachable: 7,520 bytes in 113 blocks
==3452==         suppressed: 0 bytes in 0 blocks
==3452== Rerun with --leak-check=full to see details of leaked memory
==3452== 
==3452== For counts of detected and suppressed errors, rerun with: -v
==3452== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==3455== Memcheck, a memory error detector
==3455== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3455== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3455== Command: ./test ../../testfiles/2/blb-001.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==3455== 
unknown parameter 'sort-duplicates=1'
==3455== 
==3455== HEAP SUMMARY:
==3455==     in use at exit: 8,803 bytes in 131 blocks
==3455==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3455== 
==3455== LEAK SUMMARY:
==3455==    definitely lost: 0 bytes in 0 blocks
==3455==    indirectly lost: 0 bytes in 0 blocks
==3455==      possibly lost: 1,283 bytes in 18 blocks
==3455==    still reachable: 7,520 bytes in 113 blocks
==3455==         suppressed: 0 bytes in 0 blocks
==3455== Rerun with --leak-check=full to see details of leaked memory
==3455== 
==3455== For counts of detected and suppressed errors, rerun with: -v
==3455== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==3459== Memcheck, a memory error detector
==3459== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3459== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3459== Command: ./test ../../testfiles/1/45.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==3459== 
==3459== Thread 3:
==3459== Conditional jump or move depends on uninitialised value(s)
==3459==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3459==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3459==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3459==    by 0x418B33: Thread::run() (thread.hpp:90)
==3459==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3459==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3459==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3459==    by 0x41B3F9: boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > > >::run() (thread.hpp:62)
==3459== 
==3459== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3459==    at 0x53D06C3: ??? (syscall-template.S:82)
==3459==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3459==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3459==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3459==    by 0x418B33: Thread::run() (thread.hpp:90)
==3459==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3459==  Address 0xad42206 is 214 bytes inside a block of size 4,184 alloc'd
==3459==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3459==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3459==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3459==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3459== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.312000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.392000
	perf-total		11.704001
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.792000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.310000
	perf-total		7.102000
==3459== 
==3459== HEAP SUMMARY:
==3459==     in use at exit: 16 bytes in 2 blocks
==3459==   total heap usage: 100,986 allocs, 100,984 frees, 111,953,459 bytes allocated
==3459== 
==3459== LEAK SUMMARY:
==3459==    definitely lost: 8 bytes in 1 blocks
==3459==    indirectly lost: 0 bytes in 0 blocks
==3459==      possibly lost: 0 bytes in 0 blocks
==3459==    still reachable: 0 bytes in 0 blocks
==3459==         suppressed: 8 bytes in 1 blocks
==3459== Rerun with --leak-check=full to see details of leaked memory
==3459== 
==3459== For counts of detected and suppressed errors, rerun with: -v
==3459== Use --track-origins=yes to see where uninitialised values come from
==3459== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==3464== Memcheck, a memory error detector
==3464== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3464== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3464== Command: ./test ../../testfiles/1/220.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==3464== 
==3464== Thread 3:
==3464== Conditional jump or move depends on uninitialised value(s)
==3464==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3464==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3464==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3464==    by 0x418B33: Thread::run() (thread.hpp:90)
==3464==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3464==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3464==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3464==    by 0x41B3F9: boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > > >::run() (thread.hpp:62)
==3464== 
==3464== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3464==    at 0x53D06C3: ??? (syscall-template.S:82)
==3464==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4E63F80: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3464==  Address 0xaea0e66 is 134 bytes inside a block of size 4,184 alloc'd
==3464==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3464==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3464==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3464==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3464== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		2736128
	perf-cursor			17.417001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.396000
	perf-total		17.813000
hamsterdb
	filesize		1294336
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			7.567000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.275000
	perf-total		7.842000
==3464== 
==3464== HEAP SUMMARY:
==3464==     in use at exit: 16 bytes in 2 blocks
==3464==   total heap usage: 94,694 allocs, 94,692 frees, 112,089,242 bytes allocated
==3464== 
==3464== LEAK SUMMARY:
==3464==    definitely lost: 8 bytes in 1 blocks
==3464==    indirectly lost: 0 bytes in 0 blocks
==3464==      possibly lost: 0 bytes in 0 blocks
==3464==    still reachable: 0 bytes in 0 blocks
==3464==         suppressed: 8 bytes in 1 blocks
==3464== Rerun with --leak-check=full to see details of leaked memory
==3464== 
==3464== For counts of detected and suppressed errors, rerun with: -v
==3464== Use --track-origins=yes to see where uninitialised values come from
==3464== ERROR SUMMARY: 766 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==3469== Memcheck, a memory error detector
==3469== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3469== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3469== Command: ./test ../../testfiles/1/ext_020.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==3469== 
==3469== Thread 3:
==3469== Conditional jump or move depends on uninitialised value(s)
==3469==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3469==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3469==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3469==    by 0x418B33: Thread::run() (thread.hpp:90)
==3469==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3469==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3469==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3469==    by 0x41B3F9: boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > > >::run() (thread.hpp:62)
==3469== 
==3469== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3469==    at 0x53D06C3: ??? (syscall-template.S:82)
==3469==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3469==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3469==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3469==  Address 0xac7386e is 126 bytes inside a block of size 4,184 alloc'd
==3469==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3469==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3469==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3469==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3469== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.180000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.395000
	perf-total		0.575000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.156000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.215000
	perf-total		0.371000
==3469== 
==3469== HEAP SUMMARY:
==3469==     in use at exit: 16 bytes in 2 blocks
==3469==   total heap usage: 1,998 allocs, 1,996 frees, 106,501,998 bytes allocated
==3469== 
==3469== LEAK SUMMARY:
==3469==    definitely lost: 8 bytes in 1 blocks
==3469==    indirectly lost: 0 bytes in 0 blocks
==3469==      possibly lost: 0 bytes in 0 blocks
==3469==    still reachable: 0 bytes in 0 blocks
==3469==         suppressed: 8 bytes in 1 blocks
==3469== Rerun with --leak-check=full to see details of leaked memory
==3469== 
==3469== For counts of detected and suppressed errors, rerun with: -v
==3469== Use --track-origins=yes to see where uninitialised values come from
==3469== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==3474== Memcheck, a memory error detector
==3474== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3474== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3474== Command: ./test ../../testfiles/2/ext_060.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==3474== 
==3474== Thread 3:
==3474== Conditional jump or move depends on uninitialised value(s)
==3474==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3474==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3474==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3474==    by 0x418B33: Thread::run() (thread.hpp:90)
==3474==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3474==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3474==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3474==    by 0x41B3F9: boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > > >::run() (thread.hpp:62)
==3474== 
==3474== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3474==    at 0x53D06C3: ??? (syscall-template.S:82)
==3474==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3474==  Address 0x13764542 is 562 bytes inside a block of size 4,184 alloc'd
==3474==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3474==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3474==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3474==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3474== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1519616
	perf-cursor			740.611981
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.294000
	perf-total		740.905976
hamsterdb
	filesize		1261568
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			555.335025
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.304000
	perf-total		555.638981
==3474== 
==3474== HEAP SUMMARY:
==3474==     in use at exit: 16 bytes in 2 blocks
==3474==   total heap usage: 9,173,420 allocs, 9,173,418 frees, 400,135,695 bytes allocated
==3474== 
==3474== LEAK SUMMARY:
==3474==    definitely lost: 8 bytes in 1 blocks
==3474==    indirectly lost: 0 bytes in 0 blocks
==3474==      possibly lost: 0 bytes in 0 blocks
==3474==    still reachable: 0 bytes in 0 blocks
==3474==         suppressed: 8 bytes in 1 blocks
==3474== Rerun with --leak-check=full to see details of leaked memory
==3474== 
==3474== For counts of detected and suppressed errors, rerun with: -v
==3474== Use --track-origins=yes to see where uninitialised values come from
==3474== ERROR SUMMARY: 434 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==3497== Memcheck, a memory error detector
==3497== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3497== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3497== Command: ./test ../../testfiles/2/blb-001.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==3497== 
==3497== Thread 3:
==3497== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3497==    at 0x53D06C3: ??? (syscall-template.S:82)
==3497==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3497==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3497==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3497==  Address 0xac504e8 is 3,576 bytes inside a block of size 4,184 alloc'd
==3497==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3497==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x4F06080: __dbc_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3497==    by 0x426091: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:209)
==3497== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			9.094000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.370000
	perf-total		9.464001
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.965000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.281000
	perf-total		2.246000
==3497== 
==3497== HEAP SUMMARY:
==3497==     in use at exit: 16 bytes in 2 blocks
==3497==   total heap usage: 1,588 allocs, 1,586 frees, 268,965,992 bytes allocated
==3497== 
==3497== LEAK SUMMARY:
==3497==    definitely lost: 8 bytes in 1 blocks
==3497==    indirectly lost: 0 bytes in 0 blocks
==3497==      possibly lost: 0 bytes in 0 blocks
==3497==    still reachable: 0 bytes in 0 blocks
==3497==         suppressed: 8 bytes in 1 blocks
==3497== Rerun with --leak-check=full to see details of leaked memory
==3497== 
==3497== For counts of detected and suppressed errors, rerun with: -v
==3497== Use --track-origins=yes to see where uninitialised values come from
==3497== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --inmemorydb=1    
==3503== Memcheck, a memory error detector
==3503== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3503== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3503== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1
==3503== 
==3503== Thread 3:
==3503== Conditional jump or move depends on uninitialised value(s)
==3503==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3503==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3503==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3503==    by 0x418B33: Thread::run() (thread.hpp:90)
==3503==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3503==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3503==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3503== 
==3503== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3503==    at 0x53D06C3: ??? (syscall-template.S:82)
==3503==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==  Address 0xae75452 is 546 bytes inside a block of size 8,280 alloc'd
==3503==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3503==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3503==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3503== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			10.023999
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.828000
	perf-misc  			0.213000
	perf-total		11.065000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			3.903000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.521000
	perf-misc  			0.091000
	perf-total		4.515000
==3503== 
==3503== HEAP SUMMARY:
==3503==     in use at exit: 16 bytes in 2 blocks
==3503==   total heap usage: 105,372 allocs, 105,370 frees, 111,119,398 bytes allocated
==3503== 
==3503== LEAK SUMMARY:
==3503==    definitely lost: 8 bytes in 1 blocks
==3503==    indirectly lost: 0 bytes in 0 blocks
==3503==      possibly lost: 0 bytes in 0 blocks
==3503==    still reachable: 0 bytes in 0 blocks
==3503==         suppressed: 8 bytes in 1 blocks
==3503== Rerun with --leak-check=full to see details of leaked memory
==3503== 
==3503== For counts of detected and suppressed errors, rerun with: -v
==3503== Use --track-origins=yes to see where uninitialised values come from
==3503== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --inmemorydb=1    
==3508== Memcheck, a memory error detector
==3508== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3508== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3508== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1
==3508== 
==3508== Thread 3:
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3508==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3508==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3508==    by 0x418B33: Thread::run() (thread.hpp:90)
==3508==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3508==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3508==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3508== 
==3508== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3508==    at 0x53D06C3: ??? (syscall-template.S:82)
==3508==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==  Address 0xadddc82 is 162 bytes inside a block of size 8,280 alloc'd
==3508==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3508==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3508==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3508== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			5.529000
	perf-erase 			0.261000
	perf-find  			0.000000
	perf-insert			0.587000
	perf-misc  			0.142000
	perf-total		6.519000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.800000
	perf-erase 			0.129000
	perf-find  			0.000000
	perf-insert			0.284000
	perf-misc  			0.061000
	perf-total		2.274000
==3508== 
==3508== HEAP SUMMARY:
==3508==     in use at exit: 16 bytes in 2 blocks
==3508==   total heap usage: 90,017 allocs, 90,015 frees, 110,388,091 bytes allocated
==3508== 
==3508== LEAK SUMMARY:
==3508==    definitely lost: 8 bytes in 1 blocks
==3508==    indirectly lost: 0 bytes in 0 blocks
==3508==      possibly lost: 0 bytes in 0 blocks
==3508==    still reachable: 0 bytes in 0 blocks
==3508==         suppressed: 8 bytes in 1 blocks
==3508== Rerun with --leak-check=full to see details of leaked memory
==3508== 
==3508== For counts of detected and suppressed errors, rerun with: -v
==3508== Use --track-origins=yes to see where uninitialised values come from
==3508== ERROR SUMMARY: 101 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --inmemorydb=1    
==3513== Memcheck, a memory error detector
==3513== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3513== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3513== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1
==3513== 
==3513== Thread 3:
==3513== Conditional jump or move depends on uninitialised value(s)
==3513==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3513==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3513==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3513==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3513==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3513==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3513==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3513==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3513==    by 0x418B33: Thread::run() (thread.hpp:90)
==3513==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3513==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3513==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3513== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.092000
	perf-misc  			0.209000
	perf-total		0.345000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.023000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.039000
	perf-misc  			0.070000
	perf-total		0.132000
==3513== 
==3513== HEAP SUMMARY:
==3513==     in use at exit: 16 bytes in 2 blocks
==3513==   total heap usage: 1,716 allocs, 1,714 frees, 105,711,986 bytes allocated
==3513== 
==3513== LEAK SUMMARY:
==3513==    definitely lost: 8 bytes in 1 blocks
==3513==    indirectly lost: 0 bytes in 0 blocks
==3513==      possibly lost: 0 bytes in 0 blocks
==3513==    still reachable: 0 bytes in 0 blocks
==3513==         suppressed: 8 bytes in 1 blocks
==3513== Rerun with --leak-check=full to see details of leaked memory
==3513== 
==3513== For counts of detected and suppressed errors, rerun with: -v
==3513== Use --track-origins=yes to see where uninitialised values come from
==3513== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --inmemorydb=1    
==3518== Memcheck, a memory error detector
==3518== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3518== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3518== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1
==3518== 
==3518== Thread 3:
==3518== Conditional jump or move depends on uninitialised value(s)
==3518==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3518==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3518==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3518==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3518==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3518==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3518==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3518==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3518==    by 0x418B33: Thread::run() (thread.hpp:90)
==3518==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3518==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3518==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3518== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			36.146000
	perf-erase 			0.519000
	perf-find  			0.995000
	perf-insert			1.163000
	perf-misc  			0.214000
	perf-total		39.037002
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			19.051000
	perf-erase 			0.286000
	perf-find  			0.539000
	perf-insert			0.535000
	perf-misc  			0.069000
	perf-total		20.480000
==3518== 
==3518== HEAP SUMMARY:
==3518==     in use at exit: 16 bytes in 2 blocks
==3518==   total heap usage: 1,065,114 allocs, 1,065,112 frees, 138,733,787 bytes allocated
==3518== 
==3518== LEAK SUMMARY:
==3518==    definitely lost: 8 bytes in 1 blocks
==3518==    indirectly lost: 0 bytes in 0 blocks
==3518==      possibly lost: 0 bytes in 0 blocks
==3518==    still reachable: 0 bytes in 0 blocks
==3518==         suppressed: 8 bytes in 1 blocks
==3518== Rerun with --leak-check=full to see details of leaked memory
==3518== 
==3518== For counts of detected and suppressed errors, rerun with: -v
==3518== Use --track-origins=yes to see where uninitialised values come from
==3518== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --inmemorydb=1    
==3524== Memcheck, a memory error detector
==3524== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3524== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3524== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1
==3524== 
==3524== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3524==    at 0x53D06C3: ??? (syscall-template.S:82)
==3524==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F0E2DB: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4EF783F: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F0585E: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4268A0: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:366)
==3524==    by 0x42025C: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:137)
==3524==    by 0x41F892: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:49)
==3524==  Address 0xac479d8 is 600 bytes inside a block of size 8,280 alloc'd
==3524==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3524==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4E62006: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F0CCED: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F0D47E: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x4F06B95: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3524==    by 0x425A78: Berkeleydb::create_db() (berkeleydb.cpp:89)
==3524==    by 0x415196: Engine::create_db(bool) (engine.cpp:77)
==3524==    by 0x411660: Parser::process_line(unsigned int, Engine*) (parser.cpp:99)
==3524== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.582000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.277000
	perf-misc  			0.138000
	perf-total		6.997000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.946000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.131000
	perf-misc  			0.073000
	perf-total		1.150000
==3524== 
==3524== HEAP SUMMARY:
==3524==     in use at exit: 16 bytes in 2 blocks
==3524==   total heap usage: 1,223 allocs, 1,221 frees, 277,094,708 bytes allocated
==3524== 
==3524== LEAK SUMMARY:
==3524==    definitely lost: 8 bytes in 1 blocks
==3524==    indirectly lost: 0 bytes in 0 blocks
==3524==      possibly lost: 0 bytes in 0 blocks
==3524==    still reachable: 0 bytes in 0 blocks
==3524==         suppressed: 8 bytes in 1 blocks
==3524== Rerun with --leak-check=full to see details of leaked memory
==3524== 
==3524== For counts of detected and suppressed errors, rerun with: -v
==3524== Use --track-origins=yes to see where uninitialised values come from
==3524== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1    
==3530== Memcheck, a memory error detector
==3530== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3530== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3530== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1
==3530== 
==3530== Thread 3:
==3530== Conditional jump or move depends on uninitialised value(s)
==3530==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3530==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3530==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3530==    by 0x418B33: Thread::run() (thread.hpp:90)
==3530==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3530==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3530==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3530== 
==3530== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3530==    at 0x53D06C3: ??? (syscall-template.S:82)
==3530==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==  Address 0xae75452 is 546 bytes inside a block of size 8,280 alloc'd
==3530==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3530==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3530==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3530== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			9.707000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.873000
	perf-misc  			0.217000
	perf-total		10.797000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			4.049000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.526000
	perf-misc  			0.083000
	perf-total		4.658000
==3530== 
==3530== HEAP SUMMARY:
==3530==     in use at exit: 16 bytes in 2 blocks
==3530==   total heap usage: 105,372 allocs, 105,370 frees, 111,119,398 bytes allocated
==3530== 
==3530== LEAK SUMMARY:
==3530==    definitely lost: 8 bytes in 1 blocks
==3530==    indirectly lost: 0 bytes in 0 blocks
==3530==      possibly lost: 0 bytes in 0 blocks
==3530==    still reachable: 0 bytes in 0 blocks
==3530==         suppressed: 8 bytes in 1 blocks
==3530== Rerun with --leak-check=full to see details of leaked memory
==3530== 
==3530== For counts of detected and suppressed errors, rerun with: -v
==3530== Use --track-origins=yes to see where uninitialised values come from
==3530== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1    
==3535== Memcheck, a memory error detector
==3535== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3535== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3535== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1
==3535== 
==3535== Thread 3:
==3535== Conditional jump or move depends on uninitialised value(s)
==3535==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3535==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3535==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3535==    by 0x418B33: Thread::run() (thread.hpp:90)
==3535==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3535==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3535==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3535== 
==3535== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3535==    at 0x53D06C3: ??? (syscall-template.S:82)
==3535==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==  Address 0xadec0fe is 174 bytes inside a block of size 8,280 alloc'd
==3535==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3535==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3535==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3535== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			8.849000
	perf-erase 			0.414000
	perf-find  			0.000000
	perf-insert			0.722000
	perf-misc  			0.181000
	perf-total		10.166000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.976000
	perf-erase 			0.137000
	perf-find  			0.000000
	perf-insert			0.283000
	perf-misc  			0.073000
	perf-total		3.469000
==3535== 
==3535== HEAP SUMMARY:
==3535==     in use at exit: 16 bytes in 2 blocks
==3535==   total heap usage: 93,400 allocs, 93,398 frees, 112,616,465 bytes allocated
==3535== 
==3535== LEAK SUMMARY:
==3535==    definitely lost: 8 bytes in 1 blocks
==3535==    indirectly lost: 0 bytes in 0 blocks
==3535==      possibly lost: 0 bytes in 0 blocks
==3535==    still reachable: 0 bytes in 0 blocks
==3535==         suppressed: 8 bytes in 1 blocks
==3535== Rerun with --leak-check=full to see details of leaked memory
==3535== 
==3535== For counts of detected and suppressed errors, rerun with: -v
==3535== Use --track-origins=yes to see where uninitialised values come from
==3535== ERROR SUMMARY: 269 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1    
==3540== Memcheck, a memory error detector
==3540== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3540== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3540== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1
==3540== 
==3540== Thread 3:
==3540== Conditional jump or move depends on uninitialised value(s)
==3540==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3540==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3540==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3540==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3540==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3540==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3540==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3540==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3540==    by 0x418B33: Thread::run() (thread.hpp:90)
==3540==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3540==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3540==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3540== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.039000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.096000
	perf-misc  			0.189000
	perf-total		0.324000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.025000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.050000
	perf-misc  			0.071000
	perf-total		0.146000
==3540== 
==3540== HEAP SUMMARY:
==3540==     in use at exit: 16 bytes in 2 blocks
==3540==   total heap usage: 1,716 allocs, 1,714 frees, 105,711,986 bytes allocated
==3540== 
==3540== LEAK SUMMARY:
==3540==    definitely lost: 8 bytes in 1 blocks
==3540==    indirectly lost: 0 bytes in 0 blocks
==3540==      possibly lost: 0 bytes in 0 blocks
==3540==    still reachable: 0 bytes in 0 blocks
==3540==         suppressed: 8 bytes in 1 blocks
==3540== Rerun with --leak-check=full to see details of leaked memory
==3540== 
==3540== For counts of detected and suppressed errors, rerun with: -v
==3540== Use --track-origins=yes to see where uninitialised values come from
==3540== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1    
==3545== Memcheck, a memory error detector
==3545== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3545== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3545== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1
==3545== 
==3545== Thread 3:
==3545== Conditional jump or move depends on uninitialised value(s)
==3545==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3545==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3545==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3545==    by 0x418B33: Thread::run() (thread.hpp:90)
==3545==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3545==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3545==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3545== 
==3545== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3545==    at 0x53D06C3: ??? (syscall-template.S:82)
==3545==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==  Address 0x12e85567 is 1,063 bytes inside a block of size 8,280 alloc'd
==3545==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3545==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3545==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3545== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			634.811974
	perf-erase 			0.715000
	perf-find  			1.488000
	perf-insert			2.024000
	perf-misc  			0.217000
	perf-total		639.255970
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			359.752008
	perf-erase 			0.263000
	perf-find  			0.821000
	perf-insert			0.869000
	perf-misc  			0.089000
	perf-total		361.794011
==3545== 
==3545== HEAP SUMMARY:
==3545==     in use at exit: 16 bytes in 2 blocks
==3545==   total heap usage: 9,195,606 allocs, 9,195,604 frees, 395,060,891 bytes allocated
==3545== 
==3545== LEAK SUMMARY:
==3545==    definitely lost: 8 bytes in 1 blocks
==3545==    indirectly lost: 0 bytes in 0 blocks
==3545==      possibly lost: 0 bytes in 0 blocks
==3545==    still reachable: 0 bytes in 0 blocks
==3545==         suppressed: 8 bytes in 1 blocks
==3545== Rerun with --leak-check=full to see details of leaked memory
==3545== 
==3545== For counts of detected and suppressed errors, rerun with: -v
==3545== Use --track-origins=yes to see where uninitialised values come from
==3545== ERROR SUMMARY: 133 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1    
==3562== Memcheck, a memory error detector
==3562== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3562== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3562== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1
==3562== 
==3562== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3562==    at 0x53D06C3: ??? (syscall-template.S:82)
==3562==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F0E2DB: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4EF783F: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F0585E: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4268A0: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:366)
==3562==    by 0x42025C: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:137)
==3562==    by 0x41F892: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:49)
==3562==  Address 0xac479d8 is 600 bytes inside a block of size 8,280 alloc'd
==3562==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3562==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4E62006: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F0CCED: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F0D47E: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x4F06B95: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3562==    by 0x425A78: Berkeleydb::create_db() (berkeleydb.cpp:89)
==3562==    by 0x415196: Engine::create_db(bool) (engine.cpp:77)
==3562==    by 0x411660: Parser::process_line(unsigned int, Engine*) (parser.cpp:99)
==3562== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.492000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.693000
	perf-misc  			0.185000
	perf-total		5.370000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.948000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.141000
	perf-misc  			0.073000
	perf-total		1.162000
==3562== 
==3562== HEAP SUMMARY:
==3562==     in use at exit: 16 bytes in 2 blocks
==3562==   total heap usage: 1,227 allocs, 1,225 frees, 277,095,592 bytes allocated
==3562== 
==3562== LEAK SUMMARY:
==3562==    definitely lost: 8 bytes in 1 blocks
==3562==    indirectly lost: 0 bytes in 0 blocks
==3562==      possibly lost: 0 bytes in 0 blocks
==3562==    still reachable: 0 bytes in 0 blocks
==3562==         suppressed: 8 bytes in 1 blocks
==3562== Rerun with --leak-check=full to see details of leaked memory
==3562== 
==3562== For counts of detected and suppressed errors, rerun with: -v
==3562== Use --track-origins=yes to see where uninitialised values come from
==3562== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==3568== Memcheck, a memory error detector
==3568== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3568== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3568== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==3568== 
unknown parameter 'sort-duplicates=1'
==3568== 
==3568== HEAP SUMMARY:
==3568==     in use at exit: 8,803 bytes in 131 blocks
==3568==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3568== 
==3568== LEAK SUMMARY:
==3568==    definitely lost: 0 bytes in 0 blocks
==3568==    indirectly lost: 0 bytes in 0 blocks
==3568==      possibly lost: 1,283 bytes in 18 blocks
==3568==    still reachable: 7,520 bytes in 113 blocks
==3568==         suppressed: 0 bytes in 0 blocks
==3568== Rerun with --leak-check=full to see details of leaked memory
==3568== 
==3568== For counts of detected and suppressed errors, rerun with: -v
==3568== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==3572== Memcheck, a memory error detector
==3572== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3572== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3572== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==3572== 
unknown parameter 'sort-duplicates=1'
==3572== 
==3572== HEAP SUMMARY:
==3572==     in use at exit: 8,803 bytes in 131 blocks
==3572==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3572== 
==3572== LEAK SUMMARY:
==3572==    definitely lost: 0 bytes in 0 blocks
==3572==    indirectly lost: 0 bytes in 0 blocks
==3572==      possibly lost: 1,283 bytes in 18 blocks
==3572==    still reachable: 7,520 bytes in 113 blocks
==3572==         suppressed: 0 bytes in 0 blocks
==3572== Rerun with --leak-check=full to see details of leaked memory
==3572== 
==3572== For counts of detected and suppressed errors, rerun with: -v
==3572== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==3575== Memcheck, a memory error detector
==3575== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3575== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3575== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==3575== 
unknown parameter 'sort-duplicates=1'
==3575== 
==3575== HEAP SUMMARY:
==3575==     in use at exit: 8,803 bytes in 131 blocks
==3575==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3575== 
==3575== LEAK SUMMARY:
==3575==    definitely lost: 0 bytes in 0 blocks
==3575==    indirectly lost: 0 bytes in 0 blocks
==3575==      possibly lost: 1,283 bytes in 18 blocks
==3575==    still reachable: 7,520 bytes in 113 blocks
==3575==         suppressed: 0 bytes in 0 blocks
==3575== Rerun with --leak-check=full to see details of leaked memory
==3575== 
==3575== For counts of detected and suppressed errors, rerun with: -v
==3575== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==3578== Memcheck, a memory error detector
==3578== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3578== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3578== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==3578== 
unknown parameter 'sort-duplicates=1'
==3578== 
==3578== HEAP SUMMARY:
==3578==     in use at exit: 8,803 bytes in 131 blocks
==3578==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3578== 
==3578== LEAK SUMMARY:
==3578==    definitely lost: 0 bytes in 0 blocks
==3578==    indirectly lost: 0 bytes in 0 blocks
==3578==      possibly lost: 1,283 bytes in 18 blocks
==3578==    still reachable: 7,520 bytes in 113 blocks
==3578==         suppressed: 0 bytes in 0 blocks
==3578== Rerun with --leak-check=full to see details of leaked memory
==3578== 
==3578== For counts of detected and suppressed errors, rerun with: -v
==3578== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==3581== Memcheck, a memory error detector
==3581== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3581== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3581== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==3581== 
unknown parameter 'sort-duplicates=1'
==3581== 
==3581== HEAP SUMMARY:
==3581==     in use at exit: 8,803 bytes in 131 blocks
==3581==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3581== 
==3581== LEAK SUMMARY:
==3581==    definitely lost: 0 bytes in 0 blocks
==3581==    indirectly lost: 0 bytes in 0 blocks
==3581==      possibly lost: 1,283 bytes in 18 blocks
==3581==    still reachable: 7,520 bytes in 113 blocks
==3581==         suppressed: 0 bytes in 0 blocks
==3581== Rerun with --leak-check=full to see details of leaked memory
==3581== 
==3581== For counts of detected and suppressed errors, rerun with: -v
==3581== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1    
==3585== Memcheck, a memory error detector
==3585== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3585== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3585== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1
==3585== 
==3585== Thread 3:
==3585== Conditional jump or move depends on uninitialised value(s)
==3585==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3585==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3585==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3585==    by 0x418B33: Thread::run() (thread.hpp:90)
==3585==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3585==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3585==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3585== 
==3585== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3585==    at 0x53D06C3: ??? (syscall-template.S:82)
==3585==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==  Address 0xae75452 is 546 bytes inside a block of size 8,280 alloc'd
==3585==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3585==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3585==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3585== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			9.833000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.904000
	perf-misc  			0.187000
	perf-total		10.924000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			3.901000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.562000
	perf-misc  			0.080000
	perf-total		4.543000
==3585== 
==3585== HEAP SUMMARY:
==3585==     in use at exit: 16 bytes in 2 blocks
==3585==   total heap usage: 105,372 allocs, 105,370 frees, 111,119,398 bytes allocated
==3585== 
==3585== LEAK SUMMARY:
==3585==    definitely lost: 8 bytes in 1 blocks
==3585==    indirectly lost: 0 bytes in 0 blocks
==3585==      possibly lost: 0 bytes in 0 blocks
==3585==    still reachable: 0 bytes in 0 blocks
==3585==         suppressed: 8 bytes in 1 blocks
==3585== Rerun with --leak-check=full to see details of leaked memory
==3585== 
==3585== For counts of detected and suppressed errors, rerun with: -v
==3585== Use --track-origins=yes to see where uninitialised values come from
==3585== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1    
==3590== Memcheck, a memory error detector
==3590== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3590== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3590== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1
==3590== 
==3590== Thread 3:
==3590== Conditional jump or move depends on uninitialised value(s)
==3590==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3590==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3590==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3590==    by 0x418B33: Thread::run() (thread.hpp:90)
==3590==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3590==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3590==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3590== 
==3590== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3590==    at 0x53D06C3: ??? (syscall-template.S:82)
==3590==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==  Address 0xade4a4a is 170 bytes inside a block of size 8,280 alloc'd
==3590==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3590==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3590==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3590== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			5.639000
	perf-erase 			0.320000
	perf-find  			0.000000
	perf-insert			0.690000
	perf-misc  			0.188000
	perf-total		6.837000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.800000
	perf-erase 			0.121000
	perf-find  			0.000000
	perf-insert			0.286000
	perf-misc  			0.076000
	perf-total		2.283000
==3590== 
==3590== HEAP SUMMARY:
==3590==     in use at exit: 16 bytes in 2 blocks
==3590==   total heap usage: 91,510 allocs, 91,508 frees, 111,316,976 bytes allocated
==3590== 
==3590== LEAK SUMMARY:
==3590==    definitely lost: 8 bytes in 1 blocks
==3590==    indirectly lost: 0 bytes in 0 blocks
==3590==      possibly lost: 0 bytes in 0 blocks
==3590==    still reachable: 0 bytes in 0 blocks
==3590==         suppressed: 8 bytes in 1 blocks
==3590== Rerun with --leak-check=full to see details of leaked memory
==3590== 
==3590== For counts of detected and suppressed errors, rerun with: -v
==3590== Use --track-origins=yes to see where uninitialised values come from
==3590== ERROR SUMMARY: 109 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1    
==3595== Memcheck, a memory error detector
==3595== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3595== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3595== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1
==3595== 
==3595== Thread 3:
==3595== Conditional jump or move depends on uninitialised value(s)
==3595==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3595==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3595==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3595==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3595==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3595==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3595==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3595==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3595==    by 0x418B33: Thread::run() (thread.hpp:90)
==3595==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3595==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3595==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3595== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.099000
	perf-misc  			0.223000
	perf-total		0.366000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.026000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.048000
	perf-misc  			0.074000
	perf-total		0.148000
==3595== 
==3595== HEAP SUMMARY:
==3595==     in use at exit: 16 bytes in 2 blocks
==3595==   total heap usage: 1,716 allocs, 1,714 frees, 105,711,986 bytes allocated
==3595== 
==3595== LEAK SUMMARY:
==3595==    definitely lost: 8 bytes in 1 blocks
==3595==    indirectly lost: 0 bytes in 0 blocks
==3595==      possibly lost: 0 bytes in 0 blocks
==3595==    still reachable: 0 bytes in 0 blocks
==3595==         suppressed: 8 bytes in 1 blocks
==3595== Rerun with --leak-check=full to see details of leaked memory
==3595== 
==3595== For counts of detected and suppressed errors, rerun with: -v
==3595== Use --track-origins=yes to see where uninitialised values come from
==3595== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1    
==3600== Memcheck, a memory error detector
==3600== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3600== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3600== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1
==3600== 
==3600== Thread 3:
==3600== Conditional jump or move depends on uninitialised value(s)
==3600==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3600==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3600==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3600==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3600==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3600==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3600==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3600==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3600==    by 0x418B33: Thread::run() (thread.hpp:90)
==3600==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3600==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3600==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3600== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			37.037998
	perf-erase 			0.545000
	perf-find  			1.030000
	perf-insert			1.901000
	perf-misc  			0.180000
	perf-total		40.694002
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			18.953001
	perf-erase 			0.279000
	perf-find  			0.512000
	perf-insert			0.840000
	perf-misc  			0.068000
	perf-total		20.651999
==3600== 
==3600== HEAP SUMMARY:
==3600==     in use at exit: 16 bytes in 2 blocks
==3600==   total heap usage: 1,076,523 allocs, 1,076,521 frees, 139,433,272 bytes allocated
==3600== 
==3600== LEAK SUMMARY:
==3600==    definitely lost: 8 bytes in 1 blocks
==3600==    indirectly lost: 0 bytes in 0 blocks
==3600==      possibly lost: 0 bytes in 0 blocks
==3600==    still reachable: 0 bytes in 0 blocks
==3600==         suppressed: 8 bytes in 1 blocks
==3600== Rerun with --leak-check=full to see details of leaked memory
==3600== 
==3600== For counts of detected and suppressed errors, rerun with: -v
==3600== Use --track-origins=yes to see where uninitialised values come from
==3600== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1    
==3605== Memcheck, a memory error detector
==3605== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3605== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3605== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1
==3605== 
==3605== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3605==    at 0x53D06C3: ??? (syscall-template.S:82)
==3605==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F0E2DB: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4EF783F: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F0585E: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4268A0: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:366)
==3605==    by 0x42025C: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:137)
==3605==    by 0x41F892: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:49)
==3605==  Address 0xac4c118 is 600 bytes inside a block of size 8,280 alloc'd
==3605==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3605==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4E62006: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F0CCED: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F0D47E: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x4F06B95: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3605==    by 0x425A78: Berkeleydb::create_db() (berkeleydb.cpp:89)
==3605==    by 0x415196: Engine::create_db(bool) (engine.cpp:77)
==3605==    by 0x411660: Parser::process_line(unsigned int, Engine*) (parser.cpp:99)
==3605== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			0.526000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.930000
	perf-misc  			0.142000
	perf-total		2.598000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.107000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.140000
	perf-misc  			0.069000
	perf-total		0.316000
==3605== 
==3605== HEAP SUMMARY:
==3605==     in use at exit: 16 bytes in 2 blocks
==3605==   total heap usage: 1,226 allocs, 1,224 frees, 237,666,644 bytes allocated
==3605== 
==3605== LEAK SUMMARY:
==3605==    definitely lost: 8 bytes in 1 blocks
==3605==    indirectly lost: 0 bytes in 0 blocks
==3605==      possibly lost: 0 bytes in 0 blocks
==3605==    still reachable: 0 bytes in 0 blocks
==3605==         suppressed: 8 bytes in 1 blocks
==3605== Rerun with --leak-check=full to see details of leaked memory
==3605== 
==3605== For counts of detected and suppressed errors, rerun with: -v
==3605== Use --track-origins=yes to see where uninitialised values come from
==3605== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --reopen=1 --use-cursors=1    
==3611== Memcheck, a memory error detector
==3611== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3611== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3611== Command: ./test ../../testfiles/1/45.tst --reopen=1 --use-cursors=1
==3611== 
==3611== Thread 3:
==3611== Conditional jump or move depends on uninitialised value(s)
==3611==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3611==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3611==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3611==    by 0x418B33: Thread::run() (thread.hpp:90)
==3611==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3611==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3611==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3611== 
==3611== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3611==    at 0x53D06C3: ??? (syscall-template.S:82)
==3611==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3611==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3611==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3611==    by 0x418B33: Thread::run() (thread.hpp:90)
==3611==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3611==  Address 0xad42206 is 214 bytes inside a block of size 4,184 alloc'd
==3611==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3611==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3611==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3611== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.215000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.892000
	perf-misc  			0.378000
	perf-total		11.485000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.691000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.262000
	perf-total		6.953000
==3611== 
==3611== HEAP SUMMARY:
==3611==     in use at exit: 16 bytes in 2 blocks
==3611==   total heap usage: 100,986 allocs, 100,984 frees, 111,953,459 bytes allocated
==3611== 
==3611== LEAK SUMMARY:
==3611==    definitely lost: 8 bytes in 1 blocks
==3611==    indirectly lost: 0 bytes in 0 blocks
==3611==      possibly lost: 0 bytes in 0 blocks
==3611==    still reachable: 0 bytes in 0 blocks
==3611==         suppressed: 8 bytes in 1 blocks
==3611== Rerun with --leak-check=full to see details of leaked memory
==3611== 
==3611== For counts of detected and suppressed errors, rerun with: -v
==3611== Use --track-origins=yes to see where uninitialised values come from
==3611== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --reopen=1 --use-cursors=1    
==3616== Memcheck, a memory error detector
==3616== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3616== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3616== Command: ./test ../../testfiles/1/220.tst --reopen=1 --use-cursors=1
==3616== 
==3616== Thread 3:
==3616== Conditional jump or move depends on uninitialised value(s)
==3616==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3616==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3616==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3616==    by 0x418B33: Thread::run() (thread.hpp:90)
==3616==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3616==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3616==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3616== 
==3616== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3616==    at 0x53D06C3: ??? (syscall-template.S:82)
==3616==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==  Address 0xaf10dee is 126 bytes inside a block of size 4,184 alloc'd
==3616==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3616==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3616==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3616== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.606000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.560000
	perf-misc  			0.344000
	perf-total		7.510000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			3.272000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.320000
	perf-total		3.592000
==3616== 
==3616== HEAP SUMMARY:
==3616==     in use at exit: 16 bytes in 2 blocks
==3616==   total heap usage: 91,631 allocs, 91,629 frees, 110,792,183 bytes allocated
==3616== 
==3616== LEAK SUMMARY:
==3616==    definitely lost: 8 bytes in 1 blocks
==3616==    indirectly lost: 0 bytes in 0 blocks
==3616==      possibly lost: 0 bytes in 0 blocks
==3616==    still reachable: 0 bytes in 0 blocks
==3616==         suppressed: 8 bytes in 1 blocks
==3616== Rerun with --leak-check=full to see details of leaked memory
==3616== 
==3616== For counts of detected and suppressed errors, rerun with: -v
==3616== Use --track-origins=yes to see where uninitialised values come from
==3616== ERROR SUMMARY: 242 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1    
==3621== Memcheck, a memory error detector
==3621== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3621== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3621== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1
==3621== 
==3621== Thread 3:
==3621== Conditional jump or move depends on uninitialised value(s)
==3621==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3621==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3621==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3621==    by 0x418B33: Thread::run() (thread.hpp:90)
==3621==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3621==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3621==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3621== 
==3621== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3621==    at 0x53D06C3: ??? (syscall-template.S:82)
==3621==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3621==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3621==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3621==  Address 0xac7345e is 126 bytes inside a block of size 4,184 alloc'd
==3621==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3621==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3621==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3621== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.048000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.102000
	perf-misc  			0.348000
	perf-total		0.498000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.134000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.247000
	perf-total		0.381000
==3621== 
==3621== HEAP SUMMARY:
==3621==     in use at exit: 16 bytes in 2 blocks
==3621==   total heap usage: 1,998 allocs, 1,996 frees, 106,501,998 bytes allocated
==3621== 
==3621== LEAK SUMMARY:
==3621==    definitely lost: 8 bytes in 1 blocks
==3621==    indirectly lost: 0 bytes in 0 blocks
==3621==      possibly lost: 0 bytes in 0 blocks
==3621==    still reachable: 0 bytes in 0 blocks
==3621==         suppressed: 8 bytes in 1 blocks
==3621== Rerun with --leak-check=full to see details of leaked memory
==3621== 
==3621== For counts of detected and suppressed errors, rerun with: -v
==3621== Use --track-origins=yes to see where uninitialised values come from
==3621== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1    
==3626== Memcheck, a memory error detector
==3626== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3626== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3626== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1
==3626== 
==3626== Thread 3:
==3626== Conditional jump or move depends on uninitialised value(s)
==3626==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3626==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3626==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3626==    by 0x418B33: Thread::run() (thread.hpp:90)
==3626==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3626==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3626==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3626== 
==3626== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3626==    at 0x53D06C3: ??? (syscall-template.S:82)
==3626==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3626==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3626==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3626==  Address 0xb28cf4a is 410 bytes inside a block of size 4,184 alloc'd
==3626==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3626==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3626==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3626== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			38.310998
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.210000
	perf-misc  			0.382000
	perf-total		39.902999
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			25.742000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.255000
	perf-total		25.997001
==3626== 
==3626== HEAP SUMMARY:
==3626==     in use at exit: 16 bytes in 2 blocks
==3626==   total heap usage: 1,065,380 allocs, 1,065,378 frees, 139,482,328 bytes allocated
==3626== 
==3626== LEAK SUMMARY:
==3626==    definitely lost: 8 bytes in 1 blocks
==3626==    indirectly lost: 0 bytes in 0 blocks
==3626==      possibly lost: 0 bytes in 0 blocks
==3626==    still reachable: 0 bytes in 0 blocks
==3626==         suppressed: 8 bytes in 1 blocks
==3626== Rerun with --leak-check=full to see details of leaked memory
==3626== 
==3626== For counts of detected and suppressed errors, rerun with: -v
==3626== Use --track-origins=yes to see where uninitialised values come from
==3626== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1    
==3631== Memcheck, a memory error detector
==3631== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3631== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3631== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1
==3631== 
==3631== Thread 3:
==3631== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3631==    at 0x53D06C3: ??? (syscall-template.S:82)
==3631==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3631==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3631==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3631==  Address 0xac50b80 is 3,984 bytes inside a block of size 4,184 alloc'd
==3631==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3631==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3631== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.235000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.332000
	perf-misc  			0.363000
	perf-total		7.930000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			4.304000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.290000
	perf-total		4.594000
==3631== 
==3631== HEAP SUMMARY:
==3631==     in use at exit: 16 bytes in 2 blocks
==3631==   total heap usage: 1,585 allocs, 1,583 frees, 268,965,044 bytes allocated
==3631== 
==3631== LEAK SUMMARY:
==3631==    definitely lost: 8 bytes in 1 blocks
==3631==    indirectly lost: 0 bytes in 0 blocks
==3631==      possibly lost: 0 bytes in 0 blocks
==3631==    still reachable: 0 bytes in 0 blocks
==3631==         suppressed: 8 bytes in 1 blocks
==3631== Rerun with --leak-check=full to see details of leaked memory
==3631== 
==3631== For counts of detected and suppressed errors, rerun with: -v
==3631== Use --track-origins=yes to see where uninitialised values come from
==3631== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --reopen=1 --use-cursors=1 --duplicate=1    
==3637== Memcheck, a memory error detector
==3637== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3637== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3637== Command: ./test ../../testfiles/1/45.tst --reopen=1 --use-cursors=1 --duplicate=1
==3637== 
==3637== Thread 3:
==3637== Conditional jump or move depends on uninitialised value(s)
==3637==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3637==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3637==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3637==    by 0x418B33: Thread::run() (thread.hpp:90)
==3637==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3637==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3637==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3637== 
==3637== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3637==    at 0x53D06C3: ??? (syscall-template.S:82)
==3637==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3637==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3637==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3637==    by 0x418B33: Thread::run() (thread.hpp:90)
==3637==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3637==  Address 0xad42206 is 214 bytes inside a block of size 4,184 alloc'd
==3637==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3637==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3637==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3637== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.242000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.843000
	perf-misc  			0.405000
	perf-total		11.490000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.646000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.338000
	perf-total		6.984000
==3637== 
==3637== HEAP SUMMARY:
==3637==     in use at exit: 16 bytes in 2 blocks
==3637==   total heap usage: 100,986 allocs, 100,984 frees, 111,953,459 bytes allocated
==3637== 
==3637== LEAK SUMMARY:
==3637==    definitely lost: 8 bytes in 1 blocks
==3637==    indirectly lost: 0 bytes in 0 blocks
==3637==      possibly lost: 0 bytes in 0 blocks
==3637==    still reachable: 0 bytes in 0 blocks
==3637==         suppressed: 8 bytes in 1 blocks
==3637== Rerun with --leak-check=full to see details of leaked memory
==3637== 
==3637== For counts of detected and suppressed errors, rerun with: -v
==3637== Use --track-origins=yes to see where uninitialised values come from
==3637== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --reopen=1 --use-cursors=1 --duplicate=1    
==3642== Memcheck, a memory error detector
==3642== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3642== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3642== Command: ./test ../../testfiles/1/220.tst --reopen=1 --use-cursors=1 --duplicate=1
==3642== 
==3642== Thread 3:
==3642== Conditional jump or move depends on uninitialised value(s)
==3642==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3642==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3642==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3642==    by 0x418B33: Thread::run() (thread.hpp:90)
==3642==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3642==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3642==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3642== 
==3642== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3642==    at 0x53D06C3: ??? (syscall-template.S:82)
==3642==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4E63F80: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==  Address 0xae8fef8 is 120 bytes inside a block of size 4,184 alloc'd
==3642==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3642==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4E63F80: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3642==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3642== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		2760704
	perf-cursor			16.632001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.809000
	perf-misc  			0.290000
	perf-total		17.731000
hamsterdb
	filesize		1310720
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			7.660000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.257000
	perf-total		7.917000
==3642== 
==3642== HEAP SUMMARY:
==3642==     in use at exit: 16 bytes in 2 blocks
==3642==   total heap usage: 94,728 allocs, 94,726 frees, 112,104,390 bytes allocated
==3642== 
==3642== LEAK SUMMARY:
==3642==    definitely lost: 8 bytes in 1 blocks
==3642==    indirectly lost: 0 bytes in 0 blocks
==3642==      possibly lost: 0 bytes in 0 blocks
==3642==    still reachable: 0 bytes in 0 blocks
==3642==         suppressed: 8 bytes in 1 blocks
==3642== Rerun with --leak-check=full to see details of leaked memory
==3642== 
==3642== For counts of detected and suppressed errors, rerun with: -v
==3642== Use --track-origins=yes to see where uninitialised values come from
==3642== ERROR SUMMARY: 777 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1 --duplicate=1    
==3647== Memcheck, a memory error detector
==3647== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3647== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3647== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1 --duplicate=1
==3647== 
==3647== Thread 3:
==3647== Conditional jump or move depends on uninitialised value(s)
==3647==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3647==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3647==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3647==    by 0x418B33: Thread::run() (thread.hpp:90)
==3647==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3647==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3647==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3647== 
==3647== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3647==    at 0x53D06C3: ??? (syscall-template.S:82)
==3647==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3647==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3647==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3647==  Address 0xac7345e is 126 bytes inside a block of size 4,184 alloc'd
==3647==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3647==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3647==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3647== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.042000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.112000
	perf-misc  			0.347000
	perf-total		0.501000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.130000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.295000
	perf-total		0.425000
==3647== 
==3647== HEAP SUMMARY:
==3647==     in use at exit: 16 bytes in 2 blocks
==3647==   total heap usage: 1,998 allocs, 1,996 frees, 106,501,998 bytes allocated
==3647== 
==3647== LEAK SUMMARY:
==3647==    definitely lost: 8 bytes in 1 blocks
==3647==    indirectly lost: 0 bytes in 0 blocks
==3647==      possibly lost: 0 bytes in 0 blocks
==3647==    still reachable: 0 bytes in 0 blocks
==3647==         suppressed: 8 bytes in 1 blocks
==3647== Rerun with --leak-check=full to see details of leaked memory
==3647== 
==3647== For counts of detected and suppressed errors, rerun with: -v
==3647== Use --track-origins=yes to see where uninitialised values come from
==3647== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1 --duplicate=1    
==3652== Memcheck, a memory error detector
==3652== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3652== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3652== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1 --duplicate=1
==3652== 
==3652== Thread 3:
==3652== Conditional jump or move depends on uninitialised value(s)
==3652==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3652==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3652==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3652==    by 0x418B33: Thread::run() (thread.hpp:90)
==3652==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3652==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3652==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3652== 
==3652== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3652==    at 0x53D06C3: ??? (syscall-template.S:82)
==3652==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==  Address 0x13764542 is 562 bytes inside a block of size 4,184 alloc'd
==3652==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3652==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3652==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3652== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			742.089032
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.372000
	perf-misc  			0.307000
	perf-total		744.768012
hamsterdb
	filesize		1261568
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			556.827017
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.302000
	perf-total		557.129007
==3652== 
==3652== HEAP SUMMARY:
==3652==     in use at exit: 16 bytes in 2 blocks
==3652==   total heap usage: 9,173,416 allocs, 9,173,414 frees, 400,142,497 bytes allocated
==3652== 
==3652== LEAK SUMMARY:
==3652==    definitely lost: 8 bytes in 1 blocks
==3652==    indirectly lost: 0 bytes in 0 blocks
==3652==      possibly lost: 0 bytes in 0 blocks
==3652==    still reachable: 0 bytes in 0 blocks
==3652==         suppressed: 8 bytes in 1 blocks
==3652== Rerun with --leak-check=full to see details of leaked memory
==3652== 
==3652== For counts of detected and suppressed errors, rerun with: -v
==3652== Use --track-origins=yes to see where uninitialised values come from
==3652== ERROR SUMMARY: 433 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1 --duplicate=1    
==3675== Memcheck, a memory error detector
==3675== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3675== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3675== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1 --duplicate=1
==3675== 
==3675== Thread 3:
==3675== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3675==    at 0x53D06C3: ??? (syscall-template.S:82)
==3675==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3675==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3675==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3675==  Address 0xac54008 is 3,576 bytes inside a block of size 4,184 alloc'd
==3675==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3675==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3675== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			6.032000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.335000
	perf-misc  			0.359000
	perf-total		7.726000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			3.696000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.292000
	perf-total		3.988000
==3675== 
==3675== HEAP SUMMARY:
==3675==     in use at exit: 16 bytes in 2 blocks
==3675==   total heap usage: 1,586 allocs, 1,584 frees, 268,965,184 bytes allocated
==3675== 
==3675== LEAK SUMMARY:
==3675==    definitely lost: 8 bytes in 1 blocks
==3675==    indirectly lost: 0 bytes in 0 blocks
==3675==      possibly lost: 0 bytes in 0 blocks
==3675==    still reachable: 0 bytes in 0 blocks
==3675==         suppressed: 8 bytes in 1 blocks
==3675== Rerun with --leak-check=full to see details of leaked memory
==3675== 
==3675== For counts of detected and suppressed errors, rerun with: -v
==3675== Use --track-origins=yes to see where uninitialised values come from
==3675== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --overwrite=1 --reopen=1 --use-cursors=1    
==3681== Memcheck, a memory error detector
==3681== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3681== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3681== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --reopen=1 --use-cursors=1
==3681== 
==3681== Thread 3:
==3681== Conditional jump or move depends on uninitialised value(s)
==3681==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3681==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3681==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3681==    by 0x418B33: Thread::run() (thread.hpp:90)
==3681==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3681==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3681==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3681== 
==3681== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3681==    at 0x53D06C3: ??? (syscall-template.S:82)
==3681==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3681==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3681==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3681==    by 0x418B33: Thread::run() (thread.hpp:90)
==3681==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3681==  Address 0xad41f16 is 214 bytes inside a block of size 4,184 alloc'd
==3681==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3681==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3681==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3681== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.274000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.958000
	perf-misc  			0.396000
	perf-total		11.628000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.649000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.338000
	perf-total		6.987000
==3681== 
==3681== HEAP SUMMARY:
==3681==     in use at exit: 16 bytes in 2 blocks
==3681==   total heap usage: 100,986 allocs, 100,984 frees, 111,953,459 bytes allocated
==3681== 
==3681== LEAK SUMMARY:
==3681==    definitely lost: 8 bytes in 1 blocks
==3681==    indirectly lost: 0 bytes in 0 blocks
==3681==      possibly lost: 0 bytes in 0 blocks
==3681==    still reachable: 0 bytes in 0 blocks
==3681==         suppressed: 8 bytes in 1 blocks
==3681== Rerun with --leak-check=full to see details of leaked memory
==3681== 
==3681== For counts of detected and suppressed errors, rerun with: -v
==3681== Use --track-origins=yes to see where uninitialised values come from
==3681== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --overwrite=1 --reopen=1 --use-cursors=1    
==3686== Memcheck, a memory error detector
==3686== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3686== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3686== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --reopen=1 --use-cursors=1
==3686== 
==3686== Thread 3:
==3686== Conditional jump or move depends on uninitialised value(s)
==3686==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3686==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3686==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3686==    by 0x418B33: Thread::run() (thread.hpp:90)
==3686==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3686==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3686==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3686== 
==3686== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3686==    at 0x53D06C3: ??? (syscall-template.S:82)
==3686==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==  Address 0xaf063fe is 126 bytes inside a block of size 4,184 alloc'd
==3686==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3686==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3686==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3686== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		741376
	perf-cursor			6.675000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.646000
	perf-misc  			0.366000
	perf-total		7.687000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			3.300000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.274000
	perf-total		3.574000
==3686== 
==3686== HEAP SUMMARY:
==3686==     in use at exit: 16 bytes in 2 blocks
==3686==   total heap usage: 91,920 allocs, 91,918 frees, 111,042,528 bytes allocated
==3686== 
==3686== LEAK SUMMARY:
==3686==    definitely lost: 8 bytes in 1 blocks
==3686==    indirectly lost: 0 bytes in 0 blocks
==3686==      possibly lost: 0 bytes in 0 blocks
==3686==    still reachable: 0 bytes in 0 blocks
==3686==         suppressed: 8 bytes in 1 blocks
==3686== Rerun with --leak-check=full to see details of leaked memory
==3686== 
==3686== For counts of detected and suppressed errors, rerun with: -v
==3686== Use --track-origins=yes to see where uninitialised values come from
==3686== ERROR SUMMARY: 289 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1 --use-cursors=1    
==3691== Memcheck, a memory error detector
==3691== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3691== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3691== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1 --use-cursors=1
==3691== 
==3691== Thread 3:
==3691== Conditional jump or move depends on uninitialised value(s)
==3691==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3691==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3691==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3691==    by 0x418B33: Thread::run() (thread.hpp:90)
==3691==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3691==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3691==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3691== 
==3691== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3691==    at 0x53D06C3: ??? (syscall-template.S:82)
==3691==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3691==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3691==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3691==  Address 0xac7345e is 126 bytes inside a block of size 4,184 alloc'd
==3691==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3691==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3691==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3691== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.049000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.133000
	perf-misc  			0.323000
	perf-total		0.505000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.149000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.230000
	perf-total		0.379000
==3691== 
==3691== HEAP SUMMARY:
==3691==     in use at exit: 16 bytes in 2 blocks
==3691==   total heap usage: 1,998 allocs, 1,996 frees, 106,501,998 bytes allocated
==3691== 
==3691== LEAK SUMMARY:
==3691==    definitely lost: 8 bytes in 1 blocks
==3691==    indirectly lost: 0 bytes in 0 blocks
==3691==      possibly lost: 0 bytes in 0 blocks
==3691==    still reachable: 0 bytes in 0 blocks
==3691==         suppressed: 8 bytes in 1 blocks
==3691== Rerun with --leak-check=full to see details of leaked memory
==3691== 
==3691== For counts of detected and suppressed errors, rerun with: -v
==3691== Use --track-origins=yes to see where uninitialised values come from
==3691== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1 --use-cursors=1    
==3696== Memcheck, a memory error detector
==3696== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3696== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3696== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1 --use-cursors=1
==3696== 
==3696== Thread 3:
==3696== Conditional jump or move depends on uninitialised value(s)
==3696==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3696==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3696==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3696==    by 0x418B33: Thread::run() (thread.hpp:90)
==3696==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3696==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3696==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3696== 
==3696== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3696==    at 0x53D06C3: ??? (syscall-template.S:82)
==3696==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3696==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3696==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3696==  Address 0xb290082 is 418 bytes inside a block of size 4,184 alloc'd
==3696==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3696==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3696==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3696== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			39.205999
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.637000
	perf-misc  			0.340000
	perf-total		41.182999
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			26.261000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.273000
	perf-total		26.534001
==3696== 
==3696== HEAP SUMMARY:
==3696==     in use at exit: 16 bytes in 2 blocks
==3696==   total heap usage: 1,065,436 allocs, 1,065,434 frees, 139,501,543 bytes allocated
==3696== 
==3696== LEAK SUMMARY:
==3696==    definitely lost: 8 bytes in 1 blocks
==3696==    indirectly lost: 0 bytes in 0 blocks
==3696==      possibly lost: 0 bytes in 0 blocks
==3696==    still reachable: 0 bytes in 0 blocks
==3696==         suppressed: 8 bytes in 1 blocks
==3696== Rerun with --leak-check=full to see details of leaked memory
==3696== 
==3696== For counts of detected and suppressed errors, rerun with: -v
==3696== Use --track-origins=yes to see where uninitialised values come from
==3696== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1 --use-cursors=1    
==3702== Memcheck, a memory error detector
==3702== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3702== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3702== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1 --use-cursors=1
==3702== 
==3702== Thread 3:
==3702== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3702==    at 0x53D06C3: ??? (syscall-template.S:82)
==3702==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3702==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3702==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3702==  Address 0xac509f4 is 3,588 bytes inside a block of size 4,184 alloc'd
==3702==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3702==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3702== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.712000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.644000
	perf-misc  			2.260000
	perf-total		4.616000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			3.457000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			2.191000
	perf-total		5.648000
==3702== 
==3702== HEAP SUMMARY:
==3702==     in use at exit: 16 bytes in 2 blocks
==3702==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==3702== 
==3702== LEAK SUMMARY:
==3702==    definitely lost: 8 bytes in 1 blocks
==3702==    indirectly lost: 0 bytes in 0 blocks
==3702==      possibly lost: 0 bytes in 0 blocks
==3702==    still reachable: 0 bytes in 0 blocks
==3702==         suppressed: 8 bytes in 1 blocks
==3702== Rerun with --leak-check=full to see details of leaked memory
==3702== 
==3702== For counts of detected and suppressed errors, rerun with: -v
==3702== Use --track-origins=yes to see where uninitialised values come from
==3702== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --inmemorydb=1 --use-cursors=1    
==3708== Memcheck, a memory error detector
==3708== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3708== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3708== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --use-cursors=1
==3708== 
==3708== Thread 3:
==3708== Conditional jump or move depends on uninitialised value(s)
==3708==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3708==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3708==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3708==    by 0x418B33: Thread::run() (thread.hpp:90)
==3708==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3708==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3708==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3708== 
==3708== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3708==    at 0x53D06C3: ??? (syscall-template.S:82)
==3708==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==  Address 0xae7b6a2 is 546 bytes inside a block of size 8,280 alloc'd
==3708==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3708==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3708==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3708== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			9.748000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.924000
	perf-misc  			0.174000
	perf-total		10.846000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			4.549000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.075000
	perf-total		4.624000
==3708== 
==3708== HEAP SUMMARY:
==3708==     in use at exit: 16 bytes in 2 blocks
==3708==   total heap usage: 105,752 allocs, 105,750 frees, 111,126,238 bytes allocated
==3708== 
==3708== LEAK SUMMARY:
==3708==    definitely lost: 8 bytes in 1 blocks
==3708==    indirectly lost: 0 bytes in 0 blocks
==3708==      possibly lost: 0 bytes in 0 blocks
==3708==    still reachable: 0 bytes in 0 blocks
==3708==         suppressed: 8 bytes in 1 blocks
==3708== Rerun with --leak-check=full to see details of leaked memory
==3708== 
==3708== For counts of detected and suppressed errors, rerun with: -v
==3708== Use --track-origins=yes to see where uninitialised values come from
==3708== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --inmemorydb=1 --use-cursors=1    
==3713== Memcheck, a memory error detector
==3713== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3713== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3713== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --use-cursors=1
==3713== 
==3713== Thread 3:
==3713== Conditional jump or move depends on uninitialised value(s)
==3713==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3713==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3713==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3713==    by 0x418B33: Thread::run() (thread.hpp:90)
==3713==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3713==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3713==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3713== 
==3713== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3713==    at 0x53D06C3: ??? (syscall-template.S:82)
==3713==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==  Address 0xae0b12a is 170 bytes inside a block of size 8,280 alloc'd
==3713==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3713==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3713==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3713== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			5.849000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.562000
	perf-misc  			0.183000
	perf-total		6.594000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.257000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.068000
	perf-total		2.325000
==3713== 
==3713== HEAP SUMMARY:
==3713==     in use at exit: 16 bytes in 2 blocks
==3713==   total heap usage: 93,071 allocs, 93,069 frees, 110,480,936 bytes allocated
==3713== 
==3713== LEAK SUMMARY:
==3713==    definitely lost: 8 bytes in 1 blocks
==3713==    indirectly lost: 0 bytes in 0 blocks
==3713==      possibly lost: 0 bytes in 0 blocks
==3713==    still reachable: 0 bytes in 0 blocks
==3713==         suppressed: 8 bytes in 1 blocks
==3713== Rerun with --leak-check=full to see details of leaked memory
==3713== 
==3713== For counts of detected and suppressed errors, rerun with: -v
==3713== Use --track-origins=yes to see where uninitialised values come from
==3713== ERROR SUMMARY: 104 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --use-cursors=1    
==3718== Memcheck, a memory error detector
==3718== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3718== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3718== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --use-cursors=1
==3718== 
==3718== Thread 3:
==3718== Conditional jump or move depends on uninitialised value(s)
==3718==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3718==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3718==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3718==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3718==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3718==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3718==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3718==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3718==    by 0x418B33: Thread::run() (thread.hpp:90)
==3718==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3718==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3718==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3718== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.092000
	perf-misc  			0.181000
	perf-total		0.317000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.065000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.072000
	perf-total		0.137000
==3718== 
==3718== HEAP SUMMARY:
==3718==     in use at exit: 16 bytes in 2 blocks
==3718==   total heap usage: 1,736 allocs, 1,734 frees, 105,717,958 bytes allocated
==3718== 
==3718== LEAK SUMMARY:
==3718==    definitely lost: 8 bytes in 1 blocks
==3718==    indirectly lost: 0 bytes in 0 blocks
==3718==      possibly lost: 0 bytes in 0 blocks
==3718==    still reachable: 0 bytes in 0 blocks
==3718==         suppressed: 8 bytes in 1 blocks
==3718== Rerun with --leak-check=full to see details of leaked memory
==3718== 
==3718== For counts of detected and suppressed errors, rerun with: -v
==3718== Use --track-origins=yes to see where uninitialised values come from
==3718== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --use-cursors=1    
==3723== Memcheck, a memory error detector
==3723== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3723== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3723== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --use-cursors=1
==3723== 
==3723== Thread 3:
==3723== Conditional jump or move depends on uninitialised value(s)
==3723==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3723==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3723==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3723==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3723==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3723==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3723==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3723==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3723==    by 0x418B33: Thread::run() (thread.hpp:90)
==3723==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3723==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3723==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3723== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			38.241001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.177000
	perf-misc  			0.213000
	perf-total		39.631000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			20.351001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.067000
	perf-total		20.418001
==3723== 
==3723== HEAP SUMMARY:
==3723==     in use at exit: 16 bytes in 2 blocks
==3723==   total heap usage: 1,065,200 allocs, 1,065,198 frees, 138,735,858 bytes allocated
==3723== 
==3723== LEAK SUMMARY:
==3723==    definitely lost: 8 bytes in 1 blocks
==3723==    indirectly lost: 0 bytes in 0 blocks
==3723==      possibly lost: 0 bytes in 0 blocks
==3723==    still reachable: 0 bytes in 0 blocks
==3723==         suppressed: 8 bytes in 1 blocks
==3723== Rerun with --leak-check=full to see details of leaked memory
==3723== 
==3723== For counts of detected and suppressed errors, rerun with: -v
==3723== Use --track-origins=yes to see where uninitialised values come from
==3723== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --use-cursors=1    
==3728== Memcheck, a memory error detector
==3728== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3728== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3728== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --use-cursors=1
==3728== 
==3728== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3728==    at 0x53D06C3: ??? (syscall-template.S:82)
==3728==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F0E2DB: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4EF783F: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F0585E: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4268A0: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:366)
==3728==    by 0x42025C: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:137)
==3728==    by 0x41F892: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:49)
==3728==  Address 0xac4c118 is 600 bytes inside a block of size 8,280 alloc'd
==3728==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3728==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4E62006: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F0CCED: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F0D47E: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x4F06B95: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3728==    by 0x425A78: Berkeleydb::create_db() (berkeleydb.cpp:89)
==3728==    by 0x415196: Engine::create_db(bool) (engine.cpp:77)
==3728==    by 0x411660: Parser::process_line(unsigned int, Engine*) (parser.cpp:99)
==3728== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.692000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.367000
	perf-misc  			0.186000
	perf-total		7.245000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.065000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.072000
	perf-total		1.137000
==3728== 
==3728== HEAP SUMMARY:
==3728==     in use at exit: 16 bytes in 2 blocks
==3728==   total heap usage: 1,223 allocs, 1,221 frees, 277,094,708 bytes allocated
==3728== 
==3728== LEAK SUMMARY:
==3728==    definitely lost: 8 bytes in 1 blocks
==3728==    indirectly lost: 0 bytes in 0 blocks
==3728==      possibly lost: 0 bytes in 0 blocks
==3728==    still reachable: 0 bytes in 0 blocks
==3728==         suppressed: 8 bytes in 1 blocks
==3728== Rerun with --leak-check=full to see details of leaked memory
==3728== 
==3728== For counts of detected and suppressed errors, rerun with: -v
==3728== Use --track-origins=yes to see where uninitialised values come from
==3728== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==3734== Memcheck, a memory error detector
==3734== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3734== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3734== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==3734== 
==3734== Thread 3:
==3734== Conditional jump or move depends on uninitialised value(s)
==3734==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3734==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3734==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3734==    by 0x418B33: Thread::run() (thread.hpp:90)
==3734==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3734==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3734==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3734== 
==3734== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3734==    at 0x53D06C3: ??? (syscall-template.S:82)
==3734==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==  Address 0xae7b6a2 is 546 bytes inside a block of size 8,280 alloc'd
==3734==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3734==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3734==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3734== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			9.770000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.850000
	perf-misc  			0.184000
	perf-total		10.804000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			4.578000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.081000
	perf-total		4.659000
==3734== 
==3734== HEAP SUMMARY:
==3734==     in use at exit: 16 bytes in 2 blocks
==3734==   total heap usage: 105,752 allocs, 105,750 frees, 111,126,238 bytes allocated
==3734== 
==3734== LEAK SUMMARY:
==3734==    definitely lost: 8 bytes in 1 blocks
==3734==    indirectly lost: 0 bytes in 0 blocks
==3734==      possibly lost: 0 bytes in 0 blocks
==3734==    still reachable: 0 bytes in 0 blocks
==3734==         suppressed: 8 bytes in 1 blocks
==3734== Rerun with --leak-check=full to see details of leaked memory
==3734== 
==3734== For counts of detected and suppressed errors, rerun with: -v
==3734== Use --track-origins=yes to see where uninitialised values come from
==3734== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==3748== Memcheck, a memory error detector
==3748== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3748== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3748== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==3748== 
==3748== Thread 3:
==3748== Conditional jump or move depends on uninitialised value(s)
==3748==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3748==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3748==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3748==    by 0x418B33: Thread::run() (thread.hpp:90)
==3748==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3748==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3748==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3748== 
==3748== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3748==    at 0x53D06C3: ??? (syscall-template.S:82)
==3748==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==  Address 0xae00e16 is 166 bytes inside a block of size 8,280 alloc'd
==3748==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3748==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3748==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3748== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			5.777000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.587000
	perf-misc  			0.207000
	perf-total		6.571000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.315000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.074000
	perf-total		2.389000
==3748== 
==3748== HEAP SUMMARY:
==3748==     in use at exit: 16 bytes in 2 blocks
==3748==   total heap usage: 94,810 allocs, 94,808 frees, 111,366,153 bytes allocated
==3748== 
==3748== LEAK SUMMARY:
==3748==    definitely lost: 8 bytes in 1 blocks
==3748==    indirectly lost: 0 bytes in 0 blocks
==3748==      possibly lost: 0 bytes in 0 blocks
==3748==    still reachable: 0 bytes in 0 blocks
==3748==         suppressed: 8 bytes in 1 blocks
==3748== Rerun with --leak-check=full to see details of leaked memory
==3748== 
==3748== For counts of detected and suppressed errors, rerun with: -v
==3748== Use --track-origins=yes to see where uninitialised values come from
==3748== ERROR SUMMARY: 109 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==3753== Memcheck, a memory error detector
==3753== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3753== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3753== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==3753== 
==3753== Thread 3:
==3753== Conditional jump or move depends on uninitialised value(s)
==3753==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3753==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3753==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3753==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3753==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3753==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3753==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3753==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3753==    by 0x418B33: Thread::run() (thread.hpp:90)
==3753==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3753==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3753==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3753== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.040000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.093000
	perf-misc  			0.183000
	perf-total		0.316000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.065000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.068000
	perf-total		0.133000
==3753== 
==3753== HEAP SUMMARY:
==3753==     in use at exit: 16 bytes in 2 blocks
==3753==   total heap usage: 1,736 allocs, 1,734 frees, 105,717,958 bytes allocated
==3753== 
==3753== LEAK SUMMARY:
==3753==    definitely lost: 8 bytes in 1 blocks
==3753==    indirectly lost: 0 bytes in 0 blocks
==3753==      possibly lost: 0 bytes in 0 blocks
==3753==    still reachable: 0 bytes in 0 blocks
==3753==         suppressed: 8 bytes in 1 blocks
==3753== Rerun with --leak-check=full to see details of leaked memory
==3753== 
==3753== For counts of detected and suppressed errors, rerun with: -v
==3753== Use --track-origins=yes to see where uninitialised values come from
==3753== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==3758== Memcheck, a memory error detector
==3758== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3758== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3758== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==3758== 
==3758== Thread 3:
==3758== Conditional jump or move depends on uninitialised value(s)
==3758==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3758==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3758==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3758==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3758==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3758==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3758==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3758==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3758==    by 0x418B33: Thread::run() (thread.hpp:90)
==3758==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3758==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3758==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3758== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			38.135001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.908000
	perf-misc  			0.177000
	perf-total		40.220000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			20.533000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.061000
	perf-total		20.594000
==3758== 
==3758== HEAP SUMMARY:
==3758==     in use at exit: 16 bytes in 2 blocks
==3758==   total heap usage: 1,076,663 allocs, 1,076,661 frees, 139,436,649 bytes allocated
==3758== 
==3758== LEAK SUMMARY:
==3758==    definitely lost: 8 bytes in 1 blocks
==3758==    indirectly lost: 0 bytes in 0 blocks
==3758==      possibly lost: 0 bytes in 0 blocks
==3758==    still reachable: 0 bytes in 0 blocks
==3758==         suppressed: 8 bytes in 1 blocks
==3758== Rerun with --leak-check=full to see details of leaked memory
==3758== 
==3758== For counts of detected and suppressed errors, rerun with: -v
==3758== Use --track-origins=yes to see where uninitialised values come from
==3758== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==3763== Memcheck, a memory error detector
==3763== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3763== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3763== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==3763== 
==3763== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3763==    at 0x53D06C3: ??? (syscall-template.S:82)
==3763==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F0E2DB: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4EF783F: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F0585E: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4268A0: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:366)
==3763==    by 0x42025C: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:137)
==3763==    by 0x41F892: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:49)
==3763==  Address 0xac4c118 is 600 bytes inside a block of size 8,280 alloc'd
==3763==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3763==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4E62006: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F0CCED: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F0D47E: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x4F06B95: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3763==    by 0x425A78: Berkeleydb::create_db() (berkeleydb.cpp:89)
==3763==    by 0x415196: Engine::create_db(bool) (engine.cpp:77)
==3763==    by 0x411660: Parser::process_line(unsigned int, Engine*) (parser.cpp:99)
==3763== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			0.519000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.967000
	perf-misc  			0.141000
	perf-total		1.627000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.251000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.000000
	perf-misc  			0.065000
	perf-total		0.316000
==3763== 
==3763== HEAP SUMMARY:
==3763==     in use at exit: 16 bytes in 2 blocks
==3763==   total heap usage: 1,226 allocs, 1,224 frees, 237,666,644 bytes allocated
==3763== 
==3763== LEAK SUMMARY:
==3763==    definitely lost: 8 bytes in 1 blocks
==3763==    indirectly lost: 0 bytes in 0 blocks
==3763==      possibly lost: 0 bytes in 0 blocks
==3763==    still reachable: 0 bytes in 0 blocks
==3763==         suppressed: 8 bytes in 1 blocks
==3763== Rerun with --leak-check=full to see details of leaked memory
==3763== 
==3763== For counts of detected and suppressed errors, rerun with: -v
==3763== Use --track-origins=yes to see where uninitialised values come from
==3763== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-find=1    
==3769== Memcheck, a memory error detector
==3769== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3769== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3769== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1
==3769== 
==3769== Thread 3:
==3769== Conditional jump or move depends on uninitialised value(s)
==3769==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3769==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3769==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3769==    by 0x418B33: Thread::run() (thread.hpp:90)
==3769==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3769==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3769==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3769== 
==3769== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3769==    at 0x53D06C3: ??? (syscall-template.S:82)
==3769==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3769==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3769==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3769==    by 0x418B33: Thread::run() (thread.hpp:90)
==3769==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3769==  Address 0xad41486 is 214 bytes inside a block of size 4,184 alloc'd
==3769==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3769==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3769==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3769== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			18.261000
	perf-insert			0.885000
	perf-misc  			0.267000
	perf-total		19.413000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.001000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.690000
	perf-misc  			0.255000
	perf-total		6.946000
==3769== 
==3769== HEAP SUMMARY:
==3769==     in use at exit: 16 bytes in 2 blocks
==3769==   total heap usage: 100,308 allocs, 100,306 frees, 111,175,565 bytes allocated
==3769== 
==3769== LEAK SUMMARY:
==3769==    definitely lost: 8 bytes in 1 blocks
==3769==    indirectly lost: 0 bytes in 0 blocks
==3769==      possibly lost: 0 bytes in 0 blocks
==3769==    still reachable: 0 bytes in 0 blocks
==3769==         suppressed: 8 bytes in 1 blocks
==3769== Rerun with --leak-check=full to see details of leaked memory
==3769== 
==3769== For counts of detected and suppressed errors, rerun with: -v
==3769== Use --track-origins=yes to see where uninitialised values come from
==3769== ERROR SUMMARY: 325 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-find=1    
==3774== Memcheck, a memory error detector
==3774== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3774== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3774== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1
==3774== 
==3774== Thread 3:
==3774== Conditional jump or move depends on uninitialised value(s)
==3774==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3774==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3774==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3774==    by 0x418B33: Thread::run() (thread.hpp:90)
==3774==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3774==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3774==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3774== 
==3774== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3774==    at 0x53D06C3: ??? (syscall-template.S:82)
==3774==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==  Address 0xaedbff2 is 130 bytes inside a block of size 4,184 alloc'd
==3774==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3774==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3774==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3774== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			0.000000
	perf-erase 			0.326000
	perf-find  			8.791000
	perf-insert			0.542000
	perf-misc  			0.266000
	perf-total		9.925000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.645000
	perf-erase 			0.131000
	perf-find  			0.000000
	perf-insert			0.370000
	perf-misc  			0.175000
	perf-total		3.321000
==3774== 
==3774== HEAP SUMMARY:
==3774==     in use at exit: 16 bytes in 2 blocks
==3774==   total heap usage: 88,314 allocs, 88,312 frees, 110,004,568 bytes allocated
==3774== 
==3774== LEAK SUMMARY:
==3774==    definitely lost: 8 bytes in 1 blocks
==3774==    indirectly lost: 0 bytes in 0 blocks
==3774==      possibly lost: 0 bytes in 0 blocks
==3774==    still reachable: 0 bytes in 0 blocks
==3774==         suppressed: 8 bytes in 1 blocks
==3774== Rerun with --leak-check=full to see details of leaked memory
==3774== 
==3774== For counts of detected and suppressed errors, rerun with: -v
==3774== Use --track-origins=yes to see where uninitialised values come from
==3774== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1    
==3779== Memcheck, a memory error detector
==3779== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3779== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3779== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1
==3779== 
==3779== Thread 3:
==3779== Conditional jump or move depends on uninitialised value(s)
==3779==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3779==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3779==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3779==    by 0x418B33: Thread::run() (thread.hpp:90)
==3779==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3779==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3779==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3779== 
==3779== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3779==    at 0x53D06C3: ??? (syscall-template.S:82)
==3779==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3779==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3779==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3779==  Address 0xac72c3e is 126 bytes inside a block of size 4,184 alloc'd
==3779==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3779==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3779==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3779== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			0.044000
	perf-insert			0.132000
	perf-misc  			0.317000
	perf-total		0.493000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.106000
	perf-misc  			0.295000
	perf-total		0.432000
==3779== 
==3779== HEAP SUMMARY:
==3779==     in use at exit: 16 bytes in 2 blocks
==3779==   total heap usage: 1,731 allocs, 1,729 frees, 105,828,506 bytes allocated
==3779== 
==3779== LEAK SUMMARY:
==3779==    definitely lost: 8 bytes in 1 blocks
==3779==    indirectly lost: 0 bytes in 0 blocks
==3779==      possibly lost: 0 bytes in 0 blocks
==3779==    still reachable: 0 bytes in 0 blocks
==3779==         suppressed: 8 bytes in 1 blocks
==3779== Rerun with --leak-check=full to see details of leaked memory
==3779== 
==3779== For counts of detected and suppressed errors, rerun with: -v
==3779== Use --track-origins=yes to see where uninitialised values come from
==3779== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1    
==3784== Memcheck, a memory error detector
==3784== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3784== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3784== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1
==3784== 
==3784== Thread 3:
==3784== Conditional jump or move depends on uninitialised value(s)
==3784==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3784==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3784==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3784==    by 0x418B33: Thread::run() (thread.hpp:90)
==3784==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3784==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3784==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3784== 
==3784== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3784==    at 0x53D06C3: ??? (syscall-template.S:82)
==3784==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3784==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3784==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3784==  Address 0xb28c13a is 410 bytes inside a block of size 4,184 alloc'd
==3784==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3784==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3784==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3784== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			0.000000
	perf-erase 			0.502000
	perf-find  			59.685999
	perf-insert			1.105000
	perf-misc  			0.239000
	perf-total		61.532000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.349999
	perf-erase 			0.260000
	perf-find  			0.497000
	perf-insert			0.637000
	perf-misc  			0.201000
	perf-total		25.945000
==3784== 
==3784== HEAP SUMMARY:
==3784==     in use at exit: 16 bytes in 2 blocks
==3784==   total heap usage: 1,064,822 allocs, 1,064,820 frees, 138,845,724 bytes allocated
==3784== 
==3784== LEAK SUMMARY:
==3784==    definitely lost: 8 bytes in 1 blocks
==3784==    indirectly lost: 0 bytes in 0 blocks
==3784==      possibly lost: 0 bytes in 0 blocks
==3784==    still reachable: 0 bytes in 0 blocks
==3784==         suppressed: 8 bytes in 1 blocks
==3784== Rerun with --leak-check=full to see details of leaked memory
==3784== 
==3784== For counts of detected and suppressed errors, rerun with: -v
==3784== Use --track-origins=yes to see where uninitialised values come from
==3784== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1    
==3790== Memcheck, a memory error detector
==3790== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3790== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3790== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1
==3790== 
==3790== Thread 3:
==3790== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3790==    at 0x53D06C3: ??? (syscall-template.S:82)
==3790==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3790==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3790==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3790==  Address 0xac50900 is 3,984 bytes inside a block of size 4,184 alloc'd
==3790==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3790==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3790== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			5.384000
	perf-insert			1.374000
	perf-misc  			0.240000
	perf-total		6.998000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.985000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.408000
	perf-misc  			0.169000
	perf-total		3.562000
==3790== 
==3790== HEAP SUMMARY:
==3790==     in use at exit: 16 bytes in 2 blocks
==3790==   total heap usage: 1,332 allocs, 1,330 frees, 227,712,658 bytes allocated
==3790== 
==3790== LEAK SUMMARY:
==3790==    definitely lost: 8 bytes in 1 blocks
==3790==    indirectly lost: 0 bytes in 0 blocks
==3790==      possibly lost: 0 bytes in 0 blocks
==3790==    still reachable: 0 bytes in 0 blocks
==3790==         suppressed: 8 bytes in 1 blocks
==3790== Rerun with --leak-check=full to see details of leaked memory
==3790== 
==3790== For counts of detected and suppressed errors, rerun with: -v
==3790== Use --track-origins=yes to see where uninitialised values come from
==3790== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-find=1 --duplicate=1    
==3796== Memcheck, a memory error detector
==3796== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3796== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3796== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1 --duplicate=1
==3796== 
==3796== Thread 3:
==3796== Conditional jump or move depends on uninitialised value(s)
==3796==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3796==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3796==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3796==    by 0x418B33: Thread::run() (thread.hpp:90)
==3796==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3796==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3796==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3796== 
==3796== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3796==    at 0x53D06C3: ??? (syscall-template.S:82)
==3796==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3796==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3796==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3796==    by 0x418B33: Thread::run() (thread.hpp:90)
==3796==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3796==  Address 0xad41486 is 214 bytes inside a block of size 4,184 alloc'd
==3796==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3796==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3796==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3796== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			18.450000
	perf-insert			0.812000
	perf-misc  			0.309000
	perf-total		19.570999
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.003000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.707000
	perf-misc  			0.283000
	perf-total		6.993000
==3796== 
==3796== HEAP SUMMARY:
==3796==     in use at exit: 16 bytes in 2 blocks
==3796==   total heap usage: 100,308 allocs, 100,306 frees, 111,175,565 bytes allocated
==3796== 
==3796== LEAK SUMMARY:
==3796==    definitely lost: 8 bytes in 1 blocks
==3796==    indirectly lost: 0 bytes in 0 blocks
==3796==      possibly lost: 0 bytes in 0 blocks
==3796==    still reachable: 0 bytes in 0 blocks
==3796==         suppressed: 8 bytes in 1 blocks
==3796== Rerun with --leak-check=full to see details of leaked memory
==3796== 
==3796== For counts of detected and suppressed errors, rerun with: -v
==3796== Use --track-origins=yes to see where uninitialised values come from
==3796== ERROR SUMMARY: 325 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-find=1 --duplicate=1    
==3801== Memcheck, a memory error detector
==3801== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3801== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3801== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1 --duplicate=1
==3801== 
==3801== Thread 3:
==3801== Conditional jump or move depends on uninitialised value(s)
==3801==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3801==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3801==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3801==    by 0x418B33: Thread::run() (thread.hpp:90)
==3801==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3801==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3801==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3801== 
==3801== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3801==    at 0x53D06C3: ??? (syscall-template.S:82)
==3801==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4E63F80: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==  Address 0xae9ac28 is 120 bytes inside a block of size 4,184 alloc'd
==3801==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3801==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4E63F80: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3801==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3801== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		1548288
	perf-cursor			0.000000
	perf-erase 			0.478000
	perf-find  			10.273000
	perf-insert			0.739000
	perf-misc  			0.279000
	perf-total		11.769000
hamsterdb
	filesize		835584
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			3.047000
	perf-erase 			0.153000
	perf-find  			0.000000
	perf-insert			0.557000
	perf-misc  			0.235000
	perf-total		3.992000
==3801== 
==3801== HEAP SUMMARY:
==3801==     in use at exit: 16 bytes in 2 blocks
==3801==   total heap usage: 89,806 allocs, 89,804 frees, 110,894,920 bytes allocated
==3801== 
==3801== LEAK SUMMARY:
==3801==    definitely lost: 8 bytes in 1 blocks
==3801==    indirectly lost: 0 bytes in 0 blocks
==3801==      possibly lost: 0 bytes in 0 blocks
==3801==    still reachable: 0 bytes in 0 blocks
==3801==         suppressed: 8 bytes in 1 blocks
==3801== Rerun with --leak-check=full to see details of leaked memory
==3801== 
==3801== For counts of detected and suppressed errors, rerun with: -v
==3801== Use --track-origins=yes to see where uninitialised values come from
==3801== ERROR SUMMARY: 782 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1 --duplicate=1    
==3806== Memcheck, a memory error detector
==3806== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3806== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3806== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1 --duplicate=1
==3806== 
==3806== Thread 3:
==3806== Conditional jump or move depends on uninitialised value(s)
==3806==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3806==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3806==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3806==    by 0x418B33: Thread::run() (thread.hpp:90)
==3806==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3806==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3806==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3806== 
==3806== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3806==    at 0x53D06C3: ??? (syscall-template.S:82)
==3806==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3806==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3806==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3806==  Address 0xac72c3e is 126 bytes inside a block of size 4,184 alloc'd
==3806==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3806==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3806==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3806== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			0.046000
	perf-insert			0.138000
	perf-misc  			0.286000
	perf-total		0.470000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.028000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.131000
	perf-misc  			0.250000
	perf-total		0.409000
==3806== 
==3806== HEAP SUMMARY:
==3806==     in use at exit: 16 bytes in 2 blocks
==3806==   total heap usage: 1,731 allocs, 1,729 frees, 105,828,506 bytes allocated
==3806== 
==3806== LEAK SUMMARY:
==3806==    definitely lost: 8 bytes in 1 blocks
==3806==    indirectly lost: 0 bytes in 0 blocks
==3806==      possibly lost: 0 bytes in 0 blocks
==3806==    still reachable: 0 bytes in 0 blocks
==3806==         suppressed: 8 bytes in 1 blocks
==3806== Rerun with --leak-check=full to see details of leaked memory
==3806== 
==3806== For counts of detected and suppressed errors, rerun with: -v
==3806== Use --track-origins=yes to see where uninitialised values come from
==3806== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1 --duplicate=1    
==3811== Memcheck, a memory error detector
==3811== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3811== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3811== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1 --duplicate=1
==3811== 
==3811== Thread 3:
==3811== Conditional jump or move depends on uninitialised value(s)
==3811==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3811==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3811==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3811==    by 0x418B33: Thread::run() (thread.hpp:90)
==3811==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3811==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3811==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3811== 
==3811== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3811==    at 0x53D06C3: ??? (syscall-template.S:82)
==3811==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==  Address 0x131aef32 is 562 bytes inside a block of size 4,184 alloc'd
==3811==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3811==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3811==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3811== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			0.000000
	perf-erase 			0.712000
	perf-find  			78.948999
	perf-insert			2.267000
	perf-misc  			0.275000
	perf-total		82.203001
hamsterdb
	filesize		1261568
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			32.132000
	perf-erase 			0.262000
	perf-find  			0.896000
	perf-insert			1.398000
	perf-misc  			0.242000
	perf-total		34.930000
==3811== 
==3811== HEAP SUMMARY:
==3811==     in use at exit: 16 bytes in 2 blocks
==3811==   total heap usage: 1,096,725 allocs, 1,096,723 frees, 148,048,846 bytes allocated
==3811== 
==3811== LEAK SUMMARY:
==3811==    definitely lost: 8 bytes in 1 blocks
==3811==    indirectly lost: 0 bytes in 0 blocks
==3811==      possibly lost: 0 bytes in 0 blocks
==3811==    still reachable: 0 bytes in 0 blocks
==3811==         suppressed: 8 bytes in 1 blocks
==3811== Rerun with --leak-check=full to see details of leaked memory
==3811== 
==3811== For counts of detected and suppressed errors, rerun with: -v
==3811== Use --track-origins=yes to see where uninitialised values come from
==3811== ERROR SUMMARY: 433 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1 --duplicate=1    
==3817== Memcheck, a memory error detector
==3817== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3817== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3817== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1 --duplicate=1
==3817== 
==3817== Thread 3:
==3817== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3817==    at 0x53D06C3: ??? (syscall-template.S:82)
==3817==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3817==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3817==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3817==  Address 0xac50568 is 3,576 bytes inside a block of size 4,184 alloc'd
==3817==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3817==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3817== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			0.000000
	perf-erase 			0.000000
	perf-find  			5.509000
	perf-insert			3.537000
	perf-misc  			0.241000
	perf-total		9.287000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.978000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.183000
	perf-misc  			0.272000
	perf-total		2.433000
==3817== 
==3817== HEAP SUMMARY:
==3817==     in use at exit: 16 bytes in 2 blocks
==3817==   total heap usage: 1,333 allocs, 1,331 frees, 227,712,798 bytes allocated
==3817== 
==3817== LEAK SUMMARY:
==3817==    definitely lost: 8 bytes in 1 blocks
==3817==    indirectly lost: 0 bytes in 0 blocks
==3817==      possibly lost: 0 bytes in 0 blocks
==3817==    still reachable: 0 bytes in 0 blocks
==3817==         suppressed: 8 bytes in 1 blocks
==3817== Rerun with --leak-check=full to see details of leaked memory
==3817== 
==3817== For counts of detected and suppressed errors, rerun with: -v
==3817== Use --track-origins=yes to see where uninitialised values come from
==3817== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-find=1 --useralloc=1    
==3823== Memcheck, a memory error detector
==3823== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3823== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3823== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1 --useralloc=1
==3823== 
unknown parameter 'useralloc=1'
==3823== 
==3823== HEAP SUMMARY:
==3823==     in use at exit: 8,803 bytes in 131 blocks
==3823==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3823== 
==3823== LEAK SUMMARY:
==3823==    definitely lost: 0 bytes in 0 blocks
==3823==    indirectly lost: 0 bytes in 0 blocks
==3823==      possibly lost: 1,283 bytes in 18 blocks
==3823==    still reachable: 7,520 bytes in 113 blocks
==3823==         suppressed: 0 bytes in 0 blocks
==3823== Rerun with --leak-check=full to see details of leaked memory
==3823== 
==3823== For counts of detected and suppressed errors, rerun with: -v
==3823== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-find=1 --useralloc=1    
==3826== Memcheck, a memory error detector
==3826== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3826== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3826== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1 --useralloc=1
==3826== 
unknown parameter 'useralloc=1'
==3826== 
==3826== HEAP SUMMARY:
==3826==     in use at exit: 8,803 bytes in 131 blocks
==3826==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3826== 
==3826== LEAK SUMMARY:
==3826==    definitely lost: 0 bytes in 0 blocks
==3826==    indirectly lost: 0 bytes in 0 blocks
==3826==      possibly lost: 1,283 bytes in 18 blocks
==3826==    still reachable: 7,520 bytes in 113 blocks
==3826==         suppressed: 0 bytes in 0 blocks
==3826== Rerun with --leak-check=full to see details of leaked memory
==3826== 
==3826== For counts of detected and suppressed errors, rerun with: -v
==3826== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1 --useralloc=1    
==3829== Memcheck, a memory error detector
==3829== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3829== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3829== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1 --useralloc=1
==3829== 
unknown parameter 'useralloc=1'
==3829== 
==3829== HEAP SUMMARY:
==3829==     in use at exit: 8,803 bytes in 131 blocks
==3829==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3829== 
==3829== LEAK SUMMARY:
==3829==    definitely lost: 0 bytes in 0 blocks
==3829==    indirectly lost: 0 bytes in 0 blocks
==3829==      possibly lost: 1,283 bytes in 18 blocks
==3829==    still reachable: 7,520 bytes in 113 blocks
==3829==         suppressed: 0 bytes in 0 blocks
==3829== Rerun with --leak-check=full to see details of leaked memory
==3829== 
==3829== For counts of detected and suppressed errors, rerun with: -v
==3829== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1 --useralloc=1    
==3832== Memcheck, a memory error detector
==3832== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3832== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3832== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1 --useralloc=1
==3832== 
unknown parameter 'useralloc=1'
==3832== 
==3832== HEAP SUMMARY:
==3832==     in use at exit: 8,803 bytes in 131 blocks
==3832==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3832== 
==3832== LEAK SUMMARY:
==3832==    definitely lost: 0 bytes in 0 blocks
==3832==    indirectly lost: 0 bytes in 0 blocks
==3832==      possibly lost: 1,283 bytes in 18 blocks
==3832==    still reachable: 7,520 bytes in 113 blocks
==3832==         suppressed: 0 bytes in 0 blocks
==3832== Rerun with --leak-check=full to see details of leaked memory
==3832== 
==3832== For counts of detected and suppressed errors, rerun with: -v
==3832== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1 --useralloc=1    
==3835== Memcheck, a memory error detector
==3835== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3835== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3835== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1 --useralloc=1
==3835== 
unknown parameter 'useralloc=1'
==3835== 
==3835== HEAP SUMMARY:
==3835==     in use at exit: 8,803 bytes in 131 blocks
==3835==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3835== 
==3835== LEAK SUMMARY:
==3835==    definitely lost: 0 bytes in 0 blocks
==3835==    indirectly lost: 0 bytes in 0 blocks
==3835==      possibly lost: 1,283 bytes in 18 blocks
==3835==    still reachable: 7,520 bytes in 113 blocks
==3835==         suppressed: 0 bytes in 0 blocks
==3835== Rerun with --leak-check=full to see details of leaked memory
==3835== 
==3835== For counts of detected and suppressed errors, rerun with: -v
==3835== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-backwards=1    
==3839== Memcheck, a memory error detector
==3839== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3839== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3839== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1
==3839== 
==3839== Thread 3:
==3839== Conditional jump or move depends on uninitialised value(s)
==3839==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3839==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3839==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3839==    by 0x418B33: Thread::run() (thread.hpp:90)
==3839==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3839==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3839==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3839== 
==3839== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3839==    at 0x53D06C3: ??? (syscall-template.S:82)
==3839==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3839==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3839==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3839==    by 0x418B33: Thread::run() (thread.hpp:90)
==3839==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3839==  Address 0xad41016 is 214 bytes inside a block of size 4,184 alloc'd
==3839==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3839==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3839==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3839== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.505000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.837000
	perf-misc  			0.293000
	perf-total		11.635000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.750000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.704000
	perf-misc  			0.237000
	perf-total		6.691000
==3839== 
==3839== HEAP SUMMARY:
==3839==     in use at exit: 16 bytes in 2 blocks
==3839==   total heap usage: 100,315 allocs, 100,313 frees, 111,176,049 bytes allocated
==3839== 
==3839== LEAK SUMMARY:
==3839==    definitely lost: 8 bytes in 1 blocks
==3839==    indirectly lost: 0 bytes in 0 blocks
==3839==      possibly lost: 0 bytes in 0 blocks
==3839==    still reachable: 0 bytes in 0 blocks
==3839==         suppressed: 8 bytes in 1 blocks
==3839== Rerun with --leak-check=full to see details of leaked memory
==3839== 
==3839== For counts of detected and suppressed errors, rerun with: -v
==3839== Use --track-origins=yes to see where uninitialised values come from
==3839== ERROR SUMMARY: 319 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-backwards=1    
==3844== Memcheck, a memory error detector
==3844== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3844== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3844== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1
==3844== 
==3844== Thread 3:
==3844== Conditional jump or move depends on uninitialised value(s)
==3844==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3844==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3844==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3844==    by 0x418B33: Thread::run() (thread.hpp:90)
==3844==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3844==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3844==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3844== 
==3844== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3844==    at 0x53D06C3: ??? (syscall-template.S:82)
==3844==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==  Address 0xaee2776 is 1,126 bytes inside a block of size 4,184 alloc'd
==3844==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3844==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3844== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.175000
	perf-erase 			0.314000
	perf-find  			0.000000
	perf-insert			0.547000
	perf-misc  			0.262000
	perf-total		7.298000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.683000
	perf-erase 			0.146000
	perf-find  			0.000000
	perf-insert			0.364000
	perf-misc  			0.233000
	perf-total		3.426000
==3844== 
==3844== HEAP SUMMARY:
==3844==     in use at exit: 16 bytes in 2 blocks
==3844==   total heap usage: 88,319 allocs, 88,317 frees, 110,010,619 bytes allocated
==3844== 
==3844== LEAK SUMMARY:
==3844==    definitely lost: 8 bytes in 1 blocks
==3844==    indirectly lost: 0 bytes in 0 blocks
==3844==      possibly lost: 0 bytes in 0 blocks
==3844==    still reachable: 0 bytes in 0 blocks
==3844==         suppressed: 8 bytes in 1 blocks
==3844== Rerun with --leak-check=full to see details of leaked memory
==3844== 
==3844== For counts of detected and suppressed errors, rerun with: -v
==3844== Use --track-origins=yes to see where uninitialised values come from
==3844== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1    
==3849== Memcheck, a memory error detector
==3849== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3849== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3849== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1
==3849== 
==3849== Thread 3:
==3849== Conditional jump or move depends on uninitialised value(s)
==3849==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3849==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3849==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3849==    by 0x418B33: Thread::run() (thread.hpp:90)
==3849==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3849==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3849==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3849== 
==3849== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3849==    at 0x53D06C3: ??? (syscall-template.S:82)
==3849==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3849==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3849==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3849==  Address 0xac72ede is 126 bytes inside a block of size 4,184 alloc'd
==3849==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3849==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3849==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3849== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.039000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.125000
	perf-misc  			0.260000
	perf-total		0.424000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.029000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.121000
	perf-misc  			0.209000
	perf-total		0.359000
==3849== 
==3849== HEAP SUMMARY:
==3849==     in use at exit: 16 bytes in 2 blocks
==3849==   total heap usage: 1,736 allocs, 1,734 frees, 105,831,815 bytes allocated
==3849== 
==3849== LEAK SUMMARY:
==3849==    definitely lost: 8 bytes in 1 blocks
==3849==    indirectly lost: 0 bytes in 0 blocks
==3849==      possibly lost: 0 bytes in 0 blocks
==3849==    still reachable: 0 bytes in 0 blocks
==3849==         suppressed: 8 bytes in 1 blocks
==3849== Rerun with --leak-check=full to see details of leaked memory
==3849== 
==3849== For counts of detected and suppressed errors, rerun with: -v
==3849== Use --track-origins=yes to see where uninitialised values come from
==3849== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1    
==3854== Memcheck, a memory error detector
==3854== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3854== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3854== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1
==3854== 
==3854== Thread 3:
==3854== Conditional jump or move depends on uninitialised value(s)
==3854==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3854==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3854==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3854==    by 0x418B33: Thread::run() (thread.hpp:90)
==3854==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3854==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3854==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3854== 
==3854== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3854==    at 0x53D06C3: ??? (syscall-template.S:82)
==3854==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3854==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3854==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3854==  Address 0xb28c46a is 410 bytes inside a block of size 4,184 alloc'd
==3854==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3854==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3854==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3854== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			36.118999
	perf-erase 			0.537000
	perf-find  			1.029000
	perf-insert			1.139000
	perf-misc  			0.232000
	perf-total		39.055999
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.566000
	perf-erase 			0.284000
	perf-find  			0.512000
	perf-insert			0.678000
	perf-misc  			0.220000
	perf-total		26.260001
==3854== 
==3854== HEAP SUMMARY:
==3854==     in use at exit: 16 bytes in 2 blocks
==3854==   total heap usage: 1,064,840 allocs, 1,064,838 frees, 138,846,201 bytes allocated
==3854== 
==3854== LEAK SUMMARY:
==3854==    definitely lost: 8 bytes in 1 blocks
==3854==    indirectly lost: 0 bytes in 0 blocks
==3854==      possibly lost: 0 bytes in 0 blocks
==3854==    still reachable: 0 bytes in 0 blocks
==3854==         suppressed: 8 bytes in 1 blocks
==3854== Rerun with --leak-check=full to see details of leaked memory
==3854== 
==3854== For counts of detected and suppressed errors, rerun with: -v
==3854== Use --track-origins=yes to see where uninitialised values come from
==3854== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1    
==3860== Memcheck, a memory error detector
==3860== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3860== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3860== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1
==3860== 
==3860== Thread 3:
==3860== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3860==    at 0x53D06C3: ??? (syscall-template.S:82)
==3860==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3860==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3860==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3860==  Address 0xac50900 is 3,984 bytes inside a block of size 4,184 alloc'd
==3860==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3860==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3860== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.553000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.441000
	perf-misc  			0.263000
	perf-total		7.257000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.955000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.339000
	perf-misc  			0.210000
	perf-total		3.504000
==3860== 
==3860== HEAP SUMMARY:
==3860==     in use at exit: 16 bytes in 2 blocks
==3860==   total heap usage: 1,332 allocs, 1,330 frees, 227,712,658 bytes allocated
==3860== 
==3860== LEAK SUMMARY:
==3860==    definitely lost: 8 bytes in 1 blocks
==3860==    indirectly lost: 0 bytes in 0 blocks
==3860==      possibly lost: 0 bytes in 0 blocks
==3860==    still reachable: 0 bytes in 0 blocks
==3860==         suppressed: 8 bytes in 1 blocks
==3860== Rerun with --leak-check=full to see details of leaked memory
==3860== 
==3860== For counts of detected and suppressed errors, rerun with: -v
==3860== Use --track-origins=yes to see where uninitialised values come from
==3860== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-backwards=1 --duplicate=1    
==3866== Memcheck, a memory error detector
==3866== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3866== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3866== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1 --duplicate=1
==3866== 
==3866== Thread 3:
==3866== Conditional jump or move depends on uninitialised value(s)
==3866==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3866==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3866==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3866==    by 0x418B33: Thread::run() (thread.hpp:90)
==3866==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3866==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3866==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3866== 
==3866== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3866==    at 0x53D06C3: ??? (syscall-template.S:82)
==3866==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3866==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3866==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3866==    by 0x418B33: Thread::run() (thread.hpp:90)
==3866==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3866==  Address 0xad41016 is 214 bytes inside a block of size 4,184 alloc'd
==3866==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3866==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3866==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3866== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.343999
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.861000
	perf-misc  			0.280000
	perf-total		11.485000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.559000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.770000
	perf-misc  			0.286000
	perf-total		6.615000
==3866== 
==3866== HEAP SUMMARY:
==3866==     in use at exit: 16 bytes in 2 blocks
==3866==   total heap usage: 100,315 allocs, 100,313 frees, 111,176,049 bytes allocated
==3866== 
==3866== LEAK SUMMARY:
==3866==    definitely lost: 8 bytes in 1 blocks
==3866==    indirectly lost: 0 bytes in 0 blocks
==3866==      possibly lost: 0 bytes in 0 blocks
==3866==    still reachable: 0 bytes in 0 blocks
==3866==         suppressed: 8 bytes in 1 blocks
==3866== Rerun with --leak-check=full to see details of leaked memory
==3866== 
==3866== For counts of detected and suppressed errors, rerun with: -v
==3866== Use --track-origins=yes to see where uninitialised values come from
==3866== ERROR SUMMARY: 319 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-backwards=1 --duplicate=1    
==3871== Memcheck, a memory error detector
==3871== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3871== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3871== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1 --duplicate=1
==3871== 
==3871== Thread 3:
==3871== Conditional jump or move depends on uninitialised value(s)
==3871==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3871==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3871==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3871==    by 0x418B33: Thread::run() (thread.hpp:90)
==3871==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3871==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3871==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3871== 
==3871== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3871==    at 0x53D06C3: ??? (syscall-template.S:82)
==3871==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4E63F80: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==  Address 0xae9a18f is 1,135 bytes inside a block of size 4,184 alloc'd
==3871==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3871==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3871== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		1548288
	perf-cursor			10.834000
	perf-erase 			0.456000
	perf-find  			0.000000
	perf-insert			0.743000
	perf-misc  			0.256000
	perf-total		12.289000
hamsterdb
	filesize		835584
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			4.705000
	perf-erase 			0.166000
	perf-find  			0.000000
	perf-insert			0.496000
	perf-misc  			0.202000
	perf-total		5.569000
==3871== 
==3871== HEAP SUMMARY:
==3871==     in use at exit: 16 bytes in 2 blocks
==3871==   total heap usage: 91,009 allocs, 91,007 frees, 111,073,985 bytes allocated
==3871== 
==3871== LEAK SUMMARY:
==3871==    definitely lost: 8 bytes in 1 blocks
==3871==    indirectly lost: 0 bytes in 0 blocks
==3871==      possibly lost: 0 bytes in 0 blocks
==3871==    still reachable: 0 bytes in 0 blocks
==3871==         suppressed: 8 bytes in 1 blocks
==3871== Rerun with --leak-check=full to see details of leaked memory
==3871== 
==3871== For counts of detected and suppressed errors, rerun with: -v
==3871== Use --track-origins=yes to see where uninitialised values come from
==3871== ERROR SUMMARY: 775 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --duplicate=1    
==3876== Memcheck, a memory error detector
==3876== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3876== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3876== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --duplicate=1
==3876== 
==3876== Thread 3:
==3876== Conditional jump or move depends on uninitialised value(s)
==3876==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3876==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3876==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3876==    by 0x418B33: Thread::run() (thread.hpp:90)
==3876==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3876==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3876==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3876== 
==3876== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3876==    at 0x53D06C3: ??? (syscall-template.S:82)
==3876==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3876==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3876==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3876==  Address 0xac72ede is 126 bytes inside a block of size 4,184 alloc'd
==3876==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3876==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3876==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3876== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.044000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.105000
	perf-misc  			0.272000
	perf-total		0.421000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.032000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.096000
	perf-misc  			0.216000
	perf-total		0.344000
==3876== 
==3876== HEAP SUMMARY:
==3876==     in use at exit: 16 bytes in 2 blocks
==3876==   total heap usage: 1,736 allocs, 1,734 frees, 105,831,815 bytes allocated
==3876== 
==3876== LEAK SUMMARY:
==3876==    definitely lost: 8 bytes in 1 blocks
==3876==    indirectly lost: 0 bytes in 0 blocks
==3876==      possibly lost: 0 bytes in 0 blocks
==3876==    still reachable: 0 bytes in 0 blocks
==3876==         suppressed: 8 bytes in 1 blocks
==3876== Rerun with --leak-check=full to see details of leaked memory
==3876== 
==3876== For counts of detected and suppressed errors, rerun with: -v
==3876== Use --track-origins=yes to see where uninitialised values come from
==3876== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --duplicate=1    
==3881== Memcheck, a memory error detector
==3881== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3881== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3881== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --duplicate=1
==3881== 
==3881== Thread 3:
==3881== Conditional jump or move depends on uninitialised value(s)
==3881==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3881==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3881==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3881==    by 0x418B33: Thread::run() (thread.hpp:90)
==3881==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3881==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3881==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3881== 
==3881== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3881==    at 0x53D06C3: ??? (syscall-template.S:82)
==3881==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==  Address 0x137bd282 is 562 bytes inside a block of size 4,184 alloc'd
==3881==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3881==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3881==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3881== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		1515520
	perf-cursor			731.069022
	perf-erase 			0.737000
	perf-find  			1.398000
	perf-insert			2.309000
	perf-misc  			0.201000
	perf-total		735.714017
hamsterdb
	filesize		1261568
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			549.227004
	perf-erase 			0.223000
	perf-find  			0.937000
	perf-insert			1.449000
	perf-misc  			0.185000
	perf-total		552.021000
==3881== 
==3881== HEAP SUMMARY:
==3881==     in use at exit: 16 bytes in 2 blocks
==3881==   total heap usage: 9,197,131 allocs, 9,197,129 frees, 404,677,456 bytes allocated
==3881== 
==3881== LEAK SUMMARY:
==3881==    definitely lost: 8 bytes in 1 blocks
==3881==    indirectly lost: 0 bytes in 0 blocks
==3881==      possibly lost: 0 bytes in 0 blocks
==3881==    still reachable: 0 bytes in 0 blocks
==3881==         suppressed: 8 bytes in 1 blocks
==3881== Rerun with --leak-check=full to see details of leaked memory
==3881== 
==3881== For counts of detected and suppressed errors, rerun with: -v
==3881== Use --track-origins=yes to see where uninitialised values come from
==3881== ERROR SUMMARY: 432 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --duplicate=1    
==3903== Memcheck, a memory error detector
==3903== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3903== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3903== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --duplicate=1
==3903== 
==3903== Thread 3:
==3903== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3903==    at 0x53D06C3: ??? (syscall-template.S:82)
==3903==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3903==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3903==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3903==  Address 0xac50268 is 3,576 bytes inside a block of size 4,184 alloc'd
==3903==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3903==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3903== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.596000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.546000
	perf-misc  			0.267000
	perf-total		9.409000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.955000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.121000
	perf-misc  			0.225000
	perf-total		2.301000
==3903== 
==3903== HEAP SUMMARY:
==3903==     in use at exit: 16 bytes in 2 blocks
==3903==   total heap usage: 1,334 allocs, 1,332 frees, 227,713,202 bytes allocated
==3903== 
==3903== LEAK SUMMARY:
==3903==    definitely lost: 8 bytes in 1 blocks
==3903==    indirectly lost: 0 bytes in 0 blocks
==3903==      possibly lost: 0 bytes in 0 blocks
==3903==    still reachable: 0 bytes in 0 blocks
==3903==         suppressed: 8 bytes in 1 blocks
==3903== Rerun with --leak-check=full to see details of leaked memory
==3903== 
==3903== For counts of detected and suppressed errors, rerun with: -v
==3903== Use --track-origins=yes to see where uninitialised values come from
==3903== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --fullcheck-backwards=1 --useralloc=1    
==3909== Memcheck, a memory error detector
==3909== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3909== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3909== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1 --useralloc=1
==3909== 
unknown parameter 'useralloc=1'
==3909== 
==3909== HEAP SUMMARY:
==3909==     in use at exit: 8,803 bytes in 131 blocks
==3909==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3909== 
==3909== LEAK SUMMARY:
==3909==    definitely lost: 0 bytes in 0 blocks
==3909==    indirectly lost: 0 bytes in 0 blocks
==3909==      possibly lost: 1,283 bytes in 18 blocks
==3909==    still reachable: 7,520 bytes in 113 blocks
==3909==         suppressed: 0 bytes in 0 blocks
==3909== Rerun with --leak-check=full to see details of leaked memory
==3909== 
==3909== For counts of detected and suppressed errors, rerun with: -v
==3909== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --fullcheck-backwards=1 --useralloc=1    
==3912== Memcheck, a memory error detector
==3912== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3912== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3912== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1 --useralloc=1
==3912== 
unknown parameter 'useralloc=1'
==3912== 
==3912== HEAP SUMMARY:
==3912==     in use at exit: 8,803 bytes in 131 blocks
==3912==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3912== 
==3912== LEAK SUMMARY:
==3912==    definitely lost: 0 bytes in 0 blocks
==3912==    indirectly lost: 0 bytes in 0 blocks
==3912==      possibly lost: 1,283 bytes in 18 blocks
==3912==    still reachable: 7,520 bytes in 113 blocks
==3912==         suppressed: 0 bytes in 0 blocks
==3912== Rerun with --leak-check=full to see details of leaked memory
==3912== 
==3912== For counts of detected and suppressed errors, rerun with: -v
==3912== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --useralloc=1    
==3915== Memcheck, a memory error detector
==3915== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3915== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3915== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --useralloc=1
==3915== 
unknown parameter 'useralloc=1'
==3915== 
==3915== HEAP SUMMARY:
==3915==     in use at exit: 8,803 bytes in 131 blocks
==3915==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3915== 
==3915== LEAK SUMMARY:
==3915==    definitely lost: 0 bytes in 0 blocks
==3915==    indirectly lost: 0 bytes in 0 blocks
==3915==      possibly lost: 1,283 bytes in 18 blocks
==3915==    still reachable: 7,520 bytes in 113 blocks
==3915==         suppressed: 0 bytes in 0 blocks
==3915== Rerun with --leak-check=full to see details of leaked memory
==3915== 
==3915== For counts of detected and suppressed errors, rerun with: -v
==3915== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --useralloc=1    
==3918== Memcheck, a memory error detector
==3918== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3918== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3918== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --useralloc=1
==3918== 
unknown parameter 'useralloc=1'
==3918== 
==3918== HEAP SUMMARY:
==3918==     in use at exit: 8,803 bytes in 131 blocks
==3918==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3918== 
==3918== LEAK SUMMARY:
==3918==    definitely lost: 0 bytes in 0 blocks
==3918==    indirectly lost: 0 bytes in 0 blocks
==3918==      possibly lost: 1,283 bytes in 18 blocks
==3918==    still reachable: 7,520 bytes in 113 blocks
==3918==         suppressed: 0 bytes in 0 blocks
==3918== Rerun with --leak-check=full to see details of leaked memory
==3918== 
==3918== For counts of detected and suppressed errors, rerun with: -v
==3918== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --useralloc=1    
==3921== Memcheck, a memory error detector
==3921== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3921== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3921== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --useralloc=1
==3921== 
unknown parameter 'useralloc=1'
==3921== 
==3921== HEAP SUMMARY:
==3921==     in use at exit: 8,803 bytes in 131 blocks
==3921==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3921== 
==3921== LEAK SUMMARY:
==3921==    definitely lost: 0 bytes in 0 blocks
==3921==    indirectly lost: 0 bytes in 0 blocks
==3921==      possibly lost: 1,283 bytes in 18 blocks
==3921==    still reachable: 7,520 bytes in 113 blocks
==3921==         suppressed: 0 bytes in 0 blocks
==3921== Rerun with --leak-check=full to see details of leaked memory
==3921== 
==3921== For counts of detected and suppressed errors, rerun with: -v
==3921== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --useralloc=1    
==3925== Memcheck, a memory error detector
==3925== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3925== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3925== Command: ./test ../../testfiles/1/45.tst --useralloc=1
==3925== 
unknown parameter 'useralloc=1'
==3925== 
==3925== HEAP SUMMARY:
==3925==     in use at exit: 8,803 bytes in 131 blocks
==3925==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3925== 
==3925== LEAK SUMMARY:
==3925==    definitely lost: 0 bytes in 0 blocks
==3925==    indirectly lost: 0 bytes in 0 blocks
==3925==      possibly lost: 1,283 bytes in 18 blocks
==3925==    still reachable: 7,520 bytes in 113 blocks
==3925==         suppressed: 0 bytes in 0 blocks
==3925== Rerun with --leak-check=full to see details of leaked memory
==3925== 
==3925== For counts of detected and suppressed errors, rerun with: -v
==3925== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --useralloc=1    
==3928== Memcheck, a memory error detector
==3928== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3928== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3928== Command: ./test ../../testfiles/1/220.tst --useralloc=1
==3928== 
unknown parameter 'useralloc=1'
==3928== 
==3928== HEAP SUMMARY:
==3928==     in use at exit: 8,803 bytes in 131 blocks
==3928==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3928== 
==3928== LEAK SUMMARY:
==3928==    definitely lost: 0 bytes in 0 blocks
==3928==    indirectly lost: 0 bytes in 0 blocks
==3928==      possibly lost: 1,283 bytes in 18 blocks
==3928==    still reachable: 7,520 bytes in 113 blocks
==3928==         suppressed: 0 bytes in 0 blocks
==3928== Rerun with --leak-check=full to see details of leaked memory
==3928== 
==3928== For counts of detected and suppressed errors, rerun with: -v
==3928== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --useralloc=1    
==3931== Memcheck, a memory error detector
==3931== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3931== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3931== Command: ./test ../../testfiles/1/ext_020.tst --useralloc=1
==3931== 
unknown parameter 'useralloc=1'
==3931== 
==3931== HEAP SUMMARY:
==3931==     in use at exit: 8,803 bytes in 131 blocks
==3931==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3931== 
==3931== LEAK SUMMARY:
==3931==    definitely lost: 0 bytes in 0 blocks
==3931==    indirectly lost: 0 bytes in 0 blocks
==3931==      possibly lost: 1,283 bytes in 18 blocks
==3931==    still reachable: 7,520 bytes in 113 blocks
==3931==         suppressed: 0 bytes in 0 blocks
==3931== Rerun with --leak-check=full to see details of leaked memory
==3931== 
==3931== For counts of detected and suppressed errors, rerun with: -v
==3931== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --useralloc=1    
==3934== Memcheck, a memory error detector
==3934== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3934== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3934== Command: ./test ../../testfiles/2/ext_060.tst --useralloc=1
==3934== 
unknown parameter 'useralloc=1'
==3934== 
==3934== HEAP SUMMARY:
==3934==     in use at exit: 8,803 bytes in 131 blocks
==3934==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3934== 
==3934== LEAK SUMMARY:
==3934==    definitely lost: 0 bytes in 0 blocks
==3934==    indirectly lost: 0 bytes in 0 blocks
==3934==      possibly lost: 1,283 bytes in 18 blocks
==3934==    still reachable: 7,520 bytes in 113 blocks
==3934==         suppressed: 0 bytes in 0 blocks
==3934== Rerun with --leak-check=full to see details of leaked memory
==3934== 
==3934== For counts of detected and suppressed errors, rerun with: -v
==3934== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --useralloc=1    
==3937== Memcheck, a memory error detector
==3937== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3937== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3937== Command: ./test ../../testfiles/2/blb-001.tst --useralloc=1
==3937== 
unknown parameter 'useralloc=1'
==3937== 
==3937== HEAP SUMMARY:
==3937==     in use at exit: 8,803 bytes in 131 blocks
==3937==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==3937== 
==3937== LEAK SUMMARY:
==3937==    definitely lost: 0 bytes in 0 blocks
==3937==    indirectly lost: 0 bytes in 0 blocks
==3937==      possibly lost: 1,283 bytes in 18 blocks
==3937==    still reachable: 7,520 bytes in 113 blocks
==3937==         suppressed: 0 bytes in 0 blocks
==3937== Rerun with --leak-check=full to see details of leaked memory
==3937== 
==3937== For counts of detected and suppressed errors, rerun with: -v
==3937== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==3941== Memcheck, a memory error detector
==3941== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3941== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3941== Command: ./test ../../testfiles/1/45.tst --disable-mmap=1 --overwrite=1 --reopen=1
==3941== 
==3941== Thread 3:
==3941== Conditional jump or move depends on uninitialised value(s)
==3941==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3941==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3941==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3941==    by 0x418B33: Thread::run() (thread.hpp:90)
==3941==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3941==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3941==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3941== 
==3941== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3941==    at 0x53D06C3: ??? (syscall-template.S:82)
==3941==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3941==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3941==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3941==    by 0x418B33: Thread::run() (thread.hpp:90)
==3941==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3941==  Address 0xad41706 is 214 bytes inside a block of size 4,184 alloc'd
==3941==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3941==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3941==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3941== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.375000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.876000
	perf-misc  			0.368000
	perf-total		11.619000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.789000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.768000
	perf-misc  			0.379000
	perf-total		6.936000
==3941== 
==3941== HEAP SUMMARY:
==3941==     in use at exit: 16 bytes in 2 blocks
==3941==   total heap usage: 100,665 allocs, 100,663 frees, 112,913,511 bytes allocated
==3941== 
==3941== LEAK SUMMARY:
==3941==    definitely lost: 8 bytes in 1 blocks
==3941==    indirectly lost: 0 bytes in 0 blocks
==3941==      possibly lost: 0 bytes in 0 blocks
==3941==    still reachable: 0 bytes in 0 blocks
==3941==         suppressed: 8 bytes in 1 blocks
==3941== Rerun with --leak-check=full to see details of leaked memory
==3941== 
==3941== For counts of detected and suppressed errors, rerun with: -v
==3941== Use --track-origins=yes to see where uninitialised values come from
==3941== ERROR SUMMARY: 314 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==3946== Memcheck, a memory error detector
==3946== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3946== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3946== Command: ./test ../../testfiles/1/220.tst --disable-mmap=1 --overwrite=1 --reopen=1
==3946== 
==3946== Thread 3:
==3946== Conditional jump or move depends on uninitialised value(s)
==3946==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3946==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3946==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3946==    by 0x418B33: Thread::run() (thread.hpp:90)
==3946==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3946==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3946==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3946== 
==3946== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3946==    at 0x53D06C3: ??? (syscall-template.S:82)
==3946==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==3946==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3946==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3946==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3946== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.287000
	perf-erase 			0.315000
	perf-find  			0.000000
	perf-insert			0.587000
	perf-misc  			0.356000
	perf-total		7.545000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.652000
	perf-erase 			0.142000
	perf-find  			0.000000
	perf-insert			0.434000
	perf-misc  			0.325000
	perf-total		3.553000
==3946== 
==3946== HEAP SUMMARY:
==3946==     in use at exit: 16 bytes in 2 blocks
==3946==   total heap usage: 88,641 allocs, 88,639 frees, 111,407,259 bytes allocated
==3946== 
==3946== LEAK SUMMARY:
==3946==    definitely lost: 8 bytes in 1 blocks
==3946==    indirectly lost: 0 bytes in 0 blocks
==3946==      possibly lost: 0 bytes in 0 blocks
==3946==    still reachable: 0 bytes in 0 blocks
==3946==         suppressed: 8 bytes in 1 blocks
==3946== Rerun with --leak-check=full to see details of leaked memory
==3946== 
==3946== For counts of detected and suppressed errors, rerun with: -v
==3946== Use --track-origins=yes to see where uninitialised values come from
==3946== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==3951== Memcheck, a memory error detector
==3951== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3951== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3951== Command: ./test ../../testfiles/1/ext_020.tst --disable-mmap=1 --overwrite=1 --reopen=1
==3951== 
==3951== Thread 3:
==3951== Conditional jump or move depends on uninitialised value(s)
==3951==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3951==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3951==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3951==    by 0x418B33: Thread::run() (thread.hpp:90)
==3951==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3951==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3951==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3951== 
==3951== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3951==    at 0x53D06C3: ??? (syscall-template.S:82)
==3951==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3951==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3951==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3951==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==3951==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3951==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3951==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3951== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.043000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.112000
	perf-misc  			0.318000
	perf-total		0.473000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.035000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.135000
	perf-misc  			0.275000
	perf-total		0.445000
==3951== 
==3951== HEAP SUMMARY:
==3951==     in use at exit: 16 bytes in 2 blocks
==3951==   total heap usage: 1,982 allocs, 1,980 frees, 106,561,578 bytes allocated
==3951== 
==3951== LEAK SUMMARY:
==3951==    definitely lost: 8 bytes in 1 blocks
==3951==    indirectly lost: 0 bytes in 0 blocks
==3951==      possibly lost: 0 bytes in 0 blocks
==3951==    still reachable: 0 bytes in 0 blocks
==3951==         suppressed: 8 bytes in 1 blocks
==3951== Rerun with --leak-check=full to see details of leaked memory
==3951== 
==3951== For counts of detected and suppressed errors, rerun with: -v
==3951== Use --track-origins=yes to see where uninitialised values come from
==3951== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==3956== Memcheck, a memory error detector
==3956== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3956== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3956== Command: ./test ../../testfiles/2/ext_060.tst --disable-mmap=1 --overwrite=1 --reopen=1
==3956== 
==3956== Thread 3:
==3956== Conditional jump or move depends on uninitialised value(s)
==3956==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3956==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3956==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3956==    by 0x418B33: Thread::run() (thread.hpp:90)
==3956==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3956==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3956==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3956== 
==3956== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3956==    at 0x53D06C3: ??? (syscall-template.S:82)
==3956==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3956==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3956==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3956==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==3956==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3956==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3956==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3956== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.748998
	perf-erase 			0.542000
	perf-find  			1.030000
	perf-insert			1.714000
	perf-misc  			0.365000
	perf-total		41.400001
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.162001
	perf-erase 			0.254000
	perf-find  			0.520000
	perf-insert			1.005000
	perf-misc  			0.266000
	perf-total		26.207001
==3956== 
==3956== HEAP SUMMARY:
==3956==     in use at exit: 16 bytes in 2 blocks
==3956==   total heap usage: 1,065,301 allocs, 1,065,299 frees, 139,580,106 bytes allocated
==3956== 
==3956== LEAK SUMMARY:
==3956==    definitely lost: 8 bytes in 1 blocks
==3956==    indirectly lost: 0 bytes in 0 blocks
==3956==      possibly lost: 0 bytes in 0 blocks
==3956==    still reachable: 0 bytes in 0 blocks
==3956==         suppressed: 8 bytes in 1 blocks
==3956== Rerun with --leak-check=full to see details of leaked memory
==3956== 
==3956== For counts of detected and suppressed errors, rerun with: -v
==3956== Use --track-origins=yes to see where uninitialised values come from
==3956== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==3961== Memcheck, a memory error detector
==3961== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3961== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3961== Command: ./test ../../testfiles/2/blb-001.tst --disable-mmap=1 --overwrite=1 --reopen=1
==3961== 
==3961== Thread 3:
==3961== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3961==    at 0x53D06C3: ??? (syscall-template.S:82)
==3961==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3961==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3961==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3961==  Address 0xac504f4 is 3,588 bytes inside a block of size 4,184 alloc'd
==3961==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3961==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3961== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.710000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.024000
	perf-misc  			2.329000
	perf-total		7.063000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.129000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.944000
	perf-misc  			2.340000
	perf-total		3.413000
==3961== 
==3961== HEAP SUMMARY:
==3961==     in use at exit: 16 bytes in 2 blocks
==3961==   total heap usage: 1,572 allocs, 1,570 frees, 190,143,008 bytes allocated
==3961== 
==3961== LEAK SUMMARY:
==3961==    definitely lost: 8 bytes in 1 blocks
==3961==    indirectly lost: 0 bytes in 0 blocks
==3961==      possibly lost: 0 bytes in 0 blocks
==3961==    still reachable: 0 bytes in 0 blocks
==3961==         suppressed: 8 bytes in 1 blocks
==3961== Rerun with --leak-check=full to see details of leaked memory
==3961== 
==3961== For counts of detected and suppressed errors, rerun with: -v
==3961== Use --track-origins=yes to see where uninitialised values come from
==3961== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --keysize=8 --overwrite=1 --reopen=1    
==3967== Memcheck, a memory error detector
==3967== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3967== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3967== Command: ./test ../../testfiles/1/45.tst --keysize=8 --overwrite=1 --reopen=1
==3967== 
==3967== Thread 3:
==3967== Conditional jump or move depends on uninitialised value(s)
==3967==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3967==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3967==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3967==    by 0x418B33: Thread::run() (thread.hpp:90)
==3967==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3967==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3967==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3967== 
==3967== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3967==    at 0x53D06C3: ??? (syscall-template.S:82)
==3967==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3967==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3967==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3967==    by 0x418B33: Thread::run() (thread.hpp:90)
==3967==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3967==  Address 0xad41706 is 214 bytes inside a block of size 4,184 alloc'd
==3967==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3967==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3967==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3967== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.272000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.940000
	perf-misc  			0.414000
	perf-total		11.626000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.845000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.793000
	perf-misc  			0.306000
	perf-total		6.944000
==3967== 
==3967== HEAP SUMMARY:
==3967==     in use at exit: 16 bytes in 2 blocks
==3967==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==3967== 
==3967== LEAK SUMMARY:
==3967==    definitely lost: 8 bytes in 1 blocks
==3967==    indirectly lost: 0 bytes in 0 blocks
==3967==      possibly lost: 0 bytes in 0 blocks
==3967==    still reachable: 0 bytes in 0 blocks
==3967==         suppressed: 8 bytes in 1 blocks
==3967== Rerun with --leak-check=full to see details of leaked memory
==3967== 
==3967== For counts of detected and suppressed errors, rerun with: -v
==3967== Use --track-origins=yes to see where uninitialised values come from
==3967== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --keysize=8 --overwrite=1 --reopen=1    
==3973== Memcheck, a memory error detector
==3973== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3973== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3973== Command: ./test ../../testfiles/1/220.tst --keysize=8 --overwrite=1 --reopen=1
==3973== 
==3973== Thread 3:
==3973== Conditional jump or move depends on uninitialised value(s)
==3973==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3973==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3973==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3973==    by 0x418B33: Thread::run() (thread.hpp:90)
==3973==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3973==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3973==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3973== 
==3973== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3973==    at 0x53D06C3: ??? (syscall-template.S:82)
==3973==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==3973==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3973==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3973==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3973== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.232000
	perf-erase 			0.315000
	perf-find  			0.000000
	perf-insert			0.640000
	perf-misc  			0.358000
	perf-total		7.545000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.659000
	perf-erase 			0.141000
	perf-find  			0.000000
	perf-insert			0.411000
	perf-misc  			0.254000
	perf-total		3.465000
==3973== 
==3973== HEAP SUMMARY:
==3973==     in use at exit: 16 bytes in 2 blocks
==3973==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==3973== 
==3973== LEAK SUMMARY:
==3973==    definitely lost: 8 bytes in 1 blocks
==3973==    indirectly lost: 0 bytes in 0 blocks
==3973==      possibly lost: 0 bytes in 0 blocks
==3973==    still reachable: 0 bytes in 0 blocks
==3973==         suppressed: 8 bytes in 1 blocks
==3973== Rerun with --leak-check=full to see details of leaked memory
==3973== 
==3973== For counts of detected and suppressed errors, rerun with: -v
==3973== Use --track-origins=yes to see where uninitialised values come from
==3973== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --keysize=8 --overwrite=1 --reopen=1    
==3978== Memcheck, a memory error detector
==3978== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3978== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3978== Command: ./test ../../testfiles/1/ext_020.tst --keysize=8 --overwrite=1 --reopen=1
==3978== 
==3978== Thread 3:
==3978== Conditional jump or move depends on uninitialised value(s)
==3978==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3978==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3978==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3978==    by 0x418B33: Thread::run() (thread.hpp:90)
==3978==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3978==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3978==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3978== 
==3978== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3978==    at 0x53D06C3: ??? (syscall-template.S:82)
==3978==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3978==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3978==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3978==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==3978==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3978==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3978==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3978== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.045000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.102000
	perf-misc  			0.358000
	perf-total		0.505000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.030000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.127000
	perf-misc  			0.285000
	perf-total		0.442000
==3978== 
==3978== HEAP SUMMARY:
==3978==     in use at exit: 16 bytes in 2 blocks
==3978==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==3978== 
==3978== LEAK SUMMARY:
==3978==    definitely lost: 8 bytes in 1 blocks
==3978==    indirectly lost: 0 bytes in 0 blocks
==3978==      possibly lost: 0 bytes in 0 blocks
==3978==    still reachable: 0 bytes in 0 blocks
==3978==         suppressed: 8 bytes in 1 blocks
==3978== Rerun with --leak-check=full to see details of leaked memory
==3978== 
==3978== For counts of detected and suppressed errors, rerun with: -v
==3978== Use --track-origins=yes to see where uninitialised values come from
==3978== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --keysize=8 --overwrite=1 --reopen=1    
==3983== Memcheck, a memory error detector
==3983== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3983== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3983== Command: ./test ../../testfiles/2/ext_060.tst --keysize=8 --overwrite=1 --reopen=1
==3983== 
==3983== Thread 3:
==3983== Conditional jump or move depends on uninitialised value(s)
==3983==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3983==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3983==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3983==    by 0x418B33: Thread::run() (thread.hpp:90)
==3983==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3983==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3983==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3983== 
==3983== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3983==    at 0x53D06C3: ??? (syscall-template.S:82)
==3983==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3983==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3983==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3983==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==3983==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3983==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3983==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3983== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.231002
	perf-erase 			0.560000
	perf-find  			1.057000
	perf-insert			1.690000
	perf-misc  			0.380000
	perf-total		40.918000
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.334000
	perf-erase 			0.260000
	perf-find  			0.453000
	perf-insert			0.948000
	perf-misc  			0.184000
	perf-total		26.179000
==3983== 
==3983== HEAP SUMMARY:
==3983==     in use at exit: 16 bytes in 2 blocks
==3983==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==3983== 
==3983== LEAK SUMMARY:
==3983==    definitely lost: 8 bytes in 1 blocks
==3983==    indirectly lost: 0 bytes in 0 blocks
==3983==      possibly lost: 0 bytes in 0 blocks
==3983==    still reachable: 0 bytes in 0 blocks
==3983==         suppressed: 8 bytes in 1 blocks
==3983== Rerun with --leak-check=full to see details of leaked memory
==3983== 
==3983== For counts of detected and suppressed errors, rerun with: -v
==3983== Use --track-origins=yes to see where uninitialised values come from
==3983== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --keysize=8 --overwrite=1 --reopen=1    
==3988== Memcheck, a memory error detector
==3988== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3988== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3988== Command: ./test ../../testfiles/2/blb-001.tst --keysize=8 --overwrite=1 --reopen=1
==3988== 
==3988== Thread 3:
==3988== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3988==    at 0x53D06C3: ??? (syscall-template.S:82)
==3988==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==3988==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==3988==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==3988==  Address 0xac504f4 is 3,588 bytes inside a block of size 4,184 alloc'd
==3988==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3988==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3988== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.719000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.246000
	perf-misc  			2.071000
	perf-total		7.036000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.132000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.978000
	perf-misc  			2.038000
	perf-total		3.148000
==3988== 
==3988== HEAP SUMMARY:
==3988==     in use at exit: 16 bytes in 2 blocks
==3988==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==3988== 
==3988== LEAK SUMMARY:
==3988==    definitely lost: 8 bytes in 1 blocks
==3988==    indirectly lost: 0 bytes in 0 blocks
==3988==      possibly lost: 0 bytes in 0 blocks
==3988==    still reachable: 0 bytes in 0 blocks
==3988==         suppressed: 8 bytes in 1 blocks
==3988== Rerun with --leak-check=full to see details of leaked memory
==3988== 
==3988== For counts of detected and suppressed errors, rerun with: -v
==3988== Use --track-origins=yes to see where uninitialised values come from
==3988== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --keysize=12 --overwrite=1 --reopen=1    
==3994== Memcheck, a memory error detector
==3994== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3994== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3994== Command: ./test ../../testfiles/1/45.tst --keysize=12 --overwrite=1 --reopen=1
==3994== 
==3994== Thread 3:
==3994== Conditional jump or move depends on uninitialised value(s)
==3994==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3994==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3994==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3994==    by 0x418B33: Thread::run() (thread.hpp:90)
==3994==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3994==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3994==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3994== 
==3994== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3994==    at 0x53D06C3: ??? (syscall-template.S:82)
==3994==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==3994==    by 0x415C78: Engine::flush() (engine.cpp:314)
==3994==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==3994==    by 0x418B33: Thread::run() (thread.hpp:90)
==3994==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3994==  Address 0xad41416 is 214 bytes inside a block of size 4,184 alloc'd
==3994==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3994==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3994==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3994== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.475000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.848000
	perf-misc  			0.435000
	perf-total		11.758000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.891000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.674000
	perf-misc  			0.336000
	perf-total		6.901000
==3994== 
==3994== HEAP SUMMARY:
==3994==     in use at exit: 16 bytes in 2 blocks
==3994==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==3994== 
==3994== LEAK SUMMARY:
==3994==    definitely lost: 8 bytes in 1 blocks
==3994==    indirectly lost: 0 bytes in 0 blocks
==3994==      possibly lost: 0 bytes in 0 blocks
==3994==    still reachable: 0 bytes in 0 blocks
==3994==         suppressed: 8 bytes in 1 blocks
==3994== Rerun with --leak-check=full to see details of leaked memory
==3994== 
==3994== For counts of detected and suppressed errors, rerun with: -v
==3994== Use --track-origins=yes to see where uninitialised values come from
==3994== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --keysize=12 --overwrite=1 --reopen=1    
==3999== Memcheck, a memory error detector
==3999== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3999== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3999== Command: ./test ../../testfiles/1/220.tst --keysize=12 --overwrite=1 --reopen=1
==3999== 
==3999== Thread 3:
==3999== Conditional jump or move depends on uninitialised value(s)
==3999==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3999==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==3999==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==3999==    by 0x418B33: Thread::run() (thread.hpp:90)
==3999==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==3999==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==3999==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==3999== 
==3999== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3999==    at 0x53D06C3: ??? (syscall-template.S:82)
==3999==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==3999==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3999==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==3999==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==3999== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.292000
	perf-erase 			0.355000
	perf-find  			0.000000
	perf-insert			0.641000
	perf-misc  			0.331000
	perf-total		7.619000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.703000
	perf-erase 			0.139000
	perf-find  			0.000000
	perf-insert			0.458000
	perf-misc  			0.220000
	perf-total		3.520000
==3999== 
==3999== HEAP SUMMARY:
==3999==     in use at exit: 16 bytes in 2 blocks
==3999==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==3999== 
==3999== LEAK SUMMARY:
==3999==    definitely lost: 8 bytes in 1 blocks
==3999==    indirectly lost: 0 bytes in 0 blocks
==3999==      possibly lost: 0 bytes in 0 blocks
==3999==    still reachable: 0 bytes in 0 blocks
==3999==         suppressed: 8 bytes in 1 blocks
==3999== Rerun with --leak-check=full to see details of leaked memory
==3999== 
==3999== For counts of detected and suppressed errors, rerun with: -v
==3999== Use --track-origins=yes to see where uninitialised values come from
==3999== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --keysize=12 --overwrite=1 --reopen=1    
==4004== Memcheck, a memory error detector
==4004== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4004== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4004== Command: ./test ../../testfiles/1/ext_020.tst --keysize=12 --overwrite=1 --reopen=1
==4004== 
==4004== Thread 3:
==4004== Conditional jump or move depends on uninitialised value(s)
==4004==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4004==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4004==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4004==    by 0x418B33: Thread::run() (thread.hpp:90)
==4004==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4004==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4004==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4004== 
==4004== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4004==    at 0x53D06C3: ??? (syscall-template.S:82)
==4004==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4004==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4004==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4004==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==4004==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4004==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4004==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4004== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.042000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.137000
	perf-misc  			0.420000
	perf-total		0.599000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.128000
	perf-misc  			0.239000
	perf-total		0.398000
==4004== 
==4004== HEAP SUMMARY:
==4004==     in use at exit: 16 bytes in 2 blocks
==4004==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==4004== 
==4004== LEAK SUMMARY:
==4004==    definitely lost: 8 bytes in 1 blocks
==4004==    indirectly lost: 0 bytes in 0 blocks
==4004==      possibly lost: 0 bytes in 0 blocks
==4004==    still reachable: 0 bytes in 0 blocks
==4004==         suppressed: 8 bytes in 1 blocks
==4004== Rerun with --leak-check=full to see details of leaked memory
==4004== 
==4004== For counts of detected and suppressed errors, rerun with: -v
==4004== Use --track-origins=yes to see where uninitialised values come from
==4004== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --keysize=12 --overwrite=1 --reopen=1    
==4009== Memcheck, a memory error detector
==4009== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4009== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4009== Command: ./test ../../testfiles/2/ext_060.tst --keysize=12 --overwrite=1 --reopen=1
==4009== 
==4009== Thread 3:
==4009== Conditional jump or move depends on uninitialised value(s)
==4009==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4009==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4009==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4009==    by 0x418B33: Thread::run() (thread.hpp:90)
==4009==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4009==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4009==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4009== 
==4009== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4009==    at 0x53D06C3: ??? (syscall-template.S:82)
==4009==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4009==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4009==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4009==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==4009==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4009==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4009==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4009== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.995999
	perf-erase 			0.534000
	perf-find  			1.104000
	perf-insert			1.738000
	perf-misc  			0.306000
	perf-total		41.678000
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.295000
	perf-erase 			0.250000
	perf-find  			0.469000
	perf-insert			1.008000
	perf-misc  			0.298000
	perf-total		26.319999
==4009== 
==4009== HEAP SUMMARY:
==4009==     in use at exit: 16 bytes in 2 blocks
==4009==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==4009== 
==4009== LEAK SUMMARY:
==4009==    definitely lost: 8 bytes in 1 blocks
==4009==    indirectly lost: 0 bytes in 0 blocks
==4009==      possibly lost: 0 bytes in 0 blocks
==4009==    still reachable: 0 bytes in 0 blocks
==4009==         suppressed: 8 bytes in 1 blocks
==4009== Rerun with --leak-check=full to see details of leaked memory
==4009== 
==4009== For counts of detected and suppressed errors, rerun with: -v
==4009== Use --track-origins=yes to see where uninitialised values come from
==4009== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --keysize=12 --overwrite=1 --reopen=1    
==4014== Memcheck, a memory error detector
==4014== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4014== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4014== Command: ./test ../../testfiles/2/blb-001.tst --keysize=12 --overwrite=1 --reopen=1
==4014== 
==4014== Thread 3:
==4014== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4014==    at 0x53D06C3: ??? (syscall-template.S:82)
==4014==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4014==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4014==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4014==  Address 0xac58064 is 3,588 bytes inside a block of size 4,184 alloc'd
==4014==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4014==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4014== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.727000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.768000
	perf-misc  			2.161000
	perf-total		4.656000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.128000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.481000
	perf-misc  			2.100000
	perf-total		5.709000
==4014== 
==4014== HEAP SUMMARY:
==4014==     in use at exit: 16 bytes in 2 blocks
==4014==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==4014== 
==4014== LEAK SUMMARY:
==4014==    definitely lost: 8 bytes in 1 blocks
==4014==    indirectly lost: 0 bytes in 0 blocks
==4014==      possibly lost: 0 bytes in 0 blocks
==4014==    still reachable: 0 bytes in 0 blocks
==4014==         suppressed: 8 bytes in 1 blocks
==4014== Rerun with --leak-check=full to see details of leaked memory
==4014== 
==4014== For counts of detected and suppressed errors, rerun with: -v
==4014== Use --track-origins=yes to see where uninitialised values come from
==4014== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --keysize=33 --overwrite=1 --reopen=1    
==4020== Memcheck, a memory error detector
==4020== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4020== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4020== Command: ./test ../../testfiles/1/45.tst --keysize=33 --overwrite=1 --reopen=1
==4020== 
==4020== Thread 3:
==4020== Conditional jump or move depends on uninitialised value(s)
==4020==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4020==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4020==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4020==    by 0x418B33: Thread::run() (thread.hpp:90)
==4020==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4020==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4020==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4020== 
==4020== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4020==    at 0x53D06C3: ??? (syscall-template.S:82)
==4020==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4020==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4020==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4020==    by 0x418B33: Thread::run() (thread.hpp:90)
==4020==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4020==  Address 0xad41706 is 214 bytes inside a block of size 4,184 alloc'd
==4020==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4020==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4020==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4020== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.566000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.911000
	perf-misc  			0.396000
	perf-total		11.873000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.791000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.735000
	perf-misc  			0.293000
	perf-total		6.819000
==4020== 
==4020== HEAP SUMMARY:
==4020==     in use at exit: 16 bytes in 2 blocks
==4020==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==4020== 
==4020== LEAK SUMMARY:
==4020==    definitely lost: 8 bytes in 1 blocks
==4020==    indirectly lost: 0 bytes in 0 blocks
==4020==      possibly lost: 0 bytes in 0 blocks
==4020==    still reachable: 0 bytes in 0 blocks
==4020==         suppressed: 8 bytes in 1 blocks
==4020== Rerun with --leak-check=full to see details of leaked memory
==4020== 
==4020== For counts of detected and suppressed errors, rerun with: -v
==4020== Use --track-origins=yes to see where uninitialised values come from
==4020== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --keysize=33 --overwrite=1 --reopen=1    
==4025== Memcheck, a memory error detector
==4025== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4025== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4025== Command: ./test ../../testfiles/1/220.tst --keysize=33 --overwrite=1 --reopen=1
==4025== 
==4025== Thread 3:
==4025== Conditional jump or move depends on uninitialised value(s)
==4025==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4025==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4025==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4025==    by 0x418B33: Thread::run() (thread.hpp:90)
==4025==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4025==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4025==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4025== 
==4025== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4025==    at 0x53D06C3: ??? (syscall-template.S:82)
==4025==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==4025==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4025==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4025==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4025== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.201000
	perf-erase 			0.304000
	perf-find  			0.000000
	perf-insert			0.612000
	perf-misc  			0.345000
	perf-total		7.462000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.529000
	perf-erase 			0.144000
	perf-find  			0.000000
	perf-insert			0.409000
	perf-misc  			0.234000
	perf-total		3.316000
==4025== 
==4025== HEAP SUMMARY:
==4025==     in use at exit: 16 bytes in 2 blocks
==4025==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==4025== 
==4025== LEAK SUMMARY:
==4025==    definitely lost: 8 bytes in 1 blocks
==4025==    indirectly lost: 0 bytes in 0 blocks
==4025==      possibly lost: 0 bytes in 0 blocks
==4025==    still reachable: 0 bytes in 0 blocks
==4025==         suppressed: 8 bytes in 1 blocks
==4025== Rerun with --leak-check=full to see details of leaked memory
==4025== 
==4025== For counts of detected and suppressed errors, rerun with: -v
==4025== Use --track-origins=yes to see where uninitialised values come from
==4025== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --keysize=33 --overwrite=1 --reopen=1    
==4030== Memcheck, a memory error detector
==4030== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4030== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4030== Command: ./test ../../testfiles/1/ext_020.tst --keysize=33 --overwrite=1 --reopen=1
==4030== 
==4030== Thread 3:
==4030== Conditional jump or move depends on uninitialised value(s)
==4030==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4030==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4030==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4030==    by 0x418B33: Thread::run() (thread.hpp:90)
==4030==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4030==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4030==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4030== 
==4030== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4030==    at 0x53D06C3: ??? (syscall-template.S:82)
==4030==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4030==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4030==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4030==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==4030==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4030==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4030==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4030== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.040000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.135000
	perf-misc  			0.321000
	perf-total		0.496000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.119000
	perf-misc  			0.190000
	perf-total		0.340000
==4030== 
==4030== HEAP SUMMARY:
==4030==     in use at exit: 16 bytes in 2 blocks
==4030==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==4030== 
==4030== LEAK SUMMARY:
==4030==    definitely lost: 8 bytes in 1 blocks
==4030==    indirectly lost: 0 bytes in 0 blocks
==4030==      possibly lost: 0 bytes in 0 blocks
==4030==    still reachable: 0 bytes in 0 blocks
==4030==         suppressed: 8 bytes in 1 blocks
==4030== Rerun with --leak-check=full to see details of leaked memory
==4030== 
==4030== For counts of detected and suppressed errors, rerun with: -v
==4030== Use --track-origins=yes to see where uninitialised values come from
==4030== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --keysize=33 --overwrite=1 --reopen=1    
==4035== Memcheck, a memory error detector
==4035== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4035== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4035== Command: ./test ../../testfiles/2/ext_060.tst --keysize=33 --overwrite=1 --reopen=1
==4035== 
==4035== Thread 3:
==4035== Conditional jump or move depends on uninitialised value(s)
==4035==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4035==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4035==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4035==    by 0x418B33: Thread::run() (thread.hpp:90)
==4035==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4035==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4035==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4035== 
==4035== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4035==    at 0x53D06C3: ??? (syscall-template.S:82)
==4035==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4035==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4035==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4035==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==4035==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4035==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4035==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4035== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.591998
	perf-erase 			0.593000
	perf-find  			1.021000
	perf-insert			1.838000
	perf-misc  			0.408000
	perf-total		41.451999
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.505000
	perf-erase 			0.249000
	perf-find  			0.478000
	perf-insert			0.984000
	perf-misc  			0.214000
	perf-total		26.429999
==4035== 
==4035== HEAP SUMMARY:
==4035==     in use at exit: 16 bytes in 2 blocks
==4035==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==4035== 
==4035== LEAK SUMMARY:
==4035==    definitely lost: 8 bytes in 1 blocks
==4035==    indirectly lost: 0 bytes in 0 blocks
==4035==      possibly lost: 0 bytes in 0 blocks
==4035==    still reachable: 0 bytes in 0 blocks
==4035==         suppressed: 8 bytes in 1 blocks
==4035== Rerun with --leak-check=full to see details of leaked memory
==4035== 
==4035== For counts of detected and suppressed errors, rerun with: -v
==4035== Use --track-origins=yes to see where uninitialised values come from
==4035== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --keysize=33 --overwrite=1 --reopen=1    
==4049== Memcheck, a memory error detector
==4049== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4049== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4049== Command: ./test ../../testfiles/2/blb-001.tst --keysize=33 --overwrite=1 --reopen=1
==4049== 
==4049== Thread 3:
==4049== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4049==    at 0x53D06C3: ??? (syscall-template.S:82)
==4049==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4049==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4049==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4049==  Address 0xac504f4 is 3,588 bytes inside a block of size 4,184 alloc'd
==4049==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4049==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4049== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.711000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.206000
	perf-misc  			1.693000
	perf-total		6.610000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.130000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.986000
	perf-misc  			1.704000
	perf-total		2.820000
==4049== 
==4049== HEAP SUMMARY:
==4049==     in use at exit: 16 bytes in 2 blocks
==4049==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==4049== 
==4049== LEAK SUMMARY:
==4049==    definitely lost: 8 bytes in 1 blocks
==4049==    indirectly lost: 0 bytes in 0 blocks
==4049==      possibly lost: 0 bytes in 0 blocks
==4049==    still reachable: 0 bytes in 0 blocks
==4049==         suppressed: 8 bytes in 1 blocks
==4049== Rerun with --leak-check=full to see details of leaked memory
==4049== 
==4049== For counts of detected and suppressed errors, rerun with: -v
==4049== Use --track-origins=yes to see where uninitialised values come from
==4049== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --keysize=680 --overwrite=1 --reopen=1    
==4055== Memcheck, a memory error detector
==4055== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4055== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4055== Command: ./test ../../testfiles/1/45.tst --keysize=680 --overwrite=1 --reopen=1
==4055== 
==4055== Thread 3:
==4055== Conditional jump or move depends on uninitialised value(s)
==4055==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4055==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4055==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4055==    by 0x418B33: Thread::run() (thread.hpp:90)
==4055==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4055==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4055==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4055== 
==4055== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4055==    at 0x53D06C3: ??? (syscall-template.S:82)
==4055==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4055==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4055==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4055==    by 0x418B33: Thread::run() (thread.hpp:90)
==4055==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4055==  Address 0xad41416 is 214 bytes inside a block of size 4,184 alloc'd
==4055==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4055==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4055==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4055== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.190000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.898000
	perf-misc  			0.386000
	perf-total		11.474000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.016000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.775000
	perf-misc  			0.273000
	perf-total		7.064000
==4055== 
==4055== HEAP SUMMARY:
==4055==     in use at exit: 16 bytes in 2 blocks
==4055==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==4055== 
==4055== LEAK SUMMARY:
==4055==    definitely lost: 8 bytes in 1 blocks
==4055==    indirectly lost: 0 bytes in 0 blocks
==4055==      possibly lost: 0 bytes in 0 blocks
==4055==    still reachable: 0 bytes in 0 blocks
==4055==         suppressed: 8 bytes in 1 blocks
==4055== Rerun with --leak-check=full to see details of leaked memory
==4055== 
==4055== For counts of detected and suppressed errors, rerun with: -v
==4055== Use --track-origins=yes to see where uninitialised values come from
==4055== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --keysize=680 --overwrite=1 --reopen=1    
==4060== Memcheck, a memory error detector
==4060== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4060== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4060== Command: ./test ../../testfiles/1/220.tst --keysize=680 --overwrite=1 --reopen=1
==4060== 
==4060== Thread 3:
==4060== Conditional jump or move depends on uninitialised value(s)
==4060==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4060==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4060==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4060==    by 0x418B33: Thread::run() (thread.hpp:90)
==4060==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4060==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4060==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4060== 
==4060== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4060==    at 0x53D06C3: ??? (syscall-template.S:82)
==4060==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==4060==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4060==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4060==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4060== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.309000
	perf-erase 			0.326000
	perf-find  			0.000000
	perf-insert			0.616000
	perf-misc  			0.308000
	perf-total		7.559000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.640000
	perf-erase 			0.131000
	perf-find  			0.000000
	perf-insert			0.448000
	perf-misc  			0.279000
	perf-total		3.498000
==4060== 
==4060== HEAP SUMMARY:
==4060==     in use at exit: 16 bytes in 2 blocks
==4060==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==4060== 
==4060== LEAK SUMMARY:
==4060==    definitely lost: 8 bytes in 1 blocks
==4060==    indirectly lost: 0 bytes in 0 blocks
==4060==      possibly lost: 0 bytes in 0 blocks
==4060==    still reachable: 0 bytes in 0 blocks
==4060==         suppressed: 8 bytes in 1 blocks
==4060== Rerun with --leak-check=full to see details of leaked memory
==4060== 
==4060== For counts of detected and suppressed errors, rerun with: -v
==4060== Use --track-origins=yes to see where uninitialised values come from
==4060== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --keysize=680 --overwrite=1 --reopen=1    
==4065== Memcheck, a memory error detector
==4065== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4065== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4065== Command: ./test ../../testfiles/1/ext_020.tst --keysize=680 --overwrite=1 --reopen=1
==4065== 
==4065== Thread 3:
==4065== Conditional jump or move depends on uninitialised value(s)
==4065==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4065==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4065==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4065==    by 0x418B33: Thread::run() (thread.hpp:90)
==4065==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4065==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4065==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4065== 
==4065== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4065==    at 0x53D06C3: ??? (syscall-template.S:82)
==4065==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4065==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4065==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4065==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==4065==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4065==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4065==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4065== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.052000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.108000
	perf-misc  			0.361000
	perf-total		0.521000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.030000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.131000
	perf-misc  			0.219000
	perf-total		0.380000
==4065== 
==4065== HEAP SUMMARY:
==4065==     in use at exit: 16 bytes in 2 blocks
==4065==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==4065== 
==4065== LEAK SUMMARY:
==4065==    definitely lost: 8 bytes in 1 blocks
==4065==    indirectly lost: 0 bytes in 0 blocks
==4065==      possibly lost: 0 bytes in 0 blocks
==4065==    still reachable: 0 bytes in 0 blocks
==4065==         suppressed: 8 bytes in 1 blocks
==4065== Rerun with --leak-check=full to see details of leaked memory
==4065== 
==4065== For counts of detected and suppressed errors, rerun with: -v
==4065== Use --track-origins=yes to see where uninitialised values come from
==4065== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --keysize=680 --overwrite=1 --reopen=1    
==4070== Memcheck, a memory error detector
==4070== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4070== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4070== Command: ./test ../../testfiles/2/ext_060.tst --keysize=680 --overwrite=1 --reopen=1
==4070== 
==4070== Thread 3:
==4070== Conditional jump or move depends on uninitialised value(s)
==4070==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4070==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4070==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4070==    by 0x418B33: Thread::run() (thread.hpp:90)
==4070==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4070==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4070==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4070== 
==4070== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4070==    at 0x53D06C3: ??? (syscall-template.S:82)
==4070==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4070==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4070==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4070==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==4070==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4070==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4070==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4070== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.330002
	perf-erase 			0.524000
	perf-find  			1.018000
	perf-insert			1.667000
	perf-misc  			0.338000
	perf-total		40.876999
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.316000
	perf-erase 			0.270000
	perf-find  			0.478000
	perf-insert			0.922000
	perf-misc  			0.229000
	perf-total		26.215000
==4070== 
==4070== HEAP SUMMARY:
==4070==     in use at exit: 16 bytes in 2 blocks
==4070==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==4070== 
==4070== LEAK SUMMARY:
==4070==    definitely lost: 8 bytes in 1 blocks
==4070==    indirectly lost: 0 bytes in 0 blocks
==4070==      possibly lost: 0 bytes in 0 blocks
==4070==    still reachable: 0 bytes in 0 blocks
==4070==         suppressed: 8 bytes in 1 blocks
==4070== Rerun with --leak-check=full to see details of leaked memory
==4070== 
==4070== For counts of detected and suppressed errors, rerun with: -v
==4070== Use --track-origins=yes to see where uninitialised values come from
==4070== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --keysize=680 --overwrite=1 --reopen=1    
==4075== Memcheck, a memory error detector
==4075== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4075== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4075== Command: ./test ../../testfiles/2/blb-001.tst --keysize=680 --overwrite=1 --reopen=1
==4075== 
==4075== Thread 3:
==4075== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4075==    at 0x53D06C3: ??? (syscall-template.S:82)
==4075==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4075==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4075==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4075==  Address 0xac58064 is 3,588 bytes inside a block of size 4,184 alloc'd
==4075==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4075==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4075== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.705000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.911000
	perf-misc  			1.832000
	perf-total		4.448000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.129000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.074000
	perf-misc  			1.794000
	perf-total		2.997000
==4075== 
==4075== HEAP SUMMARY:
==4075==     in use at exit: 16 bytes in 2 blocks
==4075==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==4075== 
==4075== LEAK SUMMARY:
==4075==    definitely lost: 8 bytes in 1 blocks
==4075==    indirectly lost: 0 bytes in 0 blocks
==4075==      possibly lost: 0 bytes in 0 blocks
==4075==    still reachable: 0 bytes in 0 blocks
==4075==         suppressed: 8 bytes in 1 blocks
==4075== Rerun with --leak-check=full to see details of leaked memory
==4075== 
==4075== For counts of detected and suppressed errors, rerun with: -v
==4075== Use --track-origins=yes to see where uninitialised values come from
==4075== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4081== Memcheck, a memory error detector
==4081== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4081== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4081== Command: ./test ../../testfiles/1/45.tst --pagesize=1024 --overwrite=1 --reopen=1
==4081== 
==4081== Thread 3:
==4081== Conditional jump or move depends on uninitialised value(s)
==4081==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4081==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4081==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4081==    by 0x418B33: Thread::run() (thread.hpp:90)
==4081==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4081==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4081==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4081== 
==4081== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4081==    at 0x53D06C3: ??? (syscall-template.S:82)
==4081==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4081==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4081==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4081==    by 0x418B33: Thread::run() (thread.hpp:90)
==4081==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4081==  Address 0xad41416 is 214 bytes inside a block of size 4,184 alloc'd
==4081==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4081==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4081==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4081== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.493000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.873000
	perf-misc  			0.439000
	perf-total		11.805000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.767000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.720000
	perf-misc  			0.376000
	perf-total		6.863000
==4081== 
==4081== HEAP SUMMARY:
==4081==     in use at exit: 16 bytes in 2 blocks
==4081==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==4081== 
==4081== LEAK SUMMARY:
==4081==    definitely lost: 8 bytes in 1 blocks
==4081==    indirectly lost: 0 bytes in 0 blocks
==4081==      possibly lost: 0 bytes in 0 blocks
==4081==    still reachable: 0 bytes in 0 blocks
==4081==         suppressed: 8 bytes in 1 blocks
==4081== Rerun with --leak-check=full to see details of leaked memory
==4081== 
==4081== For counts of detected and suppressed errors, rerun with: -v
==4081== Use --track-origins=yes to see where uninitialised values come from
==4081== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4087== Memcheck, a memory error detector
==4087== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4087== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4087== Command: ./test ../../testfiles/1/220.tst --pagesize=1024 --overwrite=1 --reopen=1
==4087== 
==4087== Thread 3:
==4087== Conditional jump or move depends on uninitialised value(s)
==4087==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4087==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4087==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4087==    by 0x418B33: Thread::run() (thread.hpp:90)
==4087==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4087==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4087==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4087== 
==4087== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4087==    at 0x53D06C3: ??? (syscall-template.S:82)
==4087==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==4087==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4087==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4087==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4087== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.233000
	perf-erase 			0.306000
	perf-find  			0.000000
	perf-insert			0.603000
	perf-misc  			0.323000
	perf-total		7.465000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.608000
	perf-erase 			0.128000
	perf-find  			0.000000
	perf-insert			0.475000
	perf-misc  			0.301000
	perf-total		3.512000
==4087== 
==4087== HEAP SUMMARY:
==4087==     in use at exit: 16 bytes in 2 blocks
==4087==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==4087== 
==4087== LEAK SUMMARY:
==4087==    definitely lost: 8 bytes in 1 blocks
==4087==    indirectly lost: 0 bytes in 0 blocks
==4087==      possibly lost: 0 bytes in 0 blocks
==4087==    still reachable: 0 bytes in 0 blocks
==4087==         suppressed: 8 bytes in 1 blocks
==4087== Rerun with --leak-check=full to see details of leaked memory
==4087== 
==4087== For counts of detected and suppressed errors, rerun with: -v
==4087== Use --track-origins=yes to see where uninitialised values come from
==4087== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4092== Memcheck, a memory error detector
==4092== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4092== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4092== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=1024 --overwrite=1 --reopen=1
==4092== 
==4092== Thread 3:
==4092== Conditional jump or move depends on uninitialised value(s)
==4092==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4092==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4092==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4092==    by 0x418B33: Thread::run() (thread.hpp:90)
==4092==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4092==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4092==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4092== 
==4092== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4092==    at 0x53D06C3: ??? (syscall-template.S:82)
==4092==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4092==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4092==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4092==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==4092==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4092==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4092==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4092== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.043000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.113000
	perf-misc  			0.360000
	perf-total		0.516000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.039000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.100000
	perf-misc  			0.257000
	perf-total		0.396000
==4092== 
==4092== HEAP SUMMARY:
==4092==     in use at exit: 16 bytes in 2 blocks
==4092==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==4092== 
==4092== LEAK SUMMARY:
==4092==    definitely lost: 8 bytes in 1 blocks
==4092==    indirectly lost: 0 bytes in 0 blocks
==4092==      possibly lost: 0 bytes in 0 blocks
==4092==    still reachable: 0 bytes in 0 blocks
==4092==         suppressed: 8 bytes in 1 blocks
==4092== Rerun with --leak-check=full to see details of leaked memory
==4092== 
==4092== For counts of detected and suppressed errors, rerun with: -v
==4092== Use --track-origins=yes to see where uninitialised values come from
==4092== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4097== Memcheck, a memory error detector
==4097== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4097== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4097== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=1024 --overwrite=1 --reopen=1
==4097== 
==4097== Thread 3:
==4097== Conditional jump or move depends on uninitialised value(s)
==4097==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4097==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4097==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4097==    by 0x418B33: Thread::run() (thread.hpp:90)
==4097==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4097==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4097==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4097== 
==4097== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4097==    at 0x53D06C3: ??? (syscall-template.S:82)
==4097==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4097==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4097==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4097==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==4097==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4097==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4097==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4097== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			36.472001
	perf-erase 			0.610000
	perf-find  			1.098000
	perf-insert			1.707000
	perf-misc  			0.374000
	perf-total		40.261001
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.043999
	perf-erase 			0.243000
	perf-find  			0.464000
	perf-insert			0.948000
	perf-misc  			0.252000
	perf-total		25.951001
==4097== 
==4097== HEAP SUMMARY:
==4097==     in use at exit: 16 bytes in 2 blocks
==4097==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==4097== 
==4097== LEAK SUMMARY:
==4097==    definitely lost: 8 bytes in 1 blocks
==4097==    indirectly lost: 0 bytes in 0 blocks
==4097==      possibly lost: 0 bytes in 0 blocks
==4097==    still reachable: 0 bytes in 0 blocks
==4097==         suppressed: 8 bytes in 1 blocks
==4097== Rerun with --leak-check=full to see details of leaked memory
==4097== 
==4097== For counts of detected and suppressed errors, rerun with: -v
==4097== Use --track-origins=yes to see where uninitialised values come from
==4097== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4102== Memcheck, a memory error detector
==4102== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4102== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4102== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=1024 --overwrite=1 --reopen=1
==4102== 
==4102== Thread 3:
==4102== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4102==    at 0x53D06C3: ??? (syscall-template.S:82)
==4102==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4102==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4102==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4102==  Address 0xac504f4 is 3,588 bytes inside a block of size 4,184 alloc'd
==4102==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4102==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4102== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.728000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.349000
	perf-misc  			2.272000
	perf-total		7.349000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.131000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.049000
	perf-misc  			2.232000
	perf-total		3.412000
==4102== 
==4102== HEAP SUMMARY:
==4102==     in use at exit: 16 bytes in 2 blocks
==4102==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==4102== 
==4102== LEAK SUMMARY:
==4102==    definitely lost: 8 bytes in 1 blocks
==4102==    indirectly lost: 0 bytes in 0 blocks
==4102==      possibly lost: 0 bytes in 0 blocks
==4102==    still reachable: 0 bytes in 0 blocks
==4102==         suppressed: 8 bytes in 1 blocks
==4102== Rerun with --leak-check=full to see details of leaked memory
==4102== 
==4102== For counts of detected and suppressed errors, rerun with: -v
==4102== Use --track-origins=yes to see where uninitialised values come from
==4102== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4108== Memcheck, a memory error detector
==4108== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4108== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4108== Command: ./test ../../testfiles/1/45.tst --pagesize=8192 --overwrite=1 --reopen=1
==4108== 
==4108== Thread 3:
==4108== Conditional jump or move depends on uninitialised value(s)
==4108==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4108==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4108==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4108==    by 0x418B33: Thread::run() (thread.hpp:90)
==4108==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4108==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4108==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4108== 
==4108== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4108==    at 0x53D06C3: ??? (syscall-template.S:82)
==4108==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4108==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4108==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4108==    by 0x418B33: Thread::run() (thread.hpp:90)
==4108==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4108==  Address 0xad41416 is 214 bytes inside a block of size 4,184 alloc'd
==4108==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4108==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4108==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4108== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.564000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.912000
	perf-misc  			0.388000
	perf-total		11.864001
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.823000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.806000
	perf-misc  			0.330000
	perf-total		6.959000
==4108== 
==4108== HEAP SUMMARY:
==4108==     in use at exit: 16 bytes in 2 blocks
==4108==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==4108== 
==4108== LEAK SUMMARY:
==4108==    definitely lost: 8 bytes in 1 blocks
==4108==    indirectly lost: 0 bytes in 0 blocks
==4108==      possibly lost: 0 bytes in 0 blocks
==4108==    still reachable: 0 bytes in 0 blocks
==4108==         suppressed: 8 bytes in 1 blocks
==4108== Rerun with --leak-check=full to see details of leaked memory
==4108== 
==4108== For counts of detected and suppressed errors, rerun with: -v
==4108== Use --track-origins=yes to see where uninitialised values come from
==4108== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4113== Memcheck, a memory error detector
==4113== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4113== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4113== Command: ./test ../../testfiles/1/220.tst --pagesize=8192 --overwrite=1 --reopen=1
==4113== 
==4113== Thread 3:
==4113== Conditional jump or move depends on uninitialised value(s)
==4113==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4113==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4113==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4113==    by 0x418B33: Thread::run() (thread.hpp:90)
==4113==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4113==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4113==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4113== 
==4113== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4113==    at 0x53D06C3: ??? (syscall-template.S:82)
==4113==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==4113==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4113==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4113==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4113== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.237000
	perf-erase 			0.291000
	perf-find  			0.000000
	perf-insert			0.628000
	perf-misc  			0.314000
	perf-total		7.470000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.588000
	perf-erase 			0.124000
	perf-find  			0.000000
	perf-insert			0.422000
	perf-misc  			0.271000
	perf-total		3.405000
==4113== 
==4113== HEAP SUMMARY:
==4113==     in use at exit: 16 bytes in 2 blocks
==4113==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==4113== 
==4113== LEAK SUMMARY:
==4113==    definitely lost: 8 bytes in 1 blocks
==4113==    indirectly lost: 0 bytes in 0 blocks
==4113==      possibly lost: 0 bytes in 0 blocks
==4113==    still reachable: 0 bytes in 0 blocks
==4113==         suppressed: 8 bytes in 1 blocks
==4113== Rerun with --leak-check=full to see details of leaked memory
==4113== 
==4113== For counts of detected and suppressed errors, rerun with: -v
==4113== Use --track-origins=yes to see where uninitialised values come from
==4113== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4118== Memcheck, a memory error detector
==4118== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4118== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4118== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=8192 --overwrite=1 --reopen=1
==4118== 
==4118== Thread 3:
==4118== Conditional jump or move depends on uninitialised value(s)
==4118==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4118==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4118==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4118==    by 0x418B33: Thread::run() (thread.hpp:90)
==4118==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4118==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4118==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4118== 
==4118== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4118==    at 0x53D06C3: ??? (syscall-template.S:82)
==4118==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4118==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4118==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4118==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==4118==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4118==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4118==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4118== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.043000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.136000
	perf-misc  			0.364000
	perf-total		0.543000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.128000
	perf-misc  			0.212000
	perf-total		0.371000
==4118== 
==4118== HEAP SUMMARY:
==4118==     in use at exit: 16 bytes in 2 blocks
==4118==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==4118== 
==4118== LEAK SUMMARY:
==4118==    definitely lost: 8 bytes in 1 blocks
==4118==    indirectly lost: 0 bytes in 0 blocks
==4118==      possibly lost: 0 bytes in 0 blocks
==4118==    still reachable: 0 bytes in 0 blocks
==4118==         suppressed: 8 bytes in 1 blocks
==4118== Rerun with --leak-check=full to see details of leaked memory
==4118== 
==4118== For counts of detected and suppressed errors, rerun with: -v
==4118== Use --track-origins=yes to see where uninitialised values come from
==4118== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4123== Memcheck, a memory error detector
==4123== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4123== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4123== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=8192 --overwrite=1 --reopen=1
==4123== 
==4123== Thread 3:
==4123== Conditional jump or move depends on uninitialised value(s)
==4123==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4123==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4123==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4123==    by 0x418B33: Thread::run() (thread.hpp:90)
==4123==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4123==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4123==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4123== 
==4123== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4123==    at 0x53D06C3: ??? (syscall-template.S:82)
==4123==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4123==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4123==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4123==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==4123==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4123==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4123==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4123== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.342999
	perf-erase 			0.544000
	perf-find  			1.094000
	perf-insert			1.729000
	perf-misc  			0.353000
	perf-total		41.062998
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.953000
	perf-erase 			0.256000
	perf-find  			0.502000
	perf-insert			1.007000
	perf-misc  			0.216000
	perf-total		26.934000
==4123== 
==4123== HEAP SUMMARY:
==4123==     in use at exit: 16 bytes in 2 blocks
==4123==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==4123== 
==4123== LEAK SUMMARY:
==4123==    definitely lost: 8 bytes in 1 blocks
==4123==    indirectly lost: 0 bytes in 0 blocks
==4123==      possibly lost: 0 bytes in 0 blocks
==4123==    still reachable: 0 bytes in 0 blocks
==4123==         suppressed: 8 bytes in 1 blocks
==4123== Rerun with --leak-check=full to see details of leaked memory
==4123== 
==4123== For counts of detected and suppressed errors, rerun with: -v
==4123== Use --track-origins=yes to see where uninitialised values come from
==4123== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4129== Memcheck, a memory error detector
==4129== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4129== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4129== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=8192 --overwrite=1 --reopen=1
==4129== 
==4129== Thread 3:
==4129== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4129==    at 0x53D06C3: ??? (syscall-template.S:82)
==4129==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4129==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4129==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4129==  Address 0xac58064 is 3,588 bytes inside a block of size 4,184 alloc'd
==4129==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4129==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4129== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.732000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.759000
	perf-misc  			2.210000
	perf-total		4.701000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.129000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.640000
	perf-misc  			2.125000
	perf-total		5.894000
==4129== 
==4129== HEAP SUMMARY:
==4129==     in use at exit: 16 bytes in 2 blocks
==4129==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==4129== 
==4129== LEAK SUMMARY:
==4129==    definitely lost: 8 bytes in 1 blocks
==4129==    indirectly lost: 0 bytes in 0 blocks
==4129==      possibly lost: 0 bytes in 0 blocks
==4129==    still reachable: 0 bytes in 0 blocks
==4129==         suppressed: 8 bytes in 1 blocks
==4129== Rerun with --leak-check=full to see details of leaked memory
==4129== 
==4129== For counts of detected and suppressed errors, rerun with: -v
==4129== Use --track-origins=yes to see where uninitialised values come from
==4129== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4135== Memcheck, a memory error detector
==4135== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4135== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4135== Command: ./test ../../testfiles/1/45.tst --pagesize=131072 --overwrite=1 --reopen=1
==4135== 
==4135== Thread 3:
==4135== Conditional jump or move depends on uninitialised value(s)
==4135==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4135==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4135==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4135==    by 0x418B33: Thread::run() (thread.hpp:90)
==4135==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4135==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4135==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4135== 
==4135== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4135==    at 0x53D06C3: ??? (syscall-template.S:82)
==4135==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4135==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4135==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4135==    by 0x418B33: Thread::run() (thread.hpp:90)
==4135==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4135==  Address 0xad41416 is 214 bytes inside a block of size 4,184 alloc'd
==4135==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4135==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4135==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4135== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.285000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.886000
	perf-misc  			0.412000
	perf-total		11.583000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.915000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.723000
	perf-misc  			0.256000
	perf-total		6.894000
==4135== 
==4135== HEAP SUMMARY:
==4135==     in use at exit: 16 bytes in 2 blocks
==4135==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==4135== 
==4135== LEAK SUMMARY:
==4135==    definitely lost: 8 bytes in 1 blocks
==4135==    indirectly lost: 0 bytes in 0 blocks
==4135==      possibly lost: 0 bytes in 0 blocks
==4135==    still reachable: 0 bytes in 0 blocks
==4135==         suppressed: 8 bytes in 1 blocks
==4135== Rerun with --leak-check=full to see details of leaked memory
==4135== 
==4135== For counts of detected and suppressed errors, rerun with: -v
==4135== Use --track-origins=yes to see where uninitialised values come from
==4135== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4140== Memcheck, a memory error detector
==4140== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4140== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4140== Command: ./test ../../testfiles/1/220.tst --pagesize=131072 --overwrite=1 --reopen=1
==4140== 
==4140== Thread 3:
==4140== Conditional jump or move depends on uninitialised value(s)
==4140==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4140==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4140==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4140==    by 0x418B33: Thread::run() (thread.hpp:90)
==4140==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4140==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4140==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4140== 
==4140== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4140==    at 0x53D06C3: ??? (syscall-template.S:82)
==4140==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==4140==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4140==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4140==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4140== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.350000
	perf-erase 			0.349000
	perf-find  			0.000000
	perf-insert			0.640000
	perf-misc  			0.383000
	perf-total		7.722000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.620000
	perf-erase 			0.143000
	perf-find  			0.000000
	perf-insert			0.490000
	perf-misc  			0.206000
	perf-total		3.459000
==4140== 
==4140== HEAP SUMMARY:
==4140==     in use at exit: 16 bytes in 2 blocks
==4140==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==4140== 
==4140== LEAK SUMMARY:
==4140==    definitely lost: 8 bytes in 1 blocks
==4140==    indirectly lost: 0 bytes in 0 blocks
==4140==      possibly lost: 0 bytes in 0 blocks
==4140==    still reachable: 0 bytes in 0 blocks
==4140==         suppressed: 8 bytes in 1 blocks
==4140== Rerun with --leak-check=full to see details of leaked memory
==4140== 
==4140== For counts of detected and suppressed errors, rerun with: -v
==4140== Use --track-origins=yes to see where uninitialised values come from
==4140== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4145== Memcheck, a memory error detector
==4145== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4145== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4145== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=131072 --overwrite=1 --reopen=1
==4145== 
==4145== Thread 3:
==4145== Conditional jump or move depends on uninitialised value(s)
==4145==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4145==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4145==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4145==    by 0x418B33: Thread::run() (thread.hpp:90)
==4145==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4145==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4145==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4145== 
==4145== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4145==    at 0x53D06C3: ??? (syscall-template.S:82)
==4145==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4145==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4145==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4145==  Address 0xac7315e is 126 bytes inside a block of size 4,184 alloc'd
==4145==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4145==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4145==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4145== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.054000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.102000
	perf-misc  			0.349000
	perf-total		0.505000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.099000
	perf-misc  			0.214000
	perf-total		0.344000
==4145== 
==4145== HEAP SUMMARY:
==4145==     in use at exit: 16 bytes in 2 blocks
==4145==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==4145== 
==4145== LEAK SUMMARY:
==4145==    definitely lost: 8 bytes in 1 blocks
==4145==    indirectly lost: 0 bytes in 0 blocks
==4145==      possibly lost: 0 bytes in 0 blocks
==4145==    still reachable: 0 bytes in 0 blocks
==4145==         suppressed: 8 bytes in 1 blocks
==4145== Rerun with --leak-check=full to see details of leaked memory
==4145== 
==4145== For counts of detected and suppressed errors, rerun with: -v
==4145== Use --track-origins=yes to see where uninitialised values come from
==4145== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4150== Memcheck, a memory error detector
==4150== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4150== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4150== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=131072 --overwrite=1 --reopen=1
==4150== 
==4150== Thread 3:
==4150== Conditional jump or move depends on uninitialised value(s)
==4150==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4150==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4150==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4150==    by 0x418B33: Thread::run() (thread.hpp:90)
==4150==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4150==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4150==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4150== 
==4150== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4150==    at 0x53D06C3: ??? (syscall-template.S:82)
==4150==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4150==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4150==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4150==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==4150==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4150==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4150==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4150== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.625000
	perf-erase 			0.565000
	perf-find  			1.071000
	perf-insert			1.682000
	perf-misc  			0.380000
	perf-total		41.323000
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.491000
	perf-erase 			0.266000
	perf-find  			0.493000
	perf-insert			0.894000
	perf-misc  			0.263000
	perf-total		26.407000
==4150== 
==4150== HEAP SUMMARY:
==4150==     in use at exit: 16 bytes in 2 blocks
==4150==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==4150== 
==4150== LEAK SUMMARY:
==4150==    definitely lost: 8 bytes in 1 blocks
==4150==    indirectly lost: 0 bytes in 0 blocks
==4150==      possibly lost: 0 bytes in 0 blocks
==4150==    still reachable: 0 bytes in 0 blocks
==4150==         suppressed: 8 bytes in 1 blocks
==4150== Rerun with --leak-check=full to see details of leaked memory
==4150== 
==4150== For counts of detected and suppressed errors, rerun with: -v
==4150== Use --track-origins=yes to see where uninitialised values come from
==4150== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4156== Memcheck, a memory error detector
==4156== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4156== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4156== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=131072 --overwrite=1 --reopen=1
==4156== 
==4156== Thread 3:
==4156== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4156==    at 0x53D06C3: ??? (syscall-template.S:82)
==4156==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4156==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4156==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4156==  Address 0xac504f4 is 3,588 bytes inside a block of size 4,184 alloc'd
==4156==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4156==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4156== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.721000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.494000
	perf-misc  			2.184000
	perf-total		7.399000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.130000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.130000
	perf-misc  			2.094000
	perf-total		3.354000
==4156== 
==4156== HEAP SUMMARY:
==4156==     in use at exit: 16 bytes in 2 blocks
==4156==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==4156== 
==4156== LEAK SUMMARY:
==4156==    definitely lost: 8 bytes in 1 blocks
==4156==    indirectly lost: 0 bytes in 0 blocks
==4156==      possibly lost: 0 bytes in 0 blocks
==4156==    still reachable: 0 bytes in 0 blocks
==4156==         suppressed: 8 bytes in 1 blocks
==4156== Rerun with --leak-check=full to see details of leaked memory
==4156== 
==4156== For counts of detected and suppressed errors, rerun with: -v
==4156== Use --track-origins=yes to see where uninitialised values come from
==4156== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --cachesize=0 --overwrite=1 --reopen=1    
==4162== Memcheck, a memory error detector
==4162== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4162== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4162== Command: ./test ../../testfiles/1/45.tst --cachesize=0 --overwrite=1 --reopen=1
==4162== 
==4162== Thread 3:
==4162== Conditional jump or move depends on uninitialised value(s)
==4162==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4162==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4162==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4162==    by 0x418B33: Thread::run() (thread.hpp:90)
==4162==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4162==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4162==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4162== 
==4162== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4162==    at 0x53D06C3: ??? (syscall-template.S:82)
==4162==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4162==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4162==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4162==    by 0x418B33: Thread::run() (thread.hpp:90)
==4162==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4162==  Address 0xad41706 is 214 bytes inside a block of size 4,184 alloc'd
==4162==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4162==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4162==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4162== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.628000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.907000
	perf-misc  			0.393000
	perf-total		11.928001
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.811000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.828000
	perf-misc  			0.322000
	perf-total		6.961000
==4162== 
==4162== HEAP SUMMARY:
==4162==     in use at exit: 16 bytes in 2 blocks
==4162==   total heap usage: 100,606 allocs, 100,604 frees, 111,946,619 bytes allocated
==4162== 
==4162== LEAK SUMMARY:
==4162==    definitely lost: 8 bytes in 1 blocks
==4162==    indirectly lost: 0 bytes in 0 blocks
==4162==      possibly lost: 0 bytes in 0 blocks
==4162==    still reachable: 0 bytes in 0 blocks
==4162==         suppressed: 8 bytes in 1 blocks
==4162== Rerun with --leak-check=full to see details of leaked memory
==4162== 
==4162== For counts of detected and suppressed errors, rerun with: -v
==4162== Use --track-origins=yes to see where uninitialised values come from
==4162== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --cachesize=0 --overwrite=1 --reopen=1    
==4167== Memcheck, a memory error detector
==4167== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4167== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4167== Command: ./test ../../testfiles/1/220.tst --cachesize=0 --overwrite=1 --reopen=1
==4167== 
==4167== Thread 3:
==4167== Conditional jump or move depends on uninitialised value(s)
==4167==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4167==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4167==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4167==    by 0x418B33: Thread::run() (thread.hpp:90)
==4167==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4167==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4167==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4167== 
==4167== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4167==    at 0x53D06C3: ??? (syscall-template.S:82)
==4167==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F0E774: __db_poff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4E6288D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4E63C1C: __bam_iitem (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4E5EFD6: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==  Address 0xaedba12 is 130 bytes inside a block of size 4,184 alloc'd
==4167==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4167==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4167==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4167== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		700416
	perf-cursor			6.244000
	perf-erase 			0.310000
	perf-find  			0.000000
	perf-insert			0.600000
	perf-misc  			0.306000
	perf-total		7.460000
hamsterdb
	filesize		507904
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.730000
	perf-erase 			0.141000
	perf-find  			0.000000
	perf-insert			0.437000
	perf-misc  			0.288000
	perf-total		3.596000
==4167== 
==4167== HEAP SUMMARY:
==4167==     in use at exit: 16 bytes in 2 blocks
==4167==   total heap usage: 88,610 allocs, 88,608 frees, 110,899,231 bytes allocated
==4167== 
==4167== LEAK SUMMARY:
==4167==    definitely lost: 8 bytes in 1 blocks
==4167==    indirectly lost: 0 bytes in 0 blocks
==4167==      possibly lost: 0 bytes in 0 blocks
==4167==    still reachable: 0 bytes in 0 blocks
==4167==         suppressed: 8 bytes in 1 blocks
==4167== Rerun with --leak-check=full to see details of leaked memory
==4167== 
==4167== For counts of detected and suppressed errors, rerun with: -v
==4167== Use --track-origins=yes to see where uninitialised values come from
==4167== ERROR SUMMARY: 277 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --cachesize=0 --overwrite=1 --reopen=1    
==4172== Memcheck, a memory error detector
==4172== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4172== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4172== Command: ./test ../../testfiles/1/ext_020.tst --cachesize=0 --overwrite=1 --reopen=1
==4172== 
==4172== Thread 3:
==4172== Conditional jump or move depends on uninitialised value(s)
==4172==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4172==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4172==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4172==    by 0x418B33: Thread::run() (thread.hpp:90)
==4172==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4172==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4172==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4172== 
==4172== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4172==    at 0x53D06C3: ??? (syscall-template.S:82)
==4172==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4172==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4172==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4172==  Address 0xac7356e is 126 bytes inside a block of size 4,184 alloc'd
==4172==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4172==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4172==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4172== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.046000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.099000
	perf-misc  			0.327000
	perf-total		0.472000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.135000
	perf-misc  			0.248000
	perf-total		0.414000
==4172== 
==4172== HEAP SUMMARY:
==4172==     in use at exit: 16 bytes in 2 blocks
==4172==   total heap usage: 1,978 allocs, 1,976 frees, 106,496,026 bytes allocated
==4172== 
==4172== LEAK SUMMARY:
==4172==    definitely lost: 8 bytes in 1 blocks
==4172==    indirectly lost: 0 bytes in 0 blocks
==4172==      possibly lost: 0 bytes in 0 blocks
==4172==    still reachable: 0 bytes in 0 blocks
==4172==         suppressed: 8 bytes in 1 blocks
==4172== Rerun with --leak-check=full to see details of leaked memory
==4172== 
==4172== For counts of detected and suppressed errors, rerun with: -v
==4172== Use --track-origins=yes to see where uninitialised values come from
==4172== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --cachesize=0 --overwrite=1 --reopen=1    
==4177== Memcheck, a memory error detector
==4177== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4177== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4177== Command: ./test ../../testfiles/2/ext_060.tst --cachesize=0 --overwrite=1 --reopen=1
==4177== 
==4177== Thread 3:
==4177== Conditional jump or move depends on uninitialised value(s)
==4177==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4177==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4177==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4177==    by 0x418B33: Thread::run() (thread.hpp:90)
==4177==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4177==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4177==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4177== 
==4177== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4177==    at 0x53D06C3: ??? (syscall-template.S:82)
==4177==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4177==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4177==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4177==  Address 0xb28f8a2 is 418 bytes inside a block of size 4,184 alloc'd
==4177==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4177==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4177==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4177== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.028000
	perf-erase 			0.570000
	perf-find  			1.002000
	perf-insert			1.658000
	perf-misc  			0.337000
	perf-total		40.595001
hamsterdb
	filesize		81920
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.431000
	perf-erase 			0.228000
	perf-find  			0.528000
	perf-insert			0.949000
	perf-misc  			0.268000
	perf-total		26.404000
==4177== 
==4177== HEAP SUMMARY:
==4177==     in use at exit: 16 bytes in 2 blocks
==4177==   total heap usage: 1,065,296 allocs, 1,065,294 frees, 139,498,166 bytes allocated
==4177== 
==4177== LEAK SUMMARY:
==4177==    definitely lost: 8 bytes in 1 blocks
==4177==    indirectly lost: 0 bytes in 0 blocks
==4177==      possibly lost: 0 bytes in 0 blocks
==4177==    still reachable: 0 bytes in 0 blocks
==4177==         suppressed: 8 bytes in 1 blocks
==4177== Rerun with --leak-check=full to see details of leaked memory
==4177== 
==4177== For counts of detected and suppressed errors, rerun with: -v
==4177== Use --track-origins=yes to see where uninitialised values come from
==4177== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --cachesize=0 --overwrite=1 --reopen=1    
==4182== Memcheck, a memory error detector
==4182== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4182== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4182== Command: ./test ../../testfiles/2/blb-001.tst --cachesize=0 --overwrite=1 --reopen=1
==4182== 
==4182== Thread 3:
==4182== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4182==    at 0x53D06C3: ??? (syscall-template.S:82)
==4182==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4182==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4182==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4182==  Address 0xac60244 is 3,588 bytes inside a block of size 4,184 alloc'd
==4182==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4182==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4182== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		40751104
	perf-cursor			0.724000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.633000
	perf-misc  			2.173000
	perf-total		4.530000
hamsterdb
	filesize		40697856
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.130000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.472000
	perf-misc  			2.083000
	perf-total		5.685000
==4182== 
==4182== HEAP SUMMARY:
==4182==     in use at exit: 16 bytes in 2 blocks
==4182==   total heap usage: 1,560 allocs, 1,558 frees, 189,946,352 bytes allocated
==4182== 
==4182== LEAK SUMMARY:
==4182==    definitely lost: 8 bytes in 1 blocks
==4182==    indirectly lost: 0 bytes in 0 blocks
==4182==      possibly lost: 0 bytes in 0 blocks
==4182==    still reachable: 0 bytes in 0 blocks
==4182==         suppressed: 8 bytes in 1 blocks
==4182== Rerun with --leak-check=full to see details of leaked memory
==4182== 
==4182== For counts of detected and suppressed errors, rerun with: -v
==4182== Use --track-origins=yes to see where uninitialised values come from
==4182== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-aes=1 --reopen=1    
==4188== Memcheck, a memory error detector
==4188== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4188== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4188== Command: ./test ../../testfiles/1/45.tst --use-aes=1 --reopen=1
==4188== 
unknown parameter 'use-aes=1'
==4188== 
==4188== HEAP SUMMARY:
==4188==     in use at exit: 8,803 bytes in 131 blocks
==4188==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4188== 
==4188== LEAK SUMMARY:
==4188==    definitely lost: 0 bytes in 0 blocks
==4188==    indirectly lost: 0 bytes in 0 blocks
==4188==      possibly lost: 1,283 bytes in 18 blocks
==4188==    still reachable: 7,520 bytes in 113 blocks
==4188==         suppressed: 0 bytes in 0 blocks
==4188== Rerun with --leak-check=full to see details of leaked memory
==4188== 
==4188== For counts of detected and suppressed errors, rerun with: -v
==4188== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-aes=1 --reopen=1    
==4191== Memcheck, a memory error detector
==4191== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4191== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4191== Command: ./test ../../testfiles/1/220.tst --use-aes=1 --reopen=1
==4191== 
unknown parameter 'use-aes=1'
==4191== 
==4191== HEAP SUMMARY:
==4191==     in use at exit: 8,803 bytes in 131 blocks
==4191==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4191== 
==4191== LEAK SUMMARY:
==4191==    definitely lost: 0 bytes in 0 blocks
==4191==    indirectly lost: 0 bytes in 0 blocks
==4191==      possibly lost: 1,283 bytes in 18 blocks
==4191==    still reachable: 7,520 bytes in 113 blocks
==4191==         suppressed: 0 bytes in 0 blocks
==4191== Rerun with --leak-check=full to see details of leaked memory
==4191== 
==4191== For counts of detected and suppressed errors, rerun with: -v
==4191== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-aes=1 --reopen=1    
==4194== Memcheck, a memory error detector
==4194== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4194== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4194== Command: ./test ../../testfiles/1/ext_020.tst --use-aes=1 --reopen=1
==4194== 
unknown parameter 'use-aes=1'
==4194== 
==4194== HEAP SUMMARY:
==4194==     in use at exit: 8,803 bytes in 131 blocks
==4194==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4194== 
==4194== LEAK SUMMARY:
==4194==    definitely lost: 0 bytes in 0 blocks
==4194==    indirectly lost: 0 bytes in 0 blocks
==4194==      possibly lost: 1,283 bytes in 18 blocks
==4194==    still reachable: 7,520 bytes in 113 blocks
==4194==         suppressed: 0 bytes in 0 blocks
==4194== Rerun with --leak-check=full to see details of leaked memory
==4194== 
==4194== For counts of detected and suppressed errors, rerun with: -v
==4194== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-aes=1 --reopen=1    
==4197== Memcheck, a memory error detector
==4197== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4197== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4197== Command: ./test ../../testfiles/2/ext_060.tst --use-aes=1 --reopen=1
==4197== 
unknown parameter 'use-aes=1'
==4197== 
==4197== HEAP SUMMARY:
==4197==     in use at exit: 8,803 bytes in 131 blocks
==4197==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4197== 
==4197== LEAK SUMMARY:
==4197==    definitely lost: 0 bytes in 0 blocks
==4197==    indirectly lost: 0 bytes in 0 blocks
==4197==      possibly lost: 1,283 bytes in 18 blocks
==4197==    still reachable: 7,520 bytes in 113 blocks
==4197==         suppressed: 0 bytes in 0 blocks
==4197== Rerun with --leak-check=full to see details of leaked memory
==4197== 
==4197== For counts of detected and suppressed errors, rerun with: -v
==4197== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-aes=1 --reopen=1    
==4200== Memcheck, a memory error detector
==4200== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4200== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4200== Command: ./test ../../testfiles/2/blb-001.tst --use-aes=1 --reopen=1
==4200== 
unknown parameter 'use-aes=1'
==4200== 
==4200== HEAP SUMMARY:
==4200==     in use at exit: 8,803 bytes in 131 blocks
==4200==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4200== 
==4200== LEAK SUMMARY:
==4200==    definitely lost: 0 bytes in 0 blocks
==4200==    indirectly lost: 0 bytes in 0 blocks
==4200==      possibly lost: 1,283 bytes in 18 blocks
==4200==    still reachable: 7,520 bytes in 113 blocks
==4200==         suppressed: 0 bytes in 0 blocks
==4200== Rerun with --leak-check=full to see details of leaked memory
==4200== 
==4200== For counts of detected and suppressed errors, rerun with: -v
==4200== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-recovery=1 --reopen=1    
==4204== Memcheck, a memory error detector
==4204== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4204== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4204== Command: ./test ../../testfiles/1/45.tst --use-recovery=1 --reopen=1
==4204== 
==4204== Thread 3:
==4204== Conditional jump or move depends on uninitialised value(s)
==4204==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4204==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4204==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4204==    by 0x418B33: Thread::run() (thread.hpp:90)
==4204==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4204==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4204==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4204== 
==4204== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4204==    at 0x53D06C3: ??? (syscall-template.S:82)
==4204==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4204==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4204==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4204==    by 0x418B33: Thread::run() (thread.hpp:90)
==4204==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4204==  Address 0xad41a36 is 214 bytes inside a block of size 4,184 alloc'd
==4204==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4204==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4204==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4204== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.243000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.908000
	perf-misc  			0.419000
	perf-total		11.570000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.226000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			5.579000
	perf-misc  			0.301000
	perf-total		12.106000
==4204== 
==4204== HEAP SUMMARY:
==4204==     in use at exit: 16 bytes in 2 blocks
==4204==   total heap usage: 100,613 allocs, 100,611 frees, 111,946,984 bytes allocated
==4204== 
==4204== LEAK SUMMARY:
==4204==    definitely lost: 8 bytes in 1 blocks
==4204==    indirectly lost: 0 bytes in 0 blocks
==4204==      possibly lost: 0 bytes in 0 blocks
==4204==    still reachable: 0 bytes in 0 blocks
==4204==         suppressed: 8 bytes in 1 blocks
==4204== Rerun with --leak-check=full to see details of leaked memory
==4204== 
==4204== For counts of detected and suppressed errors, rerun with: -v
==4204== Use --track-origins=yes to see where uninitialised values come from
==4204== ERROR SUMMARY: 323 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-recovery=1 --reopen=1    
==4209== Memcheck, a memory error detector
==4209== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4209== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4209== Command: ./test ../../testfiles/1/220.tst --use-recovery=1 --reopen=1
==4209== 
==4209== Thread 3:
==4209== Conditional jump or move depends on uninitialised value(s)
==4209==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4209==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4209==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4209==    by 0x418B33: Thread::run() (thread.hpp:90)
==4209==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4209==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4209==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4209== 
==4209== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4209==    at 0x53D06C3: ??? (syscall-template.S:82)
==4209==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==  Address 0xae4bf12 is 146 bytes inside a block of size 4,184 alloc'd
==4209==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4209==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4209==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4209== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.436000
	perf-erase 			0.353000
	perf-find  			0.000000
	perf-insert			0.604000
	perf-misc  			0.359000
	perf-total		7.752000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.816000
	perf-erase 			0.877000
	perf-find  			0.000000
	perf-insert			1.692000
	perf-misc  			0.287000
	perf-total		5.672000
==4209== 
==4209== HEAP SUMMARY:
==4209==     in use at exit: 16 bytes in 2 blocks
==4209==   total heap usage: 88,593 allocs, 88,591 frees, 110,785,807 bytes allocated
==4209== 
==4209== LEAK SUMMARY:
==4209==    definitely lost: 8 bytes in 1 blocks
==4209==    indirectly lost: 0 bytes in 0 blocks
==4209==      possibly lost: 0 bytes in 0 blocks
==4209==    still reachable: 0 bytes in 0 blocks
==4209==         suppressed: 8 bytes in 1 blocks
==4209== Rerun with --leak-check=full to see details of leaked memory
==4209== 
==4209== For counts of detected and suppressed errors, rerun with: -v
==4209== Use --track-origins=yes to see where uninitialised values come from
==4209== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-recovery=1 --reopen=1    
==4214== Memcheck, a memory error detector
==4214== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4214== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4214== Command: ./test ../../testfiles/1/ext_020.tst --use-recovery=1 --reopen=1
==4214== 
==4214== Thread 3:
==4214== Conditional jump or move depends on uninitialised value(s)
==4214==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4214==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4214==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4214==    by 0x418B33: Thread::run() (thread.hpp:90)
==4214==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4214==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4214==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4214== 
==4214== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4214==    at 0x53D06C3: ??? (syscall-template.S:82)
==4214==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4214==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4214==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4214==  Address 0xac7389e is 126 bytes inside a block of size 4,184 alloc'd
==4214==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4214==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4214==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4214== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		49152
	perf-cursor			0.054000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.138000
	perf-misc  			0.370000
	perf-total		0.562000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.031000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.202000
	perf-misc  			0.324000
	perf-total		0.557000
==4214== 
==4214== HEAP SUMMARY:
==4214==     in use at exit: 16 bytes in 2 blocks
==4214==   total heap usage: 1,985 allocs, 1,983 frees, 106,496,391 bytes allocated
==4214== 
==4214== LEAK SUMMARY:
==4214==    definitely lost: 8 bytes in 1 blocks
==4214==    indirectly lost: 0 bytes in 0 blocks
==4214==      possibly lost: 0 bytes in 0 blocks
==4214==    still reachable: 0 bytes in 0 blocks
==4214==         suppressed: 8 bytes in 1 blocks
==4214== Rerun with --leak-check=full to see details of leaked memory
==4214== 
==4214== For counts of detected and suppressed errors, rerun with: -v
==4214== Use --track-origins=yes to see where uninitialised values come from
==4214== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-recovery=1 --reopen=1    
==4219== Memcheck, a memory error detector
==4219== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4219== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4219== Command: ./test ../../testfiles/2/ext_060.tst --use-recovery=1 --reopen=1
==4219== 
==4219== Thread 3:
==4219== Conditional jump or move depends on uninitialised value(s)
==4219==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4219==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4219==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4219==    by 0x418B33: Thread::run() (thread.hpp:90)
==4219==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4219==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4219==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4219== 
==4219== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4219==    at 0x53D06C3: ??? (syscall-template.S:82)
==4219==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4219==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4219==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4219==  Address 0xb28cb4a is 410 bytes inside a block of size 4,184 alloc'd
==4219==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4219==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4219==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4219== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		40960
	perf-cursor			37.319999
	perf-erase 			0.494000
	perf-find  			0.928000
	perf-insert			1.086000
	perf-misc  			0.405000
	perf-total		40.233001
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			25.257001
	perf-erase 			0.256000
	perf-find  			0.496000
	perf-insert			0.829000
	perf-misc  			0.243000
	perf-total		27.081001
==4219== 
==4219== HEAP SUMMARY:
==4219==     in use at exit: 16 bytes in 2 blocks
==4219==   total heap usage: 1,065,301 allocs, 1,065,299 frees, 139,480,622 bytes allocated
==4219== 
==4219== LEAK SUMMARY:
==4219==    definitely lost: 8 bytes in 1 blocks
==4219==    indirectly lost: 0 bytes in 0 blocks
==4219==      possibly lost: 0 bytes in 0 blocks
==4219==    still reachable: 0 bytes in 0 blocks
==4219==         suppressed: 8 bytes in 1 blocks
==4219== Rerun with --leak-check=full to see details of leaked memory
==4219== 
==4219== For counts of detected and suppressed errors, rerun with: -v
==4219== Use --track-origins=yes to see where uninitialised values come from
==4219== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-recovery=1 --reopen=1    
==4225== Memcheck, a memory error detector
==4225== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4225== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4225== Command: ./test ../../testfiles/2/blb-001.tst --use-recovery=1 --reopen=1
==4225== 
==4225== Thread 3:
==4225== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4225==    at 0x53D06C3: ??? (syscall-template.S:82)
==4225==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4225==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4225==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4225==  Address 0xac50930 is 3,984 bytes inside a block of size 4,184 alloc'd
==4225==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4225==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4225== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.979000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.752000
	perf-misc  			0.474000
	perf-total		9.205000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.092000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.250000
	perf-misc  			0.497000
	perf-total		3.839000
==4225== 
==4225== HEAP SUMMARY:
==4225==     in use at exit: 16 bytes in 2 blocks
==4225==   total heap usage: 1,594 allocs, 1,592 frees, 268,965,601 bytes allocated
==4225== 
==4225== LEAK SUMMARY:
==4225==    definitely lost: 8 bytes in 1 blocks
==4225==    indirectly lost: 0 bytes in 0 blocks
==4225==      possibly lost: 0 bytes in 0 blocks
==4225==    still reachable: 0 bytes in 0 blocks
==4225==         suppressed: 8 bytes in 1 blocks
==4225== Rerun with --leak-check=full to see details of leaked memory
==4225== 
==4225== For counts of detected and suppressed errors, rerun with: -v
==4225== Use --track-origins=yes to see where uninitialised values come from
==4225== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --cacheunlimited=1    
==4231== Memcheck, a memory error detector
==4231== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4231== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4231== Command: ./test ../../testfiles/1/45.tst --cacheunlimited=1
==4231== 
==4231== Thread 3:
==4231== Conditional jump or move depends on uninitialised value(s)
==4231==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4231==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4231==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4231==    by 0x418B33: Thread::run() (thread.hpp:90)
==4231==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4231==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4231==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4231== 
==4231== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4231==    at 0x53D06C3: ??? (syscall-template.S:82)
==4231==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4231==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4231==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4231==    by 0x418B33: Thread::run() (thread.hpp:90)
==4231==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4231==  Address 0xad41196 is 214 bytes inside a block of size 4,184 alloc'd
==4231==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4231==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4231==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4231== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.219000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.830000
	perf-misc  			0.316000
	perf-total		11.365000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			5.605000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.723000
	perf-misc  			0.259000
	perf-total		6.587000
==4231== 
==4231== HEAP SUMMARY:
==4231==     in use at exit: 16 bytes in 2 blocks
==4231==   total heap usage: 100,313 allocs, 100,311 frees, 111,176,005 bytes allocated
==4231== 
==4231== LEAK SUMMARY:
==4231==    definitely lost: 8 bytes in 1 blocks
==4231==    indirectly lost: 0 bytes in 0 blocks
==4231==      possibly lost: 0 bytes in 0 blocks
==4231==    still reachable: 0 bytes in 0 blocks
==4231==         suppressed: 8 bytes in 1 blocks
==4231== Rerun with --leak-check=full to see details of leaked memory
==4231== 
==4231== For counts of detected and suppressed errors, rerun with: -v
==4231== Use --track-origins=yes to see where uninitialised values come from
==4231== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --cacheunlimited=1    
==4236== Memcheck, a memory error detector
==4236== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4236== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4236== Command: ./test ../../testfiles/1/220.tst --cacheunlimited=1
==4236== 
==4236== Thread 3:
==4236== Conditional jump or move depends on uninitialised value(s)
==4236==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4236==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4236==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4236==    by 0x418B33: Thread::run() (thread.hpp:90)
==4236==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4236==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4236==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4236== 
==4236== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4236==    at 0x53D06C3: ??? (syscall-template.S:82)
==4236==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==  Address 0xaeddff2 is 130 bytes inside a block of size 4,184 alloc'd
==4236==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4236==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4236==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4236== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.203000
	perf-erase 			0.323000
	perf-find  			0.000000
	perf-insert			0.549000
	perf-misc  			0.245000
	perf-total		7.320000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.691000
	perf-erase 			0.117000
	perf-find  			0.000000
	perf-insert			0.377000
	perf-misc  			0.202000
	perf-total		3.387000
==4236== 
==4236== HEAP SUMMARY:
==4236==     in use at exit: 16 bytes in 2 blocks
==4236==   total heap usage: 88,323 allocs, 88,321 frees, 110,013,069 bytes allocated
==4236== 
==4236== LEAK SUMMARY:
==4236==    definitely lost: 8 bytes in 1 blocks
==4236==    indirectly lost: 0 bytes in 0 blocks
==4236==      possibly lost: 0 bytes in 0 blocks
==4236==    still reachable: 0 bytes in 0 blocks
==4236==         suppressed: 8 bytes in 1 blocks
==4236== Rerun with --leak-check=full to see details of leaked memory
==4236== 
==4236== For counts of detected and suppressed errors, rerun with: -v
==4236== Use --track-origins=yes to see where uninitialised values come from
==4236== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --cacheunlimited=1    
==4241== Memcheck, a memory error detector
==4241== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4241== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4241== Command: ./test ../../testfiles/1/ext_020.tst --cacheunlimited=1
==4241== 
==4241== Thread 3:
==4241== Conditional jump or move depends on uninitialised value(s)
==4241==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4241==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4241==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4241==    by 0x418B33: Thread::run() (thread.hpp:90)
==4241==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4241==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4241==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4241== 
==4241== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4241==    at 0x53D06C3: ??? (syscall-template.S:82)
==4241==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4241==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4241==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4241==  Address 0xac732ee is 126 bytes inside a block of size 4,184 alloc'd
==4241==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4241==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4241==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4241== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.048000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.099000
	perf-misc  			0.226000
	perf-total		0.373000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.029000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.125000
	perf-misc  			0.157000
	perf-total		0.311000
==4241== 
==4241== HEAP SUMMARY:
==4241==     in use at exit: 16 bytes in 2 blocks
==4241==   total heap usage: 1,736 allocs, 1,734 frees, 105,831,815 bytes allocated
==4241== 
==4241== LEAK SUMMARY:
==4241==    definitely lost: 8 bytes in 1 blocks
==4241==    indirectly lost: 0 bytes in 0 blocks
==4241==      possibly lost: 0 bytes in 0 blocks
==4241==    still reachable: 0 bytes in 0 blocks
==4241==         suppressed: 8 bytes in 1 blocks
==4241== Rerun with --leak-check=full to see details of leaked memory
==4241== 
==4241== For counts of detected and suppressed errors, rerun with: -v
==4241== Use --track-origins=yes to see where uninitialised values come from
==4241== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --cacheunlimited=1    
==4246== Memcheck, a memory error detector
==4246== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4246== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4246== Command: ./test ../../testfiles/2/ext_060.tst --cacheunlimited=1
==4246== 
==4246== Thread 3:
==4246== Conditional jump or move depends on uninitialised value(s)
==4246==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4246==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4246==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4246==    by 0x418B33: Thread::run() (thread.hpp:90)
==4246==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4246==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4246==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4246== 
==4246== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4246==    at 0x53D06C3: ??? (syscall-template.S:82)
==4246==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4246==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4246==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4246==  Address 0xb28c59a is 410 bytes inside a block of size 4,184 alloc'd
==4246==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4246==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4246==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4246== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			36.016001
	perf-erase 			0.522000
	perf-find  			0.967000
	perf-insert			1.116000
	perf-misc  			0.237000
	perf-total		38.857998
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			24.522000
	perf-erase 			0.262000
	perf-find  			0.484000
	perf-insert			0.605000
	perf-misc  			0.175000
	perf-total		26.048000
==4246== 
==4246== HEAP SUMMARY:
==4246==     in use at exit: 16 bytes in 2 blocks
==4246==   total heap usage: 1,064,833 allocs, 1,064,831 frees, 138,846,071 bytes allocated
==4246== 
==4246== LEAK SUMMARY:
==4246==    definitely lost: 8 bytes in 1 blocks
==4246==    indirectly lost: 0 bytes in 0 blocks
==4246==      possibly lost: 0 bytes in 0 blocks
==4246==    still reachable: 0 bytes in 0 blocks
==4246==         suppressed: 8 bytes in 1 blocks
==4246== Rerun with --leak-check=full to see details of leaked memory
==4246== 
==4246== For counts of detected and suppressed errors, rerun with: -v
==4246== Use --track-origins=yes to see where uninitialised values come from
==4246== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --cacheunlimited=1    
==4251== Memcheck, a memory error detector
==4251== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4251== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4251== Command: ./test ../../testfiles/2/blb-001.tst --cacheunlimited=1
==4251== 
==4251== Thread 3:
==4251== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4251==    at 0x53D06C3: ??? (syscall-template.S:82)
==4251==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4251==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4251==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4251==  Address 0xac50400 is 3,984 bytes inside a block of size 4,184 alloc'd
==4251==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4251==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4251== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.366000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.803000
	perf-misc  			0.267000
	perf-total		8.436000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.994000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.839000
	perf-misc  			0.221000
	perf-total		2.054000
==4251== 
==4251== HEAP SUMMARY:
==4251==     in use at exit: 16 bytes in 2 blocks
==4251==   total heap usage: 1,332 allocs, 1,330 frees, 227,712,658 bytes allocated
==4251== 
==4251== LEAK SUMMARY:
==4251==    definitely lost: 8 bytes in 1 blocks
==4251==    indirectly lost: 0 bytes in 0 blocks
==4251==      possibly lost: 0 bytes in 0 blocks
==4251==    still reachable: 0 bytes in 0 blocks
==4251==         suppressed: 8 bytes in 1 blocks
==4251== Rerun with --leak-check=full to see details of leaked memory
==4251== 
==4251== For counts of detected and suppressed errors, rerun with: -v
==4251== Use --track-origins=yes to see where uninitialised values come from
==4251== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4257== Memcheck, a memory error detector
==4257== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4257== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4257== Command: ./test ../../testfiles/1/45.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4257== 
unknown parameter 'data-access-mode=HAM_DAM_SEQUENTIAL_INSERT'
==4257== 
==4257== HEAP SUMMARY:
==4257==     in use at exit: 8,803 bytes in 131 blocks
==4257==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4257== 
==4257== LEAK SUMMARY:
==4257==    definitely lost: 0 bytes in 0 blocks
==4257==    indirectly lost: 0 bytes in 0 blocks
==4257==      possibly lost: 1,283 bytes in 18 blocks
==4257==    still reachable: 7,520 bytes in 113 blocks
==4257==         suppressed: 0 bytes in 0 blocks
==4257== Rerun with --leak-check=full to see details of leaked memory
==4257== 
==4257== For counts of detected and suppressed errors, rerun with: -v
==4257== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4260== Memcheck, a memory error detector
==4260== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4260== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4260== Command: ./test ../../testfiles/1/220.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4260== 
unknown parameter 'data-access-mode=HAM_DAM_SEQUENTIAL_INSERT'
==4260== 
==4260== HEAP SUMMARY:
==4260==     in use at exit: 8,803 bytes in 131 blocks
==4260==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4260== 
==4260== LEAK SUMMARY:
==4260==    definitely lost: 0 bytes in 0 blocks
==4260==    indirectly lost: 0 bytes in 0 blocks
==4260==      possibly lost: 1,283 bytes in 18 blocks
==4260==    still reachable: 7,520 bytes in 113 blocks
==4260==         suppressed: 0 bytes in 0 blocks
==4260== Rerun with --leak-check=full to see details of leaked memory
==4260== 
==4260== For counts of detected and suppressed errors, rerun with: -v
==4260== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4263== Memcheck, a memory error detector
==4263== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4263== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4263== Command: ./test ../../testfiles/1/ext_020.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4263== 
unknown parameter 'data-access-mode=HAM_DAM_SEQUENTIAL_INSERT'
==4263== 
==4263== HEAP SUMMARY:
==4263==     in use at exit: 8,803 bytes in 131 blocks
==4263==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4263== 
==4263== LEAK SUMMARY:
==4263==    definitely lost: 0 bytes in 0 blocks
==4263==    indirectly lost: 0 bytes in 0 blocks
==4263==      possibly lost: 1,283 bytes in 18 blocks
==4263==    still reachable: 7,520 bytes in 113 blocks
==4263==         suppressed: 0 bytes in 0 blocks
==4263== Rerun with --leak-check=full to see details of leaked memory
==4263== 
==4263== For counts of detected and suppressed errors, rerun with: -v
==4263== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4266== Memcheck, a memory error detector
==4266== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4266== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4266== Command: ./test ../../testfiles/2/ext_060.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4266== 
unknown parameter 'data-access-mode=HAM_DAM_SEQUENTIAL_INSERT'
==4266== 
==4266== HEAP SUMMARY:
==4266==     in use at exit: 8,803 bytes in 131 blocks
==4266==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4266== 
==4266== LEAK SUMMARY:
==4266==    definitely lost: 0 bytes in 0 blocks
==4266==    indirectly lost: 0 bytes in 0 blocks
==4266==      possibly lost: 1,283 bytes in 18 blocks
==4266==    still reachable: 7,520 bytes in 113 blocks
==4266==         suppressed: 0 bytes in 0 blocks
==4266== Rerun with --leak-check=full to see details of leaked memory
==4266== 
==4266== For counts of detected and suppressed errors, rerun with: -v
==4266== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4269== Memcheck, a memory error detector
==4269== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4269== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4269== Command: ./test ../../testfiles/2/blb-001.tst --data-access-mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4269== 
unknown parameter 'data-access-mode=HAM_DAM_SEQUENTIAL_INSERT'
==4269== 
==4269== HEAP SUMMARY:
==4269==     in use at exit: 8,803 bytes in 131 blocks
==4269==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4269== 
==4269== LEAK SUMMARY:
==4269==    definitely lost: 0 bytes in 0 blocks
==4269==    indirectly lost: 0 bytes in 0 blocks
==4269==      possibly lost: 1,283 bytes in 18 blocks
==4269==    still reachable: 7,520 bytes in 113 blocks
==4269==         suppressed: 0 bytes in 0 blocks
==4269== Rerun with --leak-check=full to see details of leaked memory
==4269== 
==4269== For counts of detected and suppressed errors, rerun with: -v
==4269== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4273== Memcheck, a memory error detector
==4273== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4273== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4273== Command: ./test ../../testfiles/1/45.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4273== 
unknown parameter 'data-access-mode=HAM_DAM_RANDOM_WRITE'
==4273== 
==4273== HEAP SUMMARY:
==4273==     in use at exit: 8,803 bytes in 131 blocks
==4273==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4273== 
==4273== LEAK SUMMARY:
==4273==    definitely lost: 0 bytes in 0 blocks
==4273==    indirectly lost: 0 bytes in 0 blocks
==4273==      possibly lost: 1,283 bytes in 18 blocks
==4273==    still reachable: 7,520 bytes in 113 blocks
==4273==         suppressed: 0 bytes in 0 blocks
==4273== Rerun with --leak-check=full to see details of leaked memory
==4273== 
==4273== For counts of detected and suppressed errors, rerun with: -v
==4273== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4276== Memcheck, a memory error detector
==4276== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4276== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4276== Command: ./test ../../testfiles/1/220.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4276== 
unknown parameter 'data-access-mode=HAM_DAM_RANDOM_WRITE'
==4276== 
==4276== HEAP SUMMARY:
==4276==     in use at exit: 8,803 bytes in 131 blocks
==4276==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4276== 
==4276== LEAK SUMMARY:
==4276==    definitely lost: 0 bytes in 0 blocks
==4276==    indirectly lost: 0 bytes in 0 blocks
==4276==      possibly lost: 1,283 bytes in 18 blocks
==4276==    still reachable: 7,520 bytes in 113 blocks
==4276==         suppressed: 0 bytes in 0 blocks
==4276== Rerun with --leak-check=full to see details of leaked memory
==4276== 
==4276== For counts of detected and suppressed errors, rerun with: -v
==4276== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4279== Memcheck, a memory error detector
==4279== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4279== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4279== Command: ./test ../../testfiles/1/ext_020.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4279== 
unknown parameter 'data-access-mode=HAM_DAM_RANDOM_WRITE'
==4279== 
==4279== HEAP SUMMARY:
==4279==     in use at exit: 8,803 bytes in 131 blocks
==4279==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4279== 
==4279== LEAK SUMMARY:
==4279==    definitely lost: 0 bytes in 0 blocks
==4279==    indirectly lost: 0 bytes in 0 blocks
==4279==      possibly lost: 1,283 bytes in 18 blocks
==4279==    still reachable: 7,520 bytes in 113 blocks
==4279==         suppressed: 0 bytes in 0 blocks
==4279== Rerun with --leak-check=full to see details of leaked memory
==4279== 
==4279== For counts of detected and suppressed errors, rerun with: -v
==4279== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4282== Memcheck, a memory error detector
==4282== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4282== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4282== Command: ./test ../../testfiles/2/ext_060.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4282== 
unknown parameter 'data-access-mode=HAM_DAM_RANDOM_WRITE'
==4282== 
==4282== HEAP SUMMARY:
==4282==     in use at exit: 8,803 bytes in 131 blocks
==4282==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4282== 
==4282== LEAK SUMMARY:
==4282==    definitely lost: 0 bytes in 0 blocks
==4282==    indirectly lost: 0 bytes in 0 blocks
==4282==      possibly lost: 1,283 bytes in 18 blocks
==4282==    still reachable: 7,520 bytes in 113 blocks
==4282==         suppressed: 0 bytes in 0 blocks
==4282== Rerun with --leak-check=full to see details of leaked memory
==4282== 
==4282== For counts of detected and suppressed errors, rerun with: -v
==4282== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4285== Memcheck, a memory error detector
==4285== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4285== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4285== Command: ./test ../../testfiles/2/blb-001.tst --data-access-mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4285== 
unknown parameter 'data-access-mode=HAM_DAM_RANDOM_WRITE'
==4285== 
==4285== HEAP SUMMARY:
==4285==     in use at exit: 8,803 bytes in 131 blocks
==4285==   total heap usage: 670 allocs, 539 frees, 36,329 bytes allocated
==4285== 
==4285== LEAK SUMMARY:
==4285==    definitely lost: 0 bytes in 0 blocks
==4285==    indirectly lost: 0 bytes in 0 blocks
==4285==      possibly lost: 1,283 bytes in 18 blocks
==4285==    still reachable: 7,520 bytes in 113 blocks
==4285==         suppressed: 0 bytes in 0 blocks
==4285== Rerun with --leak-check=full to see details of leaked memory
==4285== 
==4285== For counts of detected and suppressed errors, rerun with: -v
==4285== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --direct-access=1 --inmemorydb=1    
==4289== Memcheck, a memory error detector
==4289== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4289== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4289== Command: ./test ../../testfiles/1/45.tst --direct-access=1 --inmemorydb=1
==4289== 
==4289== Thread 3:
==4289== Conditional jump or move depends on uninitialised value(s)
==4289==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4289==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4289==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4289==    by 0x418B33: Thread::run() (thread.hpp:90)
==4289==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4289==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4289==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4289== 
==4289== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4289==    at 0x53D06C3: ??? (syscall-template.S:82)
==4289==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==  Address 0xae75452 is 546 bytes inside a block of size 8,280 alloc'd
==4289==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4289==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4289==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4289== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		0
	perf-cursor			9.584000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.873000
	perf-misc  			0.182000
	perf-total		10.639000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			4.109000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.469000
	perf-misc  			0.080000
	perf-total		4.658000
==4289== 
==4289== HEAP SUMMARY:
==4289==     in use at exit: 16 bytes in 2 blocks
==4289==   total heap usage: 105,372 allocs, 105,370 frees, 111,119,398 bytes allocated
==4289== 
==4289== LEAK SUMMARY:
==4289==    definitely lost: 8 bytes in 1 blocks
==4289==    indirectly lost: 0 bytes in 0 blocks
==4289==      possibly lost: 0 bytes in 0 blocks
==4289==    still reachable: 0 bytes in 0 blocks
==4289==         suppressed: 8 bytes in 1 blocks
==4289== Rerun with --leak-check=full to see details of leaked memory
==4289== 
==4289== For counts of detected and suppressed errors, rerun with: -v
==4289== Use --track-origins=yes to see where uninitialised values come from
==4289== ERROR SUMMARY: 156 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --direct-access=1 --inmemorydb=1    
==4294== Memcheck, a memory error detector
==4294== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4294== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4294== Command: ./test ../../testfiles/1/220.tst --direct-access=1 --inmemorydb=1
==4294== 
==4294== Thread 3:
==4294== Conditional jump or move depends on uninitialised value(s)
==4294==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4294==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4294==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4294==    by 0x418B33: Thread::run() (thread.hpp:90)
==4294==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4294==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4294==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4294== 
==4294== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4294==    at 0x53D06C3: ??? (syscall-template.S:82)
==4294==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==  Address 0xadddc82 is 162 bytes inside a block of size 8,280 alloc'd
==4294==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4294==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4294==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4294== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		0
	perf-cursor			5.549000
	perf-erase 			0.289000
	perf-find  			0.000000
	perf-insert			0.588000
	perf-misc  			0.182000
	perf-total		6.608000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.840000
	perf-erase 			0.138000
	perf-find  			0.000000
	perf-insert			0.245000
	perf-misc  			0.069000
	perf-total		2.292000
==4294== 
==4294== HEAP SUMMARY:
==4294==     in use at exit: 16 bytes in 2 blocks
==4294==   total heap usage: 90,017 allocs, 90,015 frees, 110,388,091 bytes allocated
==4294== 
==4294== LEAK SUMMARY:
==4294==    definitely lost: 8 bytes in 1 blocks
==4294==    indirectly lost: 0 bytes in 0 blocks
==4294==      possibly lost: 0 bytes in 0 blocks
==4294==    still reachable: 0 bytes in 0 blocks
==4294==         suppressed: 8 bytes in 1 blocks
==4294== Rerun with --leak-check=full to see details of leaked memory
==4294== 
==4294== For counts of detected and suppressed errors, rerun with: -v
==4294== Use --track-origins=yes to see where uninitialised values come from
==4294== ERROR SUMMARY: 101 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --direct-access=1 --inmemorydb=1    
==4299== Memcheck, a memory error detector
==4299== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4299== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4299== Command: ./test ../../testfiles/1/ext_020.tst --direct-access=1 --inmemorydb=1
==4299== 
==4299== Thread 3:
==4299== Conditional jump or move depends on uninitialised value(s)
==4299==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4299==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4299==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4299==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4299==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4299==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4299==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4299==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4299==    by 0x418B33: Thread::run() (thread.hpp:90)
==4299==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4299==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4299==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4299== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		0
	perf-cursor			0.046000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.092000
	perf-misc  			0.174000
	perf-total		0.312000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.024000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.040000
	perf-misc  			0.061000
	perf-total		0.125000
==4299== 
==4299== HEAP SUMMARY:
==4299==     in use at exit: 16 bytes in 2 blocks
==4299==   total heap usage: 1,716 allocs, 1,714 frees, 105,711,986 bytes allocated
==4299== 
==4299== LEAK SUMMARY:
==4299==    definitely lost: 8 bytes in 1 blocks
==4299==    indirectly lost: 0 bytes in 0 blocks
==4299==      possibly lost: 0 bytes in 0 blocks
==4299==    still reachable: 0 bytes in 0 blocks
==4299==         suppressed: 8 bytes in 1 blocks
==4299== Rerun with --leak-check=full to see details of leaked memory
==4299== 
==4299== For counts of detected and suppressed errors, rerun with: -v
==4299== Use --track-origins=yes to see where uninitialised values come from
==4299== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --direct-access=1 --inmemorydb=1    
==4304== Memcheck, a memory error detector
==4304== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4304== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4304== Command: ./test ../../testfiles/2/ext_060.tst --direct-access=1 --inmemorydb=1
==4304== 
==4304== Thread 3:
==4304== Conditional jump or move depends on uninitialised value(s)
==4304==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4304==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4304==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4304==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4304==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4304==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4304==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4304==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4304==    by 0x418B33: Thread::run() (thread.hpp:90)
==4304==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4304==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4304==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4304== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		0
	perf-cursor			35.954000
	perf-erase 			0.543000
	perf-find  			1.003000
	perf-insert			1.158000
	perf-misc  			0.180000
	perf-total		38.838002
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			19.584999
	perf-erase 			0.257000
	perf-find  			0.537000
	perf-insert			0.552000
	perf-misc  			0.066000
	perf-total		20.996999
==4304== 
==4304== HEAP SUMMARY:
==4304==     in use at exit: 16 bytes in 2 blocks
==4304==   total heap usage: 1,065,114 allocs, 1,065,112 frees, 138,733,787 bytes allocated
==4304== 
==4304== LEAK SUMMARY:
==4304==    definitely lost: 8 bytes in 1 blocks
==4304==    indirectly lost: 0 bytes in 0 blocks
==4304==      possibly lost: 0 bytes in 0 blocks
==4304==    still reachable: 0 bytes in 0 blocks
==4304==         suppressed: 8 bytes in 1 blocks
==4304== Rerun with --leak-check=full to see details of leaked memory
==4304== 
==4304== For counts of detected and suppressed errors, rerun with: -v
==4304== Use --track-origins=yes to see where uninitialised values come from
==4304== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --direct-access=1 --inmemorydb=1    
==4317== Memcheck, a memory error detector
==4317== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4317== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4317== Command: ./test ../../testfiles/2/blb-001.tst --direct-access=1 --inmemorydb=1
==4317== 
==4317== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4317==    at 0x53D06C3: ??? (syscall-template.S:82)
==4317==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F0E2DB: __db_goff (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4EF783F: __dbc_iget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F0585E: __dbc_get_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4268A0: Berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:366)
==4317==    by 0x42025C: Controller::compare_fullcheck(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:137)
==4317==    by 0x41F892: Controller::run(std::vector<Thread*, std::allocator<Thread*> >&) (controller.cpp:49)
==4317==  Address 0xac479d8 is 600 bytes inside a block of size 8,280 alloc'd
==4317==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4317==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4E62006: __bam_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F0CCED: __db_new_file (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F0D47E: __db_open (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x4F06B95: __db_open_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4317==    by 0x425A78: Berkeleydb::create_db() (berkeleydb.cpp:89)
==4317==    by 0x415196: Engine::create_db(bool) (engine.cpp:77)
==4317==    by 0x411660: Parser::process_line(unsigned int, Engine*) (parser.cpp:99)
==4317== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		0
	perf-cursor			4.400000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.972000
	perf-misc  			0.141000
	perf-total		5.513000
hamsterdb
	filesize		0
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.934000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.132000
	perf-misc  			0.071000
	perf-total		1.137000
==4317== 
==4317== HEAP SUMMARY:
==4317==     in use at exit: 16 bytes in 2 blocks
==4317==   total heap usage: 1,223 allocs, 1,221 frees, 277,094,708 bytes allocated
==4317== 
==4317== LEAK SUMMARY:
==4317==    definitely lost: 8 bytes in 1 blocks
==4317==    indirectly lost: 0 bytes in 0 blocks
==4317==      possibly lost: 0 bytes in 0 blocks
==4317==    still reachable: 0 bytes in 0 blocks
==4317==         suppressed: 8 bytes in 1 blocks
==4317== Rerun with --leak-check=full to see details of leaked memory
==4317== 
==4317== For counts of detected and suppressed errors, rerun with: -v
==4317== Use --track-origins=yes to see where uninitialised values come from
==4317== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-transactions=tmp    
==4323== Memcheck, a memory error detector
==4323== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4323== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4323== Command: ./test ../../testfiles/1/45.tst --use-transactions=tmp
==4323== 
==4323== Thread 3:
==4323== Conditional jump or move depends on uninitialised value(s)
==4323==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4323==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4323==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4323==    by 0x418B33: Thread::run() (thread.hpp:90)
==4323==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4323==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4323==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4323== 
==4323== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4323==    at 0x53D06C3: ??? (syscall-template.S:82)
==4323==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4323==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4323==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4323==    by 0x418B33: Thread::run() (thread.hpp:90)
==4323==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4323==  Address 0xad4e616 is 214 bytes inside a block of size 4,184 alloc'd
==4323==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4323==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4323==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4323== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.538000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.955000
	perf-misc  			0.348000
	perf-total		12.841000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			20.292000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			6.988000
	perf-misc  			0.210000
	perf-total		27.490001
==4323== 
==4323== HEAP SUMMARY:
==4323==     in use at exit: 16 bytes in 2 blocks
==4323==   total heap usage: 1,724,477 allocs, 1,724,475 frees, 320,228,279 bytes allocated
==4323== 
==4323== LEAK SUMMARY:
==4323==    definitely lost: 8 bytes in 1 blocks
==4323==    indirectly lost: 0 bytes in 0 blocks
==4323==      possibly lost: 0 bytes in 0 blocks
==4323==    still reachable: 0 bytes in 0 blocks
==4323==         suppressed: 8 bytes in 1 blocks
==4323== Rerun with --leak-check=full to see details of leaked memory
==4323== 
==4323== For counts of detected and suppressed errors, rerun with: -v
==4323== Use --track-origins=yes to see where uninitialised values come from
==4323== ERROR SUMMARY: 323 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-transactions=tmp    
==4329== Memcheck, a memory error detector
==4329== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4329== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4329== Command: ./test ../../testfiles/1/220.tst --use-transactions=tmp
==4329== 
==4329== Thread 3:
==4329== Conditional jump or move depends on uninitialised value(s)
==4329==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4329==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4329==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4329==    by 0x418B33: Thread::run() (thread.hpp:90)
==4329==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4329==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4329==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4329== 
==4329== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4329==    at 0x53D06C3: ??? (syscall-template.S:82)
==4329==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==  Address 0x126a6192 is 146 bytes inside a block of size 4,184 alloc'd
==4329==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4329==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4329==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4329== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.659000
	perf-erase 			0.344000
	perf-find  			0.000000
	perf-insert			0.641000
	perf-misc  			0.239000
	perf-total		7.883000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			8.547000
	perf-erase 			1.165000
	perf-find  			0.000000
	perf-insert			2.214000
	perf-misc  			0.196000
	perf-total		12.122000
==4329== 
==4329== HEAP SUMMARY:
==4329==     in use at exit: 16 bytes in 2 blocks
==4329==   total heap usage: 700,531 allocs, 700,529 frees, 188,774,490 bytes allocated
==4329== 
==4329== LEAK SUMMARY:
==4329==    definitely lost: 8 bytes in 1 blocks
==4329==    indirectly lost: 0 bytes in 0 blocks
==4329==      possibly lost: 0 bytes in 0 blocks
==4329==    still reachable: 0 bytes in 0 blocks
==4329==         suppressed: 8 bytes in 1 blocks
==4329== Rerun with --leak-check=full to see details of leaked memory
==4329== 
==4329== For counts of detected and suppressed errors, rerun with: -v
==4329== Use --track-origins=yes to see where uninitialised values come from
==4329== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-transactions=tmp    
==4334== Memcheck, a memory error detector
==4334== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4334== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4334== Command: ./test ../../testfiles/1/ext_020.tst --use-transactions=tmp
==4334== 
==4334== Thread 3:
==4334== Conditional jump or move depends on uninitialised value(s)
==4334==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4334==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4334==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4334==    by 0x418B33: Thread::run() (thread.hpp:90)
==4334==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4334==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4334==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4334== 
==4334== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4334==    at 0x53D06C3: ??? (syscall-template.S:82)
==4334==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4334==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4334==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4334==  Address 0xac7a8be is 126 bytes inside a block of size 4,184 alloc'd
==4334==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4334==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4334==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4334== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.045000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.133000
	perf-misc  			0.282000
	perf-total		0.460000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.061000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.213000
	perf-misc  			0.272000
	perf-total		0.546000
==4334== 
==4334== HEAP SUMMARY:
==4334==     in use at exit: 16 bytes in 2 blocks
==4334==   total heap usage: 2,933 allocs, 2,931 frees, 106,157,634 bytes allocated
==4334== 
==4334== LEAK SUMMARY:
==4334==    definitely lost: 8 bytes in 1 blocks
==4334==    indirectly lost: 0 bytes in 0 blocks
==4334==      possibly lost: 0 bytes in 0 blocks
==4334==    still reachable: 0 bytes in 0 blocks
==4334==         suppressed: 8 bytes in 1 blocks
==4334== Rerun with --leak-check=full to see details of leaked memory
==4334== 
==4334== For counts of detected and suppressed errors, rerun with: -v
==4334== Use --track-origins=yes to see where uninitialised values come from
==4334== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-transactions=tmp    
==4339== Memcheck, a memory error detector
==4339== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4339== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4339== Command: ./test ../../testfiles/2/ext_060.tst --use-transactions=tmp
==4339== 
==4339== Thread 3:
==4339== Conditional jump or move depends on uninitialised value(s)
==4339==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4339==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4339==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4339==    by 0x418B33: Thread::run() (thread.hpp:90)
==4339==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4339==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4339==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4339== 
==4339== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4339==    at 0x53D06C3: ??? (syscall-template.S:82)
==4339==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4339==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4339==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4339==  Address 0xb2ff16a is 410 bytes inside a block of size 4,184 alloc'd
==4339==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4339==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4339==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4339== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			39.275000
	perf-erase 			0.580000
	perf-find  			1.031000
	perf-insert			1.155000
	perf-misc  			0.282000
	perf-total		42.323001
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			77.711000
	perf-erase 			0.530000
	perf-find  			0.858000
	perf-insert			1.532000
	perf-misc  			0.311000
	perf-total		80.941998
==4339== 
==4339== HEAP SUMMARY:
==4339==     in use at exit: 16 bytes in 2 blocks
==4339==   total heap usage: 6,996,721 allocs, 6,996,719 frees, 874,594,927 bytes allocated
==4339== 
==4339== LEAK SUMMARY:
==4339==    definitely lost: 8 bytes in 1 blocks
==4339==    indirectly lost: 0 bytes in 0 blocks
==4339==      possibly lost: 0 bytes in 0 blocks
==4339==    still reachable: 0 bytes in 0 blocks
==4339==         suppressed: 8 bytes in 1 blocks
==4339== Rerun with --leak-check=full to see details of leaked memory
==4339== 
==4339== For counts of detected and suppressed errors, rerun with: -v
==4339== Use --track-origins=yes to see where uninitialised values come from
==4339== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-transactions=tmp    
==4344== Memcheck, a memory error detector
==4344== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4344== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4344== Command: ./test ../../testfiles/2/blb-001.tst --use-transactions=tmp
==4344== 
==4344== Thread 3:
==4344== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4344==    at 0x53D06C3: ??? (syscall-template.S:82)
==4344==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4344==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4344==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4344==  Address 0xac50c60 is 3,984 bytes inside a block of size 4,184 alloc'd
==4344==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4344==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4344== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.240000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.450000
	perf-misc  			0.250000
	perf-total		6.940000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			1.001000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			4.889000
	perf-misc  			0.145000
	perf-total		6.035000
==4344== 
==4344== HEAP SUMMARY:
==4344==     in use at exit: 16 bytes in 2 blocks
==4344==   total heap usage: 1,635 allocs, 1,633 frees, 277,669,743 bytes allocated
==4344== 
==4344== LEAK SUMMARY:
==4344==    definitely lost: 8 bytes in 1 blocks
==4344==    indirectly lost: 0 bytes in 0 blocks
==4344==      possibly lost: 0 bytes in 0 blocks
==4344==    still reachable: 0 bytes in 0 blocks
==4344==         suppressed: 8 bytes in 1 blocks
==4344== Rerun with --leak-check=full to see details of leaked memory
==4344== 
==4344== For counts of detected and suppressed errors, rerun with: -v
==4344== Use --track-origins=yes to see where uninitialised values come from
==4344== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-transactions=10    
==4351== Memcheck, a memory error detector
==4351== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4351== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4351== Command: ./test ../../testfiles/1/45.tst --use-transactions=10
==4351== 
==4351== Thread 3:
==4351== Conditional jump or move depends on uninitialised value(s)
==4351==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4351==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4351==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4351==    by 0x418B33: Thread::run() (thread.hpp:90)
==4351==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4351==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4351==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4351== 
==4351== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4351==    at 0x53D06C3: ??? (syscall-template.S:82)
==4351==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4351==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4351==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4351==    by 0x418B33: Thread::run() (thread.hpp:90)
==4351==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4351==  Address 0xad4ebf6 is 214 bytes inside a block of size 4,184 alloc'd
==4351==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4351==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4351==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4351== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			11.143000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.923000
	perf-misc  			0.351000
	perf-total		12.417000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			31.181001
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.280000
	perf-misc  			0.311000
	perf-total		32.772000
==4351== 
==4351== HEAP SUMMARY:
==4351==     in use at exit: 16 bytes in 2 blocks
==4351==   total heap usage: 3,692,529 allocs, 3,692,527 frees, 545,172,070 bytes allocated
==4351== 
==4351== LEAK SUMMARY:
==4351==    definitely lost: 8 bytes in 1 blocks
==4351==    indirectly lost: 0 bytes in 0 blocks
==4351==      possibly lost: 0 bytes in 0 blocks
==4351==    still reachable: 0 bytes in 0 blocks
==4351==         suppressed: 8 bytes in 1 blocks
==4351== Rerun with --leak-check=full to see details of leaked memory
==4351== 
==4351== For counts of detected and suppressed errors, rerun with: -v
==4351== Use --track-origins=yes to see where uninitialised values come from
==4351== ERROR SUMMARY: 324 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-transactions=10    
==4356== Memcheck, a memory error detector
==4356== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4356== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4356== Command: ./test ../../testfiles/1/220.tst --use-transactions=10
==4356== 
==4356== Thread 3:
==4356== Conditional jump or move depends on uninitialised value(s)
==4356==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4356==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4356==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4356==    by 0x418B33: Thread::run() (thread.hpp:90)
==4356==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4356==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4356==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4356== 
==4356== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4356==    at 0x53D06C3: ??? (syscall-template.S:82)
==4356==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==  Address 0x12a75e42 is 146 bytes inside a block of size 4,184 alloc'd
==4356==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4356==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4356==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4356== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.414000
	perf-erase 			0.318000
	perf-find  			0.000000
	perf-insert			0.582000
	perf-misc  			0.296000
	perf-total		7.610000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			10.949000
	perf-erase 			0.272000
	perf-find  			0.000000
	perf-insert			0.462000
	perf-misc  			0.192000
	perf-total		11.875000
==4356== 
==4356== HEAP SUMMARY:
==4356==     in use at exit: 16 bytes in 2 blocks
==4356==   total heap usage: 1,033,189 allocs, 1,033,187 frees, 228,998,978 bytes allocated
==4356== 
==4356== LEAK SUMMARY:
==4356==    definitely lost: 8 bytes in 1 blocks
==4356==    indirectly lost: 0 bytes in 0 blocks
==4356==      possibly lost: 0 bytes in 0 blocks
==4356==    still reachable: 0 bytes in 0 blocks
==4356==         suppressed: 8 bytes in 1 blocks
==4356== Rerun with --leak-check=full to see details of leaked memory
==4356== 
==4356== For counts of detected and suppressed errors, rerun with: -v
==4356== Use --track-origins=yes to see where uninitialised values come from
==4356== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-transactions=10    
==4361== Memcheck, a memory error detector
==4361== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4361== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4361== Command: ./test ../../testfiles/1/ext_020.tst --use-transactions=10
==4361== 
==4361== Thread 3:
==4361== Conditional jump or move depends on uninitialised value(s)
==4361==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4361==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4361==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4361==    by 0x418B33: Thread::run() (thread.hpp:90)
==4361==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4361==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4361==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4361== 
==4361== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4361==    at 0x53D06C3: ??? (syscall-template.S:82)
==4361==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4361==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4361==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4361==  Address 0xac5b75e is 126 bytes inside a block of size 4,184 alloc'd
==4361==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4361==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4361==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4361== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.041000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.095000
	perf-misc  			0.265000
	perf-total		0.401000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.083000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.033000
	perf-misc  			0.230000
	perf-total		0.346000
==4361== 
==4361== HEAP SUMMARY:
==4361==     in use at exit: 16 bytes in 2 blocks
==4361==   total heap usage: 3,088 allocs, 3,086 frees, 106,163,082 bytes allocated
==4361== 
==4361== LEAK SUMMARY:
==4361==    definitely lost: 8 bytes in 1 blocks
==4361==    indirectly lost: 0 bytes in 0 blocks
==4361==      possibly lost: 0 bytes in 0 blocks
==4361==    still reachable: 0 bytes in 0 blocks
==4361==         suppressed: 8 bytes in 1 blocks
==4361== Rerun with --leak-check=full to see details of leaked memory
==4361== 
==4361== For counts of detected and suppressed errors, rerun with: -v
==4361== Use --track-origins=yes to see where uninitialised values come from
==4361== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-transactions=10    
==4371== Memcheck, a memory error detector
==4371== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4371== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4371== Command: ./test ../../testfiles/2/ext_060.tst --use-transactions=10
==4371== 
==4371== Thread 3:
==4371== Conditional jump or move depends on uninitialised value(s)
==4371==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4371==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4371==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4371==    by 0x418B33: Thread::run() (thread.hpp:90)
==4371==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4371==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4371==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4371== 
==4371== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4371==    at 0x53D06C3: ??? (syscall-template.S:82)
==4371==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4371==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4371==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4371==  Address 0xb3327fa is 410 bytes inside a block of size 4,184 alloc'd
==4371==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4371==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4371==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4371== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			38.804001
	perf-erase 			0.527000
	perf-find  			0.984000
	perf-insert			1.156000
	perf-misc  			0.280000
	perf-total		41.750999
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			68.851999
	perf-erase 			0.483000
	perf-find  			0.695000
	perf-insert			1.049000
	perf-misc  			0.181000
	perf-total		71.259996
==4371== 
==4371== HEAP SUMMARY:
==4371==     in use at exit: 16 bytes in 2 blocks
==4371==   total heap usage: 5,774,172 allocs, 5,774,170 frees, 715,972,142 bytes allocated
==4371== 
==4371== LEAK SUMMARY:
==4371==    definitely lost: 8 bytes in 1 blocks
==4371==    indirectly lost: 0 bytes in 0 blocks
==4371==      possibly lost: 0 bytes in 0 blocks
==4371==    still reachable: 0 bytes in 0 blocks
==4371==         suppressed: 8 bytes in 1 blocks
==4371== Rerun with --leak-check=full to see details of leaked memory
==4371== 
==4371== For counts of detected and suppressed errors, rerun with: -v
==4371== Use --track-origins=yes to see where uninitialised values come from
==4371== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-transactions=10    
==4376== Memcheck, a memory error detector
==4376== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4376== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4376== Command: ./test ../../testfiles/2/blb-001.tst --use-transactions=10
==4376== 
==4376== Thread 3:
==4376== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4376==    at 0x53D06C3: ??? (syscall-template.S:82)
==4376==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4376==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4376==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4376==  Address 0xac50970 is 3,984 bytes inside a block of size 4,184 alloc'd
==4376==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4376==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4376== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.508000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.086000
	perf-misc  			0.251000
	perf-total		8.845000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.967000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.368000
	perf-misc  			0.294000
	perf-total		2.629000
==4376== 
==4376== HEAP SUMMARY:
==4376==     in use at exit: 16 bytes in 2 blocks
==4376==   total heap usage: 1,515 allocs, 1,513 frees, 358,624,899 bytes allocated
==4376== 
==4376== LEAK SUMMARY:
==4376==    definitely lost: 8 bytes in 1 blocks
==4376==    indirectly lost: 0 bytes in 0 blocks
==4376==      possibly lost: 0 bytes in 0 blocks
==4376==    still reachable: 0 bytes in 0 blocks
==4376==         suppressed: 8 bytes in 1 blocks
==4376== Rerun with --leak-check=full to see details of leaked memory
==4376== 
==4376== For counts of detected and suppressed errors, rerun with: -v
==4376== Use --track-origins=yes to see where uninitialised values come from
==4376== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-transactions=10000    
==4383== Memcheck, a memory error detector
==4383== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4383== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4383== Command: ./test ../../testfiles/1/45.tst --use-transactions=10000
==4383== 
==4383== Thread 3:
==4383== Conditional jump or move depends on uninitialised value(s)
==4383==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4383==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4383==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4383==    by 0x418B33: Thread::run() (thread.hpp:90)
==4383==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4383==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4383==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4383== 
==4383== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4383==    at 0x53D06C3: ??? (syscall-template.S:82)
==4383==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4383==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4383==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4383==    by 0x418B33: Thread::run() (thread.hpp:90)
==4383==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4383==  Address 0xad45316 is 214 bytes inside a block of size 4,184 alloc'd
==4383==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4383==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4383==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4383== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.256000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.918000
	perf-misc  			0.321000
	perf-total		11.495000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.015000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.252000
	perf-misc  			2.296000
	perf-total		9.563000
==4383== 
==4383== HEAP SUMMARY:
==4383==     in use at exit: 16 bytes in 2 blocks
==4383==   total heap usage: 128,762 allocs, 128,760 frees, 112,795,187 bytes allocated
==4383== 
==4383== LEAK SUMMARY:
==4383==    definitely lost: 8 bytes in 1 blocks
==4383==    indirectly lost: 0 bytes in 0 blocks
==4383==      possibly lost: 0 bytes in 0 blocks
==4383==    still reachable: 0 bytes in 0 blocks
==4383==         suppressed: 8 bytes in 1 blocks
==4383== Rerun with --leak-check=full to see details of leaked memory
==4383== 
==4383== For counts of detected and suppressed errors, rerun with: -v
==4383== Use --track-origins=yes to see where uninitialised values come from
==4383== ERROR SUMMARY: 323 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-transactions=10000    
==4388== Memcheck, a memory error detector
==4388== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4388== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4388== Command: ./test ../../testfiles/1/220.tst --use-transactions=10000
==4388== 
==4388== Thread 3:
==4388== Conditional jump or move depends on uninitialised value(s)
==4388==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4388==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4388==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4388==    by 0x418B33: Thread::run() (thread.hpp:90)
==4388==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4388==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4388==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4388== 
==4388== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4388==    at 0x53D06C3: ??? (syscall-template.S:82)
==4388==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==  Address 0xaf38b22 is 130 bytes inside a block of size 4,184 alloc'd
==4388==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4388==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4388==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4388== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.049000
	perf-erase 			0.344000
	perf-find  			0.000000
	perf-insert			0.548000
	perf-misc  			0.251000
	perf-total		7.192000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			3.146000
	perf-erase 			0.185000
	perf-find  			0.000000
	perf-insert			0.352000
	perf-misc  			1.326000
	perf-total		5.009000
==4388== 
==4388== HEAP SUMMARY:
==4388==     in use at exit: 16 bytes in 2 blocks
==4388==   total heap usage: 100,535 allocs, 100,533 frees, 111,498,887 bytes allocated
==4388== 
==4388== LEAK SUMMARY:
==4388==    definitely lost: 8 bytes in 1 blocks
==4388==    indirectly lost: 0 bytes in 0 blocks
==4388==      possibly lost: 0 bytes in 0 blocks
==4388==    still reachable: 0 bytes in 0 blocks
==4388==         suppressed: 8 bytes in 1 blocks
==4388== Rerun with --leak-check=full to see details of leaked memory
==4388== 
==4388== For counts of detected and suppressed errors, rerun with: -v
==4388== Use --track-origins=yes to see where uninitialised values come from
==4388== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-transactions=10000    
==4393== Memcheck, a memory error detector
==4393== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4393== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4393== Command: ./test ../../testfiles/1/ext_020.tst --use-transactions=10000
==4393== 
==4393== Thread 3:
==4393== Conditional jump or move depends on uninitialised value(s)
==4393==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4393==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4393==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4393==    by 0x418B33: Thread::run() (thread.hpp:90)
==4393==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4393==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4393==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4393== 
==4393== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4393==    at 0x53D06C3: ??? (syscall-template.S:82)
==4393==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4393==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4393==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4393==  Address 0xac5c14e is 126 bytes inside a block of size 4,184 alloc'd
==4393==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4393==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4393==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4393== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.043000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.104000
	perf-misc  			0.240000
	perf-total		0.387000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.023000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.037000
	perf-misc  			0.357000
	perf-total		0.417000
==4393== 
==4393== HEAP SUMMARY:
==4393==     in use at exit: 16 bytes in 2 blocks
==4393==   total heap usage: 1,635 allocs, 1,633 frees, 105,777,467 bytes allocated
==4393== 
==4393== LEAK SUMMARY:
==4393==    definitely lost: 8 bytes in 1 blocks
==4393==    indirectly lost: 0 bytes in 0 blocks
==4393==      possibly lost: 0 bytes in 0 blocks
==4393==    still reachable: 0 bytes in 0 blocks
==4393==         suppressed: 8 bytes in 1 blocks
==4393== Rerun with --leak-check=full to see details of leaked memory
==4393== 
==4393== For counts of detected and suppressed errors, rerun with: -v
==4393== Use --track-origins=yes to see where uninitialised values come from
==4393== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-transactions=10000    
==4398== Memcheck, a memory error detector
==4398== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4398== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4398== Command: ./test ../../testfiles/2/ext_060.tst --use-transactions=10000
==4398== 
==4398== Thread 3:
==4398== Conditional jump or move depends on uninitialised value(s)
==4398==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4398==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4398==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4398==    by 0x418B33: Thread::run() (thread.hpp:90)
==4398==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4398==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4398==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4398== 
==4398== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4398==    at 0x53D06C3: ??? (syscall-template.S:82)
==4398==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4398==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4398==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4398==  Address 0xb28113a is 410 bytes inside a block of size 4,184 alloc'd
==4398==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4398==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4398==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4398== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			38.438998
	perf-erase 			0.544000
	perf-find  			1.066000
	perf-insert			1.156000
	perf-misc  			0.273000
	perf-total		41.478001
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			56.769999
	perf-erase 			0.509000
	perf-find  			0.697000
	perf-insert			0.976000
	perf-misc  			0.178000
	perf-total		59.129999
==4398== 
==4398== HEAP SUMMARY:
==4398==     in use at exit: 16 bytes in 2 blocks
==4398==   total heap usage: 4,320,532 allocs, 4,320,530 frees, 548,114,426 bytes allocated
==4398== 
==4398== LEAK SUMMARY:
==4398==    definitely lost: 8 bytes in 1 blocks
==4398==    indirectly lost: 0 bytes in 0 blocks
==4398==      possibly lost: 0 bytes in 0 blocks
==4398==    still reachable: 0 bytes in 0 blocks
==4398==         suppressed: 8 bytes in 1 blocks
==4398== Rerun with --leak-check=full to see details of leaked memory
==4398== 
==4398== For counts of detected and suppressed errors, rerun with: -v
==4398== Use --track-origins=yes to see where uninitialised values come from
==4398== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-transactions=10000    
==4403== Memcheck, a memory error detector
==4403== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4403== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4403== Command: ./test ../../testfiles/2/blb-001.tst --use-transactions=10000
==4403== 
==4403== Thread 3:
==4403== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4403==    at 0x53D06C3: ??? (syscall-template.S:82)
==4403==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4403==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4403==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4403==  Address 0xac50e60 is 3,984 bytes inside a block of size 4,184 alloc'd
==4403==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4403==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4403== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.534000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.825000
	perf-misc  			0.280000
	perf-total		6.639000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.919000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			3.215000
	perf-misc  			0.382000
	perf-total		4.516000
==4403== 
==4403== HEAP SUMMARY:
==4403==     in use at exit: 16 bytes in 2 blocks
==4403==   total heap usage: 1,396 allocs, 1,394 frees, 318,124,643 bytes allocated
==4403== 
==4403== LEAK SUMMARY:
==4403==    definitely lost: 8 bytes in 1 blocks
==4403==    indirectly lost: 0 bytes in 0 blocks
==4403==      possibly lost: 0 bytes in 0 blocks
==4403==    still reachable: 0 bytes in 0 blocks
==4403==         suppressed: 8 bytes in 1 blocks
==4403== Rerun with --leak-check=full to see details of leaked memory
==4403== 
==4403== For counts of detected and suppressed errors, rerun with: -v
==4403== Use --track-origins=yes to see where uninitialised values come from
==4403== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


running ../../testfiles/1/45.tst --use-transactions=all    
==4409== Memcheck, a memory error detector
==4409== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4409== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4409== Command: ./test ../../testfiles/1/45.tst --use-transactions=all
==4409== 
==4409== Thread 3:
==4409== Conditional jump or move depends on uninitialised value(s)
==4409==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4409==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4409==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4409==    by 0x418B33: Thread::run() (thread.hpp:90)
==4409==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4409==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4409==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4409== 
==4409== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4409==    at 0x53D06C3: ??? (syscall-template.S:82)
==4409==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F04A64: __db_sync_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x425F09: Berkeleydb::flush() (berkeleydb.cpp:183)
==4409==    by 0x415C78: Engine::flush() (engine.cpp:314)
==4409==    by 0x411AB9: Parser::process_line(unsigned int, Engine*) (parser.cpp:164)
==4409==    by 0x418B33: Thread::run() (thread.hpp:90)
==4409==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4409==  Address 0xad458b6 is 214 bytes inside a block of size 4,184 alloc'd
==4409==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4409==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4409==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4409== 
[OK] ../../testfiles/1/45.tst
berkeleydb
	filesize		872448
	perf-cursor			10.278000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.921000
	perf-misc  			0.302000
	perf-total		11.501000
hamsterdb
	filesize		966656
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			6.101000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.985000
	perf-misc  			2.109000
	perf-total		9.195000
==4409== 
==4409== HEAP SUMMARY:
==4409==     in use at exit: 16 bytes in 2 blocks
==4409==   total heap usage: 128,762 allocs, 128,760 frees, 112,795,187 bytes allocated
==4409== 
==4409== LEAK SUMMARY:
==4409==    definitely lost: 8 bytes in 1 blocks
==4409==    indirectly lost: 0 bytes in 0 blocks
==4409==      possibly lost: 0 bytes in 0 blocks
==4409==    still reachable: 0 bytes in 0 blocks
==4409==         suppressed: 8 bytes in 1 blocks
==4409== Rerun with --leak-check=full to see details of leaked memory
==4409== 
==4409== For counts of detected and suppressed errors, rerun with: -v
==4409== Use --track-origins=yes to see where uninitialised values come from
==4409== ERROR SUMMARY: 323 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/220.tst --use-transactions=all    
==4415== Memcheck, a memory error detector
==4415== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4415== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4415== Command: ./test ../../testfiles/1/220.tst --use-transactions=all
==4415== 
==4415== Thread 3:
==4415== Conditional jump or move depends on uninitialised value(s)
==4415==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4415==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4415==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4415==    by 0x418B33: Thread::run() (thread.hpp:90)
==4415==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4415==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4415==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4415== 
==4415== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4415==    at 0x53D06C3: ??? (syscall-template.S:82)
==4415==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F4704A: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==  Address 0xae8a762 is 146 bytes inside a block of size 4,184 alloc'd
==4415==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4415==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4E72A16: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4415==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4415== 
[OK] ../../testfiles/1/220.tst
berkeleydb
	filesize		684032
	perf-cursor			6.260000
	perf-erase 			0.344000
	perf-find  			0.000000
	perf-insert			0.526000
	perf-misc  			0.279000
	perf-total		7.409000
hamsterdb
	filesize		442368
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			2.964000
	perf-erase 			0.197000
	perf-find  			0.000000
	perf-insert			0.341000
	perf-misc  			1.229000
	perf-total		4.731000
==4415== 
==4415== HEAP SUMMARY:
==4415==     in use at exit: 16 bytes in 2 blocks
==4415==   total heap usage: 100,535 allocs, 100,533 frees, 111,498,887 bytes allocated
==4415== 
==4415== LEAK SUMMARY:
==4415==    definitely lost: 8 bytes in 1 blocks
==4415==    indirectly lost: 0 bytes in 0 blocks
==4415==      possibly lost: 0 bytes in 0 blocks
==4415==    still reachable: 0 bytes in 0 blocks
==4415==         suppressed: 8 bytes in 1 blocks
==4415== Rerun with --leak-check=full to see details of leaked memory
==4415== 
==4415== For counts of detected and suppressed errors, rerun with: -v
==4415== Use --track-origins=yes to see where uninitialised values come from
==4415== ERROR SUMMARY: 251 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/1/ext_020.tst --use-transactions=all    
==4420== Memcheck, a memory error detector
==4420== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4420== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4420== Command: ./test ../../testfiles/1/ext_020.tst --use-transactions=all
==4420== 
==4420== Thread 3:
==4420== Conditional jump or move depends on uninitialised value(s)
==4420==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4420==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4420==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4420==    by 0x418B33: Thread::run() (thread.hpp:90)
==4420==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4420==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4420==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4420== 
==4420== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4420==    at 0x53D06C3: ??? (syscall-template.S:82)
==4420==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4420==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4420==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4420==  Address 0xac5c14e is 126 bytes inside a block of size 4,184 alloc'd
==4420==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4420==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4420==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4420== 
[OK] ../../testfiles/1/ext_020.tst
berkeleydb
	filesize		8192
	perf-cursor			0.037000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.098000
	perf-misc  			0.300000
	perf-total		0.435000
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.030000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			0.075000
	perf-misc  			0.294000
	perf-total		0.399000
==4420== 
==4420== HEAP SUMMARY:
==4420==     in use at exit: 16 bytes in 2 blocks
==4420==   total heap usage: 1,635 allocs, 1,633 frees, 105,777,467 bytes allocated
==4420== 
==4420== LEAK SUMMARY:
==4420==    definitely lost: 8 bytes in 1 blocks
==4420==    indirectly lost: 0 bytes in 0 blocks
==4420==      possibly lost: 0 bytes in 0 blocks
==4420==    still reachable: 0 bytes in 0 blocks
==4420==         suppressed: 8 bytes in 1 blocks
==4420== Rerun with --leak-check=full to see details of leaked memory
==4420== 
==4420== For counts of detected and suppressed errors, rerun with: -v
==4420== Use --track-origins=yes to see where uninitialised values come from
==4420== ERROR SUMMARY: 19 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/ext_060.tst --use-transactions=all    
==4425== Memcheck, a memory error detector
==4425== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4425== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4425== Command: ./test ../../testfiles/2/ext_060.tst --use-transactions=all
==4425== 
==4425== Thread 3:
==4425== Conditional jump or move depends on uninitialised value(s)
==4425==    at 0x4E6E304: __bam_stkrel (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4E5F15D: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4425==    by 0x4155EB: Engine::insert(unsigned int, char const*, char const*) (engine.cpp:174)
==4425==    by 0x411840: Parser::process_line(unsigned int, Engine*) (parser.cpp:129)
==4425==    by 0x418B33: Thread::run() (thread.hpp:90)
==4425==    by 0x41B5EC: boost::_mfi::mf0<void, Thread>::operator()(Thread*) const (mem_fn_template.hpp:49)
==4425==    by 0x41B54F: void boost::_bi::list1<boost::_bi::value<Thread*> >::operator()<boost::_mfi::mf0<void, Thread>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, Thread>&, boost::_bi::list0&, int) (bind.hpp:253)
==4425==    by 0x41B4F4: boost::_bi::bind_t<void, boost::_mfi::mf0<void, Thread>, boost::_bi::list1<boost::_bi::value<Thread*> > >::operator()() (bind_template.hpp:20)
==4425== 
==4425== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4425==    at 0x53D06C3: ??? (syscall-template.S:82)
==4425==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4425==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4425==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4425==  Address 0xb28113a is 410 bytes inside a block of size 4,184 alloc'd
==4425==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4425==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F0B482: __db_new (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4E72F7F: __bam_split (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4E5F0C7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4425==    by 0x4260FB: Berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:217)
==4425== 
[OK] ../../testfiles/2/ext_060.tst
berkeleydb
	filesize		8192
	perf-cursor			36.628001
	perf-erase 			0.489000
	perf-find  			1.021000
	perf-insert			1.150000
	perf-misc  			0.274000
	perf-total		39.561998
hamsterdb
	filesize		65536
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			22.450999
	perf-erase 			0.535000
	perf-find  			0.574000
	perf-insert			0.603000
	perf-misc  			0.396000
	perf-total		24.559000
==4425== 
==4425== HEAP SUMMARY:
==4425==     in use at exit: 16 bytes in 2 blocks
==4425==   total heap usage: 668,580 allocs, 668,578 frees, 126,624,186 bytes allocated
==4425== 
==4425== LEAK SUMMARY:
==4425==    definitely lost: 8 bytes in 1 blocks
==4425==    indirectly lost: 0 bytes in 0 blocks
==4425==      possibly lost: 0 bytes in 0 blocks
==4425==    still reachable: 0 bytes in 0 blocks
==4425==         suppressed: 8 bytes in 1 blocks
==4425== Rerun with --leak-check=full to see details of leaked memory
==4425== 
==4425== For counts of detected and suppressed errors, rerun with: -v
==4425== Use --track-origins=yes to see where uninitialised values come from
==4425== ERROR SUMMARY: 15 errors from 2 contexts (suppressed: 2 from 2)


running ../../testfiles/2/blb-001.tst --use-transactions=all    
==4430== Memcheck, a memory error detector
==4430== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==4430== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==4430== Command: ./test ../../testfiles/2/blb-001.tst --use-transactions=all
==4430== 
==4430== Thread 3:
==4430== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4430==    at 0x53D06C3: ??? (syscall-template.S:82)
==4430==    by 0x4F5AA68: __os_io (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4F47C1C: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4F47E12: __memp_bhwrite (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4F57126: __memp_sync_int (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4EF52F6: __db_sync (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4EF2EDF: __db_refresh (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4EF3163: __db_close (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4F02E35: __db_close_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x425DA4: Berkeleydb::close_env() (berkeleydb.cpp:148)
==4430==    by 0x415BCC: Engine::close_env() (engine.cpp:301)
==4430==    by 0x411A84: Parser::process_line(unsigned int, Engine*) (parser.cpp:161)
==4430==  Address 0xac50c70 is 3,984 bytes inside a block of size 4,184 alloc'd
==4430==    at 0x4C2B3F8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4430==    by 0x4F58264: __os_malloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4F258A5: __env_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4F46678: __memp_alloc (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4F498B3: __memp_fget (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4E6E651: __bam_get_root (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4E6EDC7: __bam_search (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4E5AD60: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4E5F1B7: ??? (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4EF6DF6: __dbc_iput (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4EF4A3F: __db_put (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430==    by 0x4F0671C: __db_put_pp (in /usr/lib/x86_64-linux-gnu/libdb-5.1.so)
==4430== 
[OK] ../../testfiles/2/blb-001.tst
berkeleydb
	filesize		50266112
	perf-cursor			5.408000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			2.790000
	perf-misc  			0.302000
	perf-total		8.500000
hamsterdb
	filesize		50315264
	mem-num-allocs		0
	mem-peak-bytes		0
	mem-total-bytes		0
	perf-cursor			0.920000
	perf-erase 			0.000000
	perf-find  			0.000000
	perf-insert			1.893000
	perf-misc  			0.447000
	perf-total		3.260000
==4430== 
==4430== HEAP SUMMARY:
==4430==     in use at exit: 16 bytes in 2 blocks
==4430==   total heap usage: 1,396 allocs, 1,394 frees, 318,124,643 bytes allocated
==4430== 
==4430== LEAK SUMMARY:
==4430==    definitely lost: 8 bytes in 1 blocks
==4430==    indirectly lost: 0 bytes in 0 blocks
==4430==      possibly lost: 0 bytes in 0 blocks
==4430==    still reachable: 0 bytes in 0 blocks
==4430==         suppressed: 8 bytes in 1 blocks
==4430== Rerun with --leak-check=full to see details of leaked memory
==4430== 
==4430== For counts of detected and suppressed errors, rerun with: -v
==4430== Use --track-origins=yes to see where uninitialised values come from
==4430== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)


